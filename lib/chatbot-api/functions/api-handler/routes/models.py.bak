from typing import Any

import genai_core.models
import genai_core.parameters
from aws_lambda_powertools import Logger, Tracer
from aws_lambda_powertools.event_handler.appsync import Router
from genai_core.auth import UserPermissions

tracer = Tracer()
router = Router()
logger = Logger()
permissions = UserPermissions(router)


# Define the resolver directly on the router object
@router.resolver(field_name="listModels")
@tracer.capture_method
@permissions.approved_roles([
    permissions.ADMIN_ROLE,
    permissions.WORKSPACES_MANAGER_ROLE
])
def models() -> list[dict[str, Any]]:
    try:
        # Add error handling around the model listing
        return genai_core.models.list_models()
    except Exception as e:
        logger.exception(f"Error listing models: {str(e)}")
        # Return an empty list instead of failing completely
        return []
