Shared config: {
  prefix: '',
  bedrock: {
    enabled: true,
    region: 'us-west-2',
    endpointUrl: 'https://bedrock.us-west-2.amazonaws.com'
  },
  llms: [ 'Llama2_13b_Base' ],
  rag: {
    enabled: true,
    engines: { aurora: [Object], opensearch: [Object], kendra: [Object] },
    embeddingsModels: [ [Object], [Object], [Object], [Object] ],
    crossEncoderModels: [ [Object] ]
  }
}
Description: AWS LLM CHATBOT (uksb-1tupboc16)
Resources:
  SharedVPC6716DA5E:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: GenAIChatBotStack/Shared/VPC
    Metadata:
      aws:cdk:path: GenAIChatBotStack/Shared/VPC/Resource
  SharedVPCpublicSubnet1SubnetDA8AC0A0:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      CidrBlock: 10.0.0.0/19
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: GenAIChatBotStack/Shared/VPC/publicSubnet1
      VpcId:
        Ref: SharedVPC6716DA5E
    Metadata:
      aws:cdk:path: GenAIChatBotStack/Shared/VPC/publicSubnet1/Subnet
  SharedVPCpublicSubnet1RouteTableCE49215C:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value: GenAIChatBotStack/Shared/VPC/publicSubnet1
      VpcId:
        Ref: SharedVPC6716DA5E
    Metadata:
      aws:cdk:path: GenAIChatBotStack/Shared/VPC/publicSubnet1/RouteTable
  SharedVPCpublicSubnet1RouteTableAssociationB17F0447:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: SharedVPCpublicSubnet1RouteTableCE49215C
      SubnetId:
        Ref: SharedVPCpublicSubnet1SubnetDA8AC0A0
    Metadata:
      aws:cdk:path: GenAIChatBotStack/Shared/VPC/publicSubnet1/RouteTableAssociation
  SharedVPCpublicSubnet1DefaultRouteC6B32517:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: SharedVPCIGW91FEB7EF
      RouteTableId:
        Ref: SharedVPCpublicSubnet1RouteTableCE49215C
    DependsOn:
      - SharedVPCVPCGWA47152A6
    Metadata:
      aws:cdk:path: GenAIChatBotStack/Shared/VPC/publicSubnet1/DefaultRoute
  SharedVPCpublicSubnet1EIPA9E2FC1C:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: GenAIChatBotStack/Shared/VPC/publicSubnet1
    Metadata:
      aws:cdk:path: GenAIChatBotStack/Shared/VPC/publicSubnet1/EIP
  SharedVPCpublicSubnet1NATGateway5CEA2F2A:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
          - SharedVPCpublicSubnet1EIPA9E2FC1C
          - AllocationId
      SubnetId:
        Ref: SharedVPCpublicSubnet1SubnetDA8AC0A0
      Tags:
        - Key: Name
          Value: GenAIChatBotStack/Shared/VPC/publicSubnet1
    DependsOn:
      - SharedVPCpublicSubnet1DefaultRouteC6B32517
      - SharedVPCpublicSubnet1RouteTableAssociationB17F0447
    Metadata:
      aws:cdk:path: GenAIChatBotStack/Shared/VPC/publicSubnet1/NATGateway
  SharedVPCpublicSubnet2SubnetC1B203C4:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      CidrBlock: 10.0.32.0/19
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: GenAIChatBotStack/Shared/VPC/publicSubnet2
      VpcId:
        Ref: SharedVPC6716DA5E
    Metadata:
      aws:cdk:path: GenAIChatBotStack/Shared/VPC/publicSubnet2/Subnet
  SharedVPCpublicSubnet2RouteTableCF47EAD7:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value: GenAIChatBotStack/Shared/VPC/publicSubnet2
      VpcId:
        Ref: SharedVPC6716DA5E
    Metadata:
      aws:cdk:path: GenAIChatBotStack/Shared/VPC/publicSubnet2/RouteTable
  SharedVPCpublicSubnet2RouteTableAssociation1D77511F:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: SharedVPCpublicSubnet2RouteTableCF47EAD7
      SubnetId:
        Ref: SharedVPCpublicSubnet2SubnetC1B203C4
    Metadata:
      aws:cdk:path: GenAIChatBotStack/Shared/VPC/publicSubnet2/RouteTableAssociation
  SharedVPCpublicSubnet2DefaultRouteCA89B67C:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: SharedVPCIGW91FEB7EF
      RouteTableId:
        Ref: SharedVPCpublicSubnet2RouteTableCF47EAD7
    DependsOn:
      - SharedVPCVPCGWA47152A6
    Metadata:
      aws:cdk:path: GenAIChatBotStack/Shared/VPC/publicSubnet2/DefaultRoute
  SharedVPCprivateSubnet1Subnet5A4C2616:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      CidrBlock: 10.0.64.0/19
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: GenAIChatBotStack/Shared/VPC/privateSubnet1
      VpcId:
        Ref: SharedVPC6716DA5E
    Metadata:
      aws:cdk:path: GenAIChatBotStack/Shared/VPC/privateSubnet1/Subnet
  SharedVPCprivateSubnet1RouteTable58B60459:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value: GenAIChatBotStack/Shared/VPC/privateSubnet1
      VpcId:
        Ref: SharedVPC6716DA5E
    Metadata:
      aws:cdk:path: GenAIChatBotStack/Shared/VPC/privateSubnet1/RouteTable
  SharedVPCprivateSubnet1RouteTableAssociation83D920FA:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: SharedVPCprivateSubnet1RouteTable58B60459
      SubnetId:
        Ref: SharedVPCprivateSubnet1Subnet5A4C2616
    Metadata:
      aws:cdk:path: GenAIChatBotStack/Shared/VPC/privateSubnet1/RouteTableAssociation
  SharedVPCprivateSubnet1DefaultRoute608F3753:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: SharedVPCpublicSubnet1NATGateway5CEA2F2A
      RouteTableId:
        Ref: SharedVPCprivateSubnet1RouteTable58B60459
    Metadata:
      aws:cdk:path: GenAIChatBotStack/Shared/VPC/privateSubnet1/DefaultRoute
  SharedVPCprivateSubnet2SubnetF203CD06:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      CidrBlock: 10.0.96.0/19
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: GenAIChatBotStack/Shared/VPC/privateSubnet2
      VpcId:
        Ref: SharedVPC6716DA5E
    Metadata:
      aws:cdk:path: GenAIChatBotStack/Shared/VPC/privateSubnet2/Subnet
  SharedVPCprivateSubnet2RouteTable36F07E09:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value: GenAIChatBotStack/Shared/VPC/privateSubnet2
      VpcId:
        Ref: SharedVPC6716DA5E
    Metadata:
      aws:cdk:path: GenAIChatBotStack/Shared/VPC/privateSubnet2/RouteTable
  SharedVPCprivateSubnet2RouteTableAssociation6788E94C:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: SharedVPCprivateSubnet2RouteTable36F07E09
      SubnetId:
        Ref: SharedVPCprivateSubnet2SubnetF203CD06
    Metadata:
      aws:cdk:path: GenAIChatBotStack/Shared/VPC/privateSubnet2/RouteTableAssociation
  SharedVPCprivateSubnet2DefaultRoute4387C202:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: SharedVPCpublicSubnet1NATGateway5CEA2F2A
      RouteTableId:
        Ref: SharedVPCprivateSubnet2RouteTable36F07E09
    Metadata:
      aws:cdk:path: GenAIChatBotStack/Shared/VPC/privateSubnet2/DefaultRoute
  SharedVPCisolatedSubnet1SubnetAE743C40:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      CidrBlock: 10.0.128.0/19
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: isolated
        - Key: aws-cdk:subnet-type
          Value: Isolated
        - Key: Name
          Value: GenAIChatBotStack/Shared/VPC/isolatedSubnet1
      VpcId:
        Ref: SharedVPC6716DA5E
    Metadata:
      aws:cdk:path: GenAIChatBotStack/Shared/VPC/isolatedSubnet1/Subnet
  SharedVPCisolatedSubnet1RouteTableFEE7065A:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value: GenAIChatBotStack/Shared/VPC/isolatedSubnet1
      VpcId:
        Ref: SharedVPC6716DA5E
    Metadata:
      aws:cdk:path: GenAIChatBotStack/Shared/VPC/isolatedSubnet1/RouteTable
  SharedVPCisolatedSubnet1RouteTableAssociation9FA2357F:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: SharedVPCisolatedSubnet1RouteTableFEE7065A
      SubnetId:
        Ref: SharedVPCisolatedSubnet1SubnetAE743C40
    Metadata:
      aws:cdk:path: GenAIChatBotStack/Shared/VPC/isolatedSubnet1/RouteTableAssociation
  SharedVPCisolatedSubnet2SubnetBC723A26:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      CidrBlock: 10.0.160.0/19
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: isolated
        - Key: aws-cdk:subnet-type
          Value: Isolated
        - Key: Name
          Value: GenAIChatBotStack/Shared/VPC/isolatedSubnet2
      VpcId:
        Ref: SharedVPC6716DA5E
    Metadata:
      aws:cdk:path: GenAIChatBotStack/Shared/VPC/isolatedSubnet2/Subnet
  SharedVPCisolatedSubnet2RouteTable661FCE70:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value: GenAIChatBotStack/Shared/VPC/isolatedSubnet2
      VpcId:
        Ref: SharedVPC6716DA5E
    Metadata:
      aws:cdk:path: GenAIChatBotStack/Shared/VPC/isolatedSubnet2/RouteTable
  SharedVPCisolatedSubnet2RouteTableAssociation61642BDD:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: SharedVPCisolatedSubnet2RouteTable661FCE70
      SubnetId:
        Ref: SharedVPCisolatedSubnet2SubnetBC723A26
    Metadata:
      aws:cdk:path: GenAIChatBotStack/Shared/VPC/isolatedSubnet2/RouteTableAssociation
  SharedVPCIGW91FEB7EF:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: GenAIChatBotStack/Shared/VPC
    Metadata:
      aws:cdk:path: GenAIChatBotStack/Shared/VPC/IGW
  SharedVPCVPCGWA47152A6:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId:
        Ref: SharedVPCIGW91FEB7EF
      VpcId:
        Ref: SharedVPC6716DA5E
    Metadata:
      aws:cdk:path: GenAIChatBotStack/Shared/VPC/VPCGW
  SharedVPCRestrictDefaultSecurityGroupCustomResourceF8A09C87:
    Type: Custom::VpcRestrictDefaultSG
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E
          - Arn
      DefaultSecurityGroupId:
        Fn::GetAtt:
          - SharedVPC6716DA5E
          - DefaultSecurityGroup
      Account:
        Ref: AWS::AccountId
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: GenAIChatBotStack/Shared/VPC/RestrictDefaultSecurityGroupCustomResource/Default
  SharedVPCS3GatewayEndpoint13AA3DEC:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      RouteTableIds:
        - Ref: SharedVPCprivateSubnet1RouteTable58B60459
        - Ref: SharedVPCprivateSubnet2RouteTable36F07E09
        - Ref: SharedVPCpublicSubnet1RouteTableCE49215C
        - Ref: SharedVPCpublicSubnet2RouteTableCF47EAD7
        - Ref: SharedVPCisolatedSubnet1RouteTableFEE7065A
        - Ref: SharedVPCisolatedSubnet2RouteTable661FCE70
      ServiceName:
        Fn::Join:
          - ""
          - - com.amazonaws.
            - Ref: AWS::Region
            - .s3
      VpcEndpointType: Gateway
      VpcId:
        Ref: SharedVPC6716DA5E
    Metadata:
      aws:cdk:path: GenAIChatBotStack/Shared/VPC/S3GatewayEndpoint/Resource
  SharedVPCS3InterfaceEndpointSecurityGroup06522FDD:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: GenAIChatBotStack/Shared/VPC/S3InterfaceEndpoint/SecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      SecurityGroupIngress:
        - CidrIp:
            Fn::GetAtt:
              - SharedVPC6716DA5E
              - CidrBlock
          Description:
            Fn::Join:
              - ""
              - - "from "
                - Fn::GetAtt:
                    - SharedVPC6716DA5E
                    - CidrBlock
                - :443
          FromPort: 443
          IpProtocol: tcp
          ToPort: 443
      Tags:
        - Key: Name
          Value: GenAIChatBotStack/Shared/VPC
      VpcId:
        Ref: SharedVPC6716DA5E
    DependsOn:
      - SharedVPCS3GatewayEndpoint13AA3DEC
    Metadata:
      aws:cdk:path: GenAIChatBotStack/Shared/VPC/S3InterfaceEndpoint/SecurityGroup/Resource
  SharedVPCS3InterfaceEndpointD26A9383:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PrivateDnsEnabled: true
      SecurityGroupIds:
        - Fn::GetAtt:
            - SharedVPCS3InterfaceEndpointSecurityGroup06522FDD
            - GroupId
      ServiceName:
        Fn::Join:
          - ""
          - - com.amazonaws.
            - Ref: AWS::Region
            - .s3
      SubnetIds:
        - Ref: SharedVPCprivateSubnet1Subnet5A4C2616
        - Ref: SharedVPCprivateSubnet2SubnetF203CD06
      VpcEndpointType: Interface
      VpcId:
        Ref: SharedVPC6716DA5E
    DependsOn:
      - SharedVPCS3GatewayEndpoint13AA3DEC
    Metadata:
      aws:cdk:path: GenAIChatBotStack/Shared/VPC/S3InterfaceEndpoint/Resource
  SharedVPCDynamoDBEndpoint7FDC246D:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      RouteTableIds:
        - Ref: SharedVPCprivateSubnet1RouteTable58B60459
        - Ref: SharedVPCprivateSubnet2RouteTable36F07E09
        - Ref: SharedVPCpublicSubnet1RouteTableCE49215C
        - Ref: SharedVPCpublicSubnet2RouteTableCF47EAD7
        - Ref: SharedVPCisolatedSubnet1RouteTableFEE7065A
        - Ref: SharedVPCisolatedSubnet2RouteTable661FCE70
      ServiceName:
        Fn::Join:
          - ""
          - - com.amazonaws.
            - Ref: AWS::Region
            - .dynamodb
      VpcEndpointType: Gateway
      VpcId:
        Ref: SharedVPC6716DA5E
    Metadata:
      aws:cdk:path: GenAIChatBotStack/Shared/VPC/DynamoDBEndpoint/Resource
  SharedVPCSecretsManagerEndpointSecurityGroup3699366E:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: GenAIChatBotStack/Shared/VPC/SecretsManagerEndpoint/SecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      SecurityGroupIngress:
        - CidrIp:
            Fn::GetAtt:
              - SharedVPC6716DA5E
              - CidrBlock
          Description:
            Fn::Join:
              - ""
              - - "from "
                - Fn::GetAtt:
                    - SharedVPC6716DA5E
                    - CidrBlock
                - :443
          FromPort: 443
          IpProtocol: tcp
          ToPort: 443
      Tags:
        - Key: Name
          Value: GenAIChatBotStack/Shared/VPC
      VpcId:
        Ref: SharedVPC6716DA5E
    Metadata:
      aws:cdk:path: GenAIChatBotStack/Shared/VPC/SecretsManagerEndpoint/SecurityGroup/Resource
  SharedVPCSecretsManagerEndpoint55576342:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PrivateDnsEnabled: true
      SecurityGroupIds:
        - Fn::GetAtt:
            - SharedVPCSecretsManagerEndpointSecurityGroup3699366E
            - GroupId
      ServiceName:
        Fn::Join:
          - ""
          - - com.amazonaws.
            - Ref: AWS::Region
            - .secretsmanager
      SubnetIds:
        - Ref: SharedVPCprivateSubnet1Subnet5A4C2616
        - Ref: SharedVPCprivateSubnet2SubnetF203CD06
      VpcEndpointType: Interface
      VpcId:
        Ref: SharedVPC6716DA5E
    Metadata:
      aws:cdk:path: GenAIChatBotStack/Shared/VPC/SecretsManagerEndpoint/Resource
  SharedVPCSageMakerRuntimeEndpointSecurityGroupFC2965AE:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: GenAIChatBotStack/Shared/VPC/SageMakerRuntimeEndpoint/SecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      SecurityGroupIngress:
        - CidrIp:
            Fn::GetAtt:
              - SharedVPC6716DA5E
              - CidrBlock
          Description:
            Fn::Join:
              - ""
              - - "from "
                - Fn::GetAtt:
                    - SharedVPC6716DA5E
                    - CidrBlock
                - :443
          FromPort: 443
          IpProtocol: tcp
          ToPort: 443
      Tags:
        - Key: Name
          Value: GenAIChatBotStack/Shared/VPC
      VpcId:
        Ref: SharedVPC6716DA5E
    Metadata:
      aws:cdk:path: GenAIChatBotStack/Shared/VPC/SageMakerRuntimeEndpoint/SecurityGroup/Resource
  SharedVPCSageMakerRuntimeEndpoint7727FF26:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PrivateDnsEnabled: true
      SecurityGroupIds:
        - Fn::GetAtt:
            - SharedVPCSageMakerRuntimeEndpointSecurityGroupFC2965AE
            - GroupId
      ServiceName:
        Fn::Join:
          - ""
          - - com.amazonaws.
            - Ref: AWS::Region
            - .sagemaker.runtime
      SubnetIds:
        - Ref: SharedVPCprivateSubnet1Subnet5A4C2616
        - Ref: SharedVPCprivateSubnet2SubnetF203CD06
      VpcEndpointType: Interface
      VpcId:
        Ref: SharedVPC6716DA5E
    Metadata:
      aws:cdk:path: GenAIChatBotStack/Shared/VPC/SageMakerRuntimeEndpoint/Resource
  SharedConfig358B4A20:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Value: '{"prefix":"","bedrock":{"enabled":true,"region":"us-west-2","endpointUrl":"https://bedrock.us-west-2.amazonaws.com"},"llms":["Llama2_13b_Base"],"rag":{"enabled":true,"engines":{"aurora":{"enabled":true},"opensearch":{"enabled":false},"kendra":{"enabled":false,"external":[]}},"embeddingsModels":[{"provider":"sagemaker","name":"intfloat/multilingual-e5-large","dimensions":1024,"default":true},{"provider":"sagemaker","name":"sentence-transformers/all-MiniLM-L6-v2","dimensions":384},{"provider":"bedrock","name":"amazon.titan-e1t-medium","dimensions":4096},{"provider":"openai","name":"text-embedding-ada-002","dimensions":1536}],"crossEncoderModels":[{"provider":"sagemaker","name":"cross-encoder/ms-marco-MiniLM-L-12-v2","default":true}]}}'
    Metadata:
      aws:cdk:path: GenAIChatBotStack/Shared/Config/Resource
  SharedCommonLayerFC89CBCE:
    Type: AWS::Lambda::LayerVersion
    Properties:
      CompatibleArchitectures:
        - arm64
      CompatibleRuntimes:
        - python3.11
      Content:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 1fbc9c2a4cb2ba7b1de07daca785253ed84c9eb7ce609f1b844e303122d9f4c0.zip
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: GenAIChatBotStack/Shared/CommonLayer/Layer/Resource
  SharedPythonSDKLayer19AC43CF:
    Type: AWS::Lambda::LayerVersion
    Properties:
      CompatibleArchitectures:
        - arm64
      CompatibleRuntimes:
        - python3.11
      Content:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: fcdaa18014e961879c23f4b62decacadb9b4c03d88a3947f333470afc3c3a20b.zip
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: GenAIChatBotStack/Shared/PythonSDKLayer/Resource
      aws:asset:path: asset.fcdaa18014e961879c23f4b62decacadb9b4c03d88a3947f333470afc3c3a20b
      aws:asset:is-bundled: false
      aws:asset:property: Content
  SharedXOriginVerifySecret258B0376:
    Type: AWS::SecretsManager::Secret
    Properties:
      GenerateSecretString:
        ExcludePunctuation: true
        GenerateStringKey: headerValue
        SecretStringTemplate: "{}"
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: GenAIChatBotStack/Shared/X-Origin-Verify-Secret/Resource
  SharedApiKeysSecret9EA666ED:
    Type: AWS::SecretsManager::Secret
    Properties:
      SecretString: "{}"
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: GenAIChatBotStack/Shared/ApiKeysSecret/Resource
  CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
      ManagedPolicyArns:
        - Fn::Sub: arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: Inline
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - ec2:AuthorizeSecurityGroupIngress
                  - ec2:AuthorizeSecurityGroupEgress
                  - ec2:RevokeSecurityGroupIngress
                  - ec2:RevokeSecurityGroupEgress
                Resource:
                  - Fn::Join:
                      - ""
                      - - "arn:"
                        - Ref: AWS::Partition
                        - ":ec2:"
                        - Ref: AWS::Region
                        - ":"
                        - Ref: AWS::AccountId
                        - :security-group/
                        - Fn::GetAtt:
                            - SharedVPC6716DA5E
                            - DefaultSecurityGroup
    Metadata:
      aws:cdk:path: GenAIChatBotStack/Custom::VpcRestrictDefaultSGCustomResourceProvider/Role
  CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 4b996a3e5a083d5c78c6f30a8571a94fb7ec557eecbe54dbc065faba0d9076e6.zip
      Timeout: 900
      MemorySize: 128
      Handler: __entrypoint__.handler
      Role:
        Fn::GetAtt:
          - CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0
          - Arn
      Runtime: nodejs18.x
      Description: Lambda function for removing all inbound/outbound rules from the VPC default security group
    DependsOn:
      - CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0
    Metadata:
      aws:cdk:path: GenAIChatBotStack/Custom::VpcRestrictDefaultSGCustomResourceProvider/Handler
      aws:asset:path: asset.4b996a3e5a083d5c78c6f30a8571a94fb7ec557eecbe54dbc065faba0d9076e6
      aws:asset:property: Code
  AuthenticationUserPoolsmsRole5227CBC5:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Condition:
              StringEquals:
                sts:ExternalId: GenAIChatBotStackAuthenticationUserPoolB17BC8AA
            Effect: Allow
            Principal:
              Service: cognito-idp.amazonaws.com
        Version: "2012-10-17"
      Policies:
        - PolicyDocument:
            Statement:
              - Action: sns:Publish
                Effect: Allow
                Resource: "*"
            Version: "2012-10-17"
          PolicyName: sns-publish
    Metadata:
      aws:cdk:path: GenAIChatBotStack/Authentication/UserPool/smsRole/Resource
  AuthenticationUserPool28698864:
    Type: AWS::Cognito::UserPool
    Properties:
      AccountRecoverySetting:
        RecoveryMechanisms:
          - Name: verified_phone_number
            Priority: 1
          - Name: verified_email
            Priority: 2
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: true
      AutoVerifiedAttributes:
        - email
        - phone_number
      EmailVerificationMessage: The verification code to your new account is {####}
      EmailVerificationSubject: Verify your new account
      SmsConfiguration:
        ExternalId: GenAIChatBotStackAuthenticationUserPoolB17BC8AA
        SnsCallerArn:
          Fn::GetAtt:
            - AuthenticationUserPoolsmsRole5227CBC5
            - Arn
      SmsVerificationMessage: The verification code to your new account is {####}
      UsernameAttributes:
        - email
      VerificationMessageTemplate:
        DefaultEmailOption: CONFIRM_WITH_CODE
        EmailMessage: The verification code to your new account is {####}
        EmailSubject: Verify your new account
        SmsMessage: The verification code to your new account is {####}
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: GenAIChatBotStack/Authentication/UserPool/Resource
  AuthenticationUserPoolUserPoolClient8AE1704E:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      AllowedOAuthFlows:
        - implicit
        - code
      AllowedOAuthFlowsUserPoolClient: true
      AllowedOAuthScopes:
        - profile
        - phone
        - email
        - openid
        - aws.cognito.signin.user.admin
      CallbackURLs:
        - https://example.com
      ExplicitAuthFlows:
        - ALLOW_USER_PASSWORD_AUTH
        - ALLOW_ADMIN_USER_PASSWORD_AUTH
        - ALLOW_USER_SRP_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH
      GenerateSecret: false
      SupportedIdentityProviders:
        - COGNITO
      UserPoolId:
        Ref: AuthenticationUserPool28698864
    Metadata:
      aws:cdk:path: GenAIChatBotStack/Authentication/UserPool/UserPoolClient/Resource
  LargeLanguageModelsLLamaV213BBaseSageMakerExecutionRole08F333DB:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: sagemaker.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/AmazonSageMakerFullAccess
    Metadata:
      aws:cdk:path: GenAIChatBotStack/LargeLanguageModels/LLamaV2_13B_Base/SageMakerExecutionRole/Resource
  LargeLanguageModelsLLamaV213BBaseModel881C3123:
    Type: AWS::SageMaker::Model
    Properties:
      EnableNetworkIsolation: true
      ExecutionRoleArn:
        Fn::GetAtt:
          - LargeLanguageModelsLLamaV213BBaseSageMakerExecutionRole08F333DB
          - Arn
      PrimaryContainer:
        ModelPackageName:
          Fn::FindInMap:
            - LargeLanguageModelsLLamaV213BBaseLlama2BasePackageMappingA03FA310
            - Ref: AWS::Region
            - arn
    Metadata:
      aws:cdk:path: GenAIChatBotStack/LargeLanguageModels/LLamaV2_13B_Base/Model
  LargeLanguageModelsLLamaV213BBaseEndpointConfig14EA7773:
    Type: AWS::SageMaker::EndpointConfig
    Properties:
      ProductionVariants:
        - ContainerStartupHealthCheckTimeoutInSeconds: 900
          InitialInstanceCount: 1
          InitialVariantWeight: 1
          InstanceType: ml.g5.12xlarge
          ModelName:
            Fn::GetAtt:
              - LargeLanguageModelsLLamaV213BBaseModel881C3123
              - ModelName
          VariantName: AllTraffic
    DependsOn:
      - LargeLanguageModelsLLamaV213BBaseModel881C3123
    Metadata:
      aws:cdk:path: GenAIChatBotStack/LargeLanguageModels/LLamaV2_13B_Base/EndpointConfig
  LargeLanguageModelsLLamaV213BBasemetaLLama213b3740E139:
    Type: AWS::SageMaker::Endpoint
    Properties:
      EndpointConfigName:
        Fn::GetAtt:
          - LargeLanguageModelsLLamaV213BBaseEndpointConfig14EA7773
          - EndpointConfigName
      EndpointName: meta-LLama2-13b
    DependsOn:
      - LargeLanguageModelsLLamaV213BBaseEndpointConfig14EA7773
    Metadata:
      aws:cdk:path: GenAIChatBotStack/LargeLanguageModels/LLamaV2_13B_Base/meta-LLama2-13b
  LargeLanguageModelsLLMsParameter13E743CE:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Value: '[{"name":"meta-LLama2-13b-base","endpoint":"meta-LLama2-13b"}]'
    Metadata:
      aws:cdk:path: GenAIChatBotStack/LargeLanguageModels/LLMsParameter/Resource
  RagEnginesRagDynamoDBTablesWorkspacesD2D3C0C4:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: workspace_id
          AttributeType: S
        - AttributeName: object_type
          AttributeType: S
        - AttributeName: created_at
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      GlobalSecondaryIndexes:
        - IndexName: by_object_type_idx
          KeySchema:
            - AttributeName: object_type
              KeyType: HASH
            - AttributeName: created_at
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
      KeySchema:
        - AttributeName: workspace_id
          KeyType: HASH
        - AttributeName: object_type
          KeyType: RANGE
      SSESpecification:
        SSEEnabled: true
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/RagDynamoDBTables/Workspaces/Resource
  RagEnginesRagDynamoDBTablesDocumentsF6F2B272:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: workspace_id
          AttributeType: S
        - AttributeName: document_id
          AttributeType: S
        - AttributeName: compound_sort_key
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      GlobalSecondaryIndexes:
        - IndexName: by_compound_key_idx
          KeySchema:
            - AttributeName: workspace_id
              KeyType: HASH
            - AttributeName: compound_sort_key
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
      KeySchema:
        - AttributeName: workspace_id
          KeyType: HASH
        - AttributeName: document_id
          KeyType: RANGE
      SSESpecification:
        SSEEnabled: true
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/RagDynamoDBTables/Documents/Resource
  RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2BuildBucket980AD447:
    Type: AWS::S3::Bucket
    Properties:
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: aws-cdk:auto-delete-objects
          Value: "true"
        - Key: aws-cdk:cr-owned:build-script:497158da
          Value: "true"
        - Key: aws-cdk:cr-owned:model-code:0f232840
          Value: "true"
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/SageMakerRagModels/Models/ermsmarcoMiniLML12v2/BuildBucket/Resource
  RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2BuildBucketPolicy6E42CD06:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2BuildBucket980AD447
      PolicyDocument:
        Statement:
          - Action:
              - s3:DeleteObject*
              - s3:GetBucket*
              - s3:List*
            Effect: Allow
            Principal:
              AWS:
                Fn::GetAtt:
                  - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
                  - Arn
            Resource:
              - Fn::GetAtt:
                  - RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2BuildBucket980AD447
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2BuildBucket980AD447
                        - Arn
                    - /*
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/SageMakerRagModels/Models/ermsmarcoMiniLML12v2/BuildBucket/Policy/Resource
  RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2BuildBucketAutoDeleteObjectsCustomResourceA34E5810:
    Type: Custom::S3AutoDeleteObjects
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F
          - Arn
      BucketName:
        Ref: RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2BuildBucket980AD447
    DependsOn:
      - RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2BuildBucketPolicy6E42CD06
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/SageMakerRagModels/Models/ermsmarcoMiniLML12v2/BuildBucket/AutoDeleteObjectsCustomResource/Default
  RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2BuildScriptDeploymentAwsCliLayerECF8E7F9:
    Type: AWS::Lambda::LayerVersion
    Properties:
      Content:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: e2277687077a2abf9ae1af1cc9565e6715e2ebb62f79ec53aa75a1af9298f642.zip
      Description: /opt/awscli/aws
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/SageMakerRagModels/Models/ermsmarcoMiniLML12v2/BuildScriptDeployment/AwsCliLayer/Resource
      aws:asset:path: asset.e2277687077a2abf9ae1af1cc9565e6715e2ebb62f79ec53aa75a1af9298f642.zip
      aws:asset:is-bundled: false
      aws:asset:property: Content
  RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2BuildScriptDeploymentCustomResource30C00329:
    Type: Custom::CDKBucketDeployment
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536
          - Arn
      SourceBucketNames:
        - Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
      SourceObjectKeys:
        - 9d5a39b12f752b89b65ede1116b41bc1a9d8134a2b398167511259ae1604eb6a.zip
      DestinationBucketName:
        Ref: RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2BuildBucket980AD447
      DestinationBucketKeyPrefix: build-script
      RetainOnDelete: false
      Prune: true
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/SageMakerRagModels/Models/ermsmarcoMiniLML12v2/BuildScriptDeployment/CustomResource/Default
  RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2ModelCodeDeploymentAwsCliLayer4C62ED58:
    Type: AWS::Lambda::LayerVersion
    Properties:
      Content:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: e2277687077a2abf9ae1af1cc9565e6715e2ebb62f79ec53aa75a1af9298f642.zip
      Description: /opt/awscli/aws
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/SageMakerRagModels/Models/ermsmarcoMiniLML12v2/ModelCodeDeployment/AwsCliLayer/Resource
      aws:asset:path: asset.e2277687077a2abf9ae1af1cc9565e6715e2ebb62f79ec53aa75a1af9298f642.zip
      aws:asset:is-bundled: false
      aws:asset:property: Content
  RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2ModelCodeDeploymentCustomResource09050EA9:
    Type: Custom::CDKBucketDeployment
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536
          - Arn
      SourceBucketNames:
        - Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
      SourceObjectKeys:
        - 514c36e9c47ee0b8ee3a461febbf60d8c8e2ca9023b1aba70761112f470a27db.zip
      DestinationBucketName:
        Ref: RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2BuildBucket980AD447
      DestinationBucketKeyPrefix: model-code
      RetainOnDelete: false
      Prune: true
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/SageMakerRagModels/Models/ermsmarcoMiniLML12v2/ModelCodeDeployment/CustomResource/Default
  RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2CodeBuildRole59BFDF37:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
        Version: "2012-10-17"
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Effect: Allow
                Resource: "*"
            Version: "2012-10-17"
          PolicyName: CodeBuildPolicy
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/SageMakerRagModels/Models/ermsmarcoMiniLML12v2/CodeBuildRole/Resource
  RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2CodeBuildRoleDefaultPolicy579C5AF7:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":logs:"
                    - Ref: AWS::Region
                    - ":"
                    - Ref: AWS::AccountId
                    - :log-group:/aws/codebuild/
                    - Ref: RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2CodeBuildProject79572230
                    - :*
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":logs:"
                    - Ref: AWS::Region
                    - ":"
                    - Ref: AWS::AccountId
                    - :log-group:/aws/codebuild/
                    - Ref: RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2CodeBuildProject79572230
          - Action:
              - codebuild:BatchPutCodeCoverages
              - codebuild:BatchPutTestCases
              - codebuild:CreateReport
              - codebuild:CreateReportGroup
              - codebuild:UpdateReport
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":codebuild:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :report-group/
                  - Ref: RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2CodeBuildProject79572230
                  - -*
          - Action:
              - s3:Abort*
              - s3:DeleteObject*
              - s3:GetBucket*
              - s3:GetObject*
              - s3:List*
              - s3:PutObject
              - s3:PutObjectLegalHold
              - s3:PutObjectRetention
              - s3:PutObjectTagging
              - s3:PutObjectVersionTagging
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2BuildBucket980AD447
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2BuildBucket980AD447
                        - Arn
                    - /*
        Version: "2012-10-17"
      PolicyName: RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2CodeBuildRoleDefaultPolicy579C5AF7
      Roles:
        - Ref: RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2CodeBuildRole59BFDF37
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/SageMakerRagModels/Models/ermsmarcoMiniLML12v2/CodeBuildRole/DefaultPolicy/Resource
  RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2CodeBuildProject79572230:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: NO_ARTIFACTS
      Cache:
        Type: NO_CACHE
      EncryptionKey: alias/aws/s3
      Environment:
        ComputeType: BUILD_GENERAL1_LARGE
        EnvironmentVariables:
          - Name: MODEL_ID
            Type: PLAINTEXT
            Value: intfloat/multilingual-e5-large,sentence-transformers/all-MiniLM-L6-v2,cross-encoder/ms-marco-MiniLM-L-12-v2
          - Name: BUILD_BUCKET
            Type: PLAINTEXT
            Value:
              Ref: RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2BuildBucket980AD447
          - Name: HF_HUB_ENABLE_HF_TRANSFER
            Type: PLAINTEXT
            Value: "1"
          - Name: HF_HUB_DISABLE_PROGRESS_BARS
            Type: PLAINTEXT
            Value: "1"
          - Name: HF_HUB_DISABLE_TELEMETRY
            Type: PLAINTEXT
            Value: "1"
        Image: aws/codebuild/standard:7.0
        ImagePullCredentialsType: CODEBUILD
        PrivilegedMode: true
        Type: LINUX_CONTAINER
      ServiceRole:
        Fn::GetAtt:
          - RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2CodeBuildRole59BFDF37
          - Arn
      Source:
        BuildSpec: |-
          {
            "version": "0.2",
            "phases": {
              "install": {
                "commands": [
                  "echo \"Updating system packages...\"",
                  "apt-get update",
                  "echo \"Installing tar, pigz, awscli, virtualenv, python3-pip, and python3-dev...\"",
                  "apt-get install -y tar pigz awscli virtualenv python3-pip python3-dev",
                  "echo \"Updating pip...\"",
                  "pip3 install --upgrade pip"
                ]
              },
              "pre_build": {
                "commands": [
                  "echo \"Downloading build code from S3...\"",
                  "aws s3 cp s3://$BUILD_BUCKET/build-script ./build --recursive",
                  "echo \"Downloading model from S3...\"",
                  "aws s3 cp s3://$BUILD_BUCKET/model-code ./model --recursive",
                  "ls -al",
                  "ls -al ./build",
                  "ls -al ./model",
                  "COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)",
                  "IMAGE_TAG=${COMMIT_HASH:=latest}"
                ]
              },
              "build": {
                "commands": [
                  "echo \"Installing Python requirements...\"",
                  "pip3 install -r build/requirements.txt --upgrade",
                  "echo \"Running script.py...\"",
                  "python3 build/script.py"
                ]
              }
            }
          }
        Type: NO_SOURCE
    DependsOn:
      - RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2ModelCodeDeploymentAwsCliLayer4C62ED58
      - RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2ModelCodeDeploymentCustomResource09050EA9
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/SageMakerRagModels/Models/ermsmarcoMiniLML12v2/CodeBuildProject/Resource
  RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2OnEventHandlerServiceRole79B0C6C7:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/SageMakerRagModels/Models/ermsmarcoMiniLML12v2/OnEventHandler/ServiceRole/Resource
  RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2OnEventHandlerServiceRoleDefaultPolicy174FE165:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: codebuild:StartBuild
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2CodeBuildProject79572230
                - Arn
        Version: "2012-10-17"
      PolicyName: RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2OnEventHandlerServiceRoleDefaultPolicy174FE165
      Roles:
        - Ref: RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2OnEventHandlerServiceRole79B0C6C7
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/SageMakerRagModels/Models/ermsmarcoMiniLML12v2/OnEventHandler/ServiceRole/DefaultPolicy/Resource
  RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2OnEventHandler53F18880:
    Type: AWS::Lambda::Function
    Properties:
      Architectures:
        - arm64
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: d73329ecbda51a36ecd27b8e805f2dcfc93a9a451251c89e85e0c709afccb761.zip
      Handler: index.on_event
      Role:
        Fn::GetAtt:
          - RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2OnEventHandlerServiceRole79B0C6C7
          - Arn
      Runtime: python3.11
    DependsOn:
      - RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2OnEventHandlerServiceRoleDefaultPolicy174FE165
      - RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2OnEventHandlerServiceRole79B0C6C7
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/SageMakerRagModels/Models/ermsmarcoMiniLML12v2/OnEventHandler/Resource
      aws:asset:path: asset.d73329ecbda51a36ecd27b8e805f2dcfc93a9a451251c89e85e0c709afccb761
      aws:asset:is-bundled: false
      aws:asset:property: Code
  RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2IsCompleteHandlerServiceRoleA840A3D2:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/SageMakerRagModels/Models/ermsmarcoMiniLML12v2/IsCompleteHandler/ServiceRole/Resource
  RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2IsCompleteHandlerServiceRoleDefaultPolicy664F928C:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: codebuild:BatchGetBuilds
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2CodeBuildProject79572230
                - Arn
        Version: "2012-10-17"
      PolicyName: RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2IsCompleteHandlerServiceRoleDefaultPolicy664F928C
      Roles:
        - Ref: RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2IsCompleteHandlerServiceRoleA840A3D2
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/SageMakerRagModels/Models/ermsmarcoMiniLML12v2/IsCompleteHandler/ServiceRole/DefaultPolicy/Resource
  RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2IsCompleteHandler0259D021:
    Type: AWS::Lambda::Function
    Properties:
      Architectures:
        - arm64
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: d73329ecbda51a36ecd27b8e805f2dcfc93a9a451251c89e85e0c709afccb761.zip
      Handler: index.is_complete
      Role:
        Fn::GetAtt:
          - RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2IsCompleteHandlerServiceRoleA840A3D2
          - Arn
      Runtime: python3.11
    DependsOn:
      - RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2IsCompleteHandlerServiceRoleDefaultPolicy664F928C
      - RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2IsCompleteHandlerServiceRoleA840A3D2
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/SageMakerRagModels/Models/ermsmarcoMiniLML12v2/IsCompleteHandler/Resource
      aws:asset:path: asset.d73329ecbda51a36ecd27b8e805f2dcfc93a9a451251c89e85e0c709afccb761
      aws:asset:is-bundled: false
      aws:asset:property: Code
  RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2ProviderframeworkonEventServiceRole74810B5A:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    DependsOn:
      - RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2CodeBuildProject79572230
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/SageMakerRagModels/Models/ermsmarcoMiniLML12v2/Provider/framework-onEvent/ServiceRole/Resource
  RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2ProviderframeworkonEventServiceRoleDefaultPolicy99FB06F4:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: lambda:InvokeFunction
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2IsCompleteHandler0259D021
                  - Arn
              - Fn::GetAtt:
                  - RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2OnEventHandler53F18880
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2IsCompleteHandler0259D021
                        - Arn
                    - :*
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2OnEventHandler53F18880
                        - Arn
                    - :*
          - Action: states:StartExecution
            Effect: Allow
            Resource:
              Ref: RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2ProviderwaiterstatemachineF1791BAB
        Version: "2012-10-17"
      PolicyName: RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2ProviderframeworkonEventServiceRoleDefaultPolicy99FB06F4
      Roles:
        - Ref: RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2ProviderframeworkonEventServiceRole74810B5A
    DependsOn:
      - RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2CodeBuildProject79572230
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/SageMakerRagModels/Models/ermsmarcoMiniLML12v2/Provider/framework-onEvent/ServiceRole/DefaultPolicy/Resource
  RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2ProviderframeworkonEventF081822A:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 7382a0addb9f34974a1ea6c6c9b063882af874828f366f5c93b2b7b64db15c94.zip
      Description: AWS CDK resource provider framework - onEvent (GenAIChatBotStack/RagEngines/SageMakerRagModels/Models/ermsmarcoMiniLML12v2/Provider)
      Environment:
        Variables:
          USER_ON_EVENT_FUNCTION_ARN:
            Fn::GetAtt:
              - RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2OnEventHandler53F18880
              - Arn
          USER_IS_COMPLETE_FUNCTION_ARN:
            Fn::GetAtt:
              - RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2IsCompleteHandler0259D021
              - Arn
          WAITER_STATE_MACHINE_ARN:
            Ref: RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2ProviderwaiterstatemachineF1791BAB
      Handler: framework.onEvent
      Role:
        Fn::GetAtt:
          - RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2ProviderframeworkonEventServiceRole74810B5A
          - Arn
      Runtime: nodejs18.x
      Timeout: 900
    DependsOn:
      - RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2CodeBuildProject79572230
      - RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2ProviderframeworkonEventServiceRoleDefaultPolicy99FB06F4
      - RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2ProviderframeworkonEventServiceRole74810B5A
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/SageMakerRagModels/Models/ermsmarcoMiniLML12v2/Provider/framework-onEvent/Resource
      aws:asset:path: asset.7382a0addb9f34974a1ea6c6c9b063882af874828f366f5c93b2b7b64db15c94
      aws:asset:is-bundled: false
      aws:asset:property: Code
  RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2ProviderframeworkisCompleteServiceRole796AC38B:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    DependsOn:
      - RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2CodeBuildProject79572230
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/SageMakerRagModels/Models/ermsmarcoMiniLML12v2/Provider/framework-isComplete/ServiceRole/Resource
  RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2ProviderframeworkisCompleteServiceRoleDefaultPolicy59C40370:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: lambda:InvokeFunction
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2IsCompleteHandler0259D021
                  - Arn
              - Fn::GetAtt:
                  - RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2OnEventHandler53F18880
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2IsCompleteHandler0259D021
                        - Arn
                    - :*
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2OnEventHandler53F18880
                        - Arn
                    - :*
        Version: "2012-10-17"
      PolicyName: RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2ProviderframeworkisCompleteServiceRoleDefaultPolicy59C40370
      Roles:
        - Ref: RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2ProviderframeworkisCompleteServiceRole796AC38B
    DependsOn:
      - RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2CodeBuildProject79572230
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/SageMakerRagModels/Models/ermsmarcoMiniLML12v2/Provider/framework-isComplete/ServiceRole/DefaultPolicy/Resource
  RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2ProviderframeworkisCompleteA4164B38:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 7382a0addb9f34974a1ea6c6c9b063882af874828f366f5c93b2b7b64db15c94.zip
      Description: AWS CDK resource provider framework - isComplete (GenAIChatBotStack/RagEngines/SageMakerRagModels/Models/ermsmarcoMiniLML12v2/Provider)
      Environment:
        Variables:
          USER_ON_EVENT_FUNCTION_ARN:
            Fn::GetAtt:
              - RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2OnEventHandler53F18880
              - Arn
          USER_IS_COMPLETE_FUNCTION_ARN:
            Fn::GetAtt:
              - RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2IsCompleteHandler0259D021
              - Arn
      Handler: framework.isComplete
      Role:
        Fn::GetAtt:
          - RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2ProviderframeworkisCompleteServiceRole796AC38B
          - Arn
      Runtime: nodejs18.x
      Timeout: 900
    DependsOn:
      - RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2CodeBuildProject79572230
      - RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2ProviderframeworkisCompleteServiceRoleDefaultPolicy59C40370
      - RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2ProviderframeworkisCompleteServiceRole796AC38B
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/SageMakerRagModels/Models/ermsmarcoMiniLML12v2/Provider/framework-isComplete/Resource
      aws:asset:path: asset.7382a0addb9f34974a1ea6c6c9b063882af874828f366f5c93b2b7b64db15c94
      aws:asset:is-bundled: false
      aws:asset:property: Code
  RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2ProviderframeworkonTimeoutServiceRole9B8E7229:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    DependsOn:
      - RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2CodeBuildProject79572230
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/SageMakerRagModels/Models/ermsmarcoMiniLML12v2/Provider/framework-onTimeout/ServiceRole/Resource
  RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2ProviderframeworkonTimeoutServiceRoleDefaultPolicy4A79D7AF:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: lambda:InvokeFunction
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2IsCompleteHandler0259D021
                  - Arn
              - Fn::GetAtt:
                  - RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2OnEventHandler53F18880
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2IsCompleteHandler0259D021
                        - Arn
                    - :*
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2OnEventHandler53F18880
                        - Arn
                    - :*
        Version: "2012-10-17"
      PolicyName: RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2ProviderframeworkonTimeoutServiceRoleDefaultPolicy4A79D7AF
      Roles:
        - Ref: RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2ProviderframeworkonTimeoutServiceRole9B8E7229
    DependsOn:
      - RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2CodeBuildProject79572230
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/SageMakerRagModels/Models/ermsmarcoMiniLML12v2/Provider/framework-onTimeout/ServiceRole/DefaultPolicy/Resource
  RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2ProviderframeworkonTimeout389F0B10:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 7382a0addb9f34974a1ea6c6c9b063882af874828f366f5c93b2b7b64db15c94.zip
      Description: AWS CDK resource provider framework - onTimeout (GenAIChatBotStack/RagEngines/SageMakerRagModels/Models/ermsmarcoMiniLML12v2/Provider)
      Environment:
        Variables:
          USER_ON_EVENT_FUNCTION_ARN:
            Fn::GetAtt:
              - RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2OnEventHandler53F18880
              - Arn
          USER_IS_COMPLETE_FUNCTION_ARN:
            Fn::GetAtt:
              - RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2IsCompleteHandler0259D021
              - Arn
      Handler: framework.onTimeout
      Role:
        Fn::GetAtt:
          - RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2ProviderframeworkonTimeoutServiceRole9B8E7229
          - Arn
      Runtime: nodejs18.x
      Timeout: 900
    DependsOn:
      - RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2CodeBuildProject79572230
      - RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2ProviderframeworkonTimeoutServiceRoleDefaultPolicy4A79D7AF
      - RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2ProviderframeworkonTimeoutServiceRole9B8E7229
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/SageMakerRagModels/Models/ermsmarcoMiniLML12v2/Provider/framework-onTimeout/Resource
      aws:asset:path: asset.7382a0addb9f34974a1ea6c6c9b063882af874828f366f5c93b2b7b64db15c94
      aws:asset:is-bundled: false
      aws:asset:property: Code
  RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2ProviderwaiterstatemachineRole2ED4683D:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: states.amazonaws.com
        Version: "2012-10-17"
    DependsOn:
      - RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2CodeBuildProject79572230
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/SageMakerRagModels/Models/ermsmarcoMiniLML12v2/Provider/waiter-state-machine/Role/Resource
  RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2ProviderwaiterstatemachineRoleDefaultPolicy352B995B:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: lambda:InvokeFunction
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2ProviderframeworkisCompleteA4164B38
                  - Arn
              - Fn::GetAtt:
                  - RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2ProviderframeworkonTimeout389F0B10
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2ProviderframeworkisCompleteA4164B38
                        - Arn
                    - :*
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2ProviderframeworkonTimeout389F0B10
                        - Arn
                    - :*
        Version: "2012-10-17"
      PolicyName: RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2ProviderwaiterstatemachineRoleDefaultPolicy352B995B
      Roles:
        - Ref: RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2ProviderwaiterstatemachineRole2ED4683D
    DependsOn:
      - RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2CodeBuildProject79572230
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/SageMakerRagModels/Models/ermsmarcoMiniLML12v2/Provider/waiter-state-machine/Role/DefaultPolicy/Resource
  RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2ProviderwaiterstatemachineF1791BAB:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      DefinitionString:
        Fn::Join:
          - ""
          - - '{"StartAt":"framework-isComplete-task","States":{"framework-isComplete-task":{"End":true,"Retry":[{"ErrorEquals":["States.ALL"],"IntervalSeconds":30,"MaxAttempts":240,"BackoffRate":1}],"Catch":[{"ErrorEquals":["States.ALL"],"Next":"framework-onTimeout-task"}],"Type":"Task","Resource":"'
            - Fn::GetAtt:
                - RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2ProviderframeworkisCompleteA4164B38
                - Arn
            - '"},"framework-onTimeout-task":{"End":true,"Type":"Task","Resource":"'
            - Fn::GetAtt:
                - RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2ProviderframeworkonTimeout389F0B10
                - Arn
            - '"}}}'
      RoleArn:
        Fn::GetAtt:
          - RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2ProviderwaiterstatemachineRole2ED4683D
          - Arn
    DependsOn:
      - RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2CodeBuildProject79572230
      - RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2ProviderwaiterstatemachineRoleDefaultPolicy352B995B
      - RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2ProviderwaiterstatemachineRole2ED4683D
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/SageMakerRagModels/Models/ermsmarcoMiniLML12v2/Provider/waiter-state-machine/Resource
  RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2Build4E4FEAD9:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2ProviderframeworkonEventF081822A
          - Arn
      ProjectName:
        Ref: RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2CodeBuildProject79572230
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/SageMakerRagModels/Models/ermsmarcoMiniLML12v2/Build/Default
  RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2SageMakerExecutionRole3B1D1D37:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: sagemaker.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/AmazonSageMakerFullAccess
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/SageMakerRagModels/Models/ermsmarcoMiniLML12v2/SageMakerExecutionRole/Resource
  RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2SageMakerExecutionRoleDefaultPolicyA058439E:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetBucket*
              - s3:GetObject*
              - s3:List*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2BuildBucket980AD447
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2BuildBucket980AD447
                        - Arn
                    - /*
        Version: "2012-10-17"
      PolicyName: RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2SageMakerExecutionRoleDefaultPolicyA058439E
      Roles:
        - Ref: RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2SageMakerExecutionRole3B1D1D37
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/SageMakerRagModels/Models/ermsmarcoMiniLML12v2/SageMakerExecutionRole/DefaultPolicy/Resource
  RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2Model173BB74F:
    Type: AWS::SageMaker::Model
    Properties:
      ExecutionRoleArn:
        Fn::GetAtt:
          - RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2SageMakerExecutionRole3B1D1D37
          - Arn
      PrimaryContainer:
        Environment:
          SAGEMAKER_CONTAINER_LOG_LEVEL: "20"
          SAGEMAKER_REGION:
            Ref: AWS::Region
        Image:
          Fn::Join:
            - ""
            - - Fn::FindInMap:
                  - RagEnginesSageMakerRagModelsImageRepositoryCfnMappingEAA1150E
                  - Ref: AWS::Region
                  - account
              - .dkr.ecr.
              - Ref: AWS::Region
              - .amazonaws.com/huggingface-pytorch-inference:2.0.0-transformers4.28.1-gpu-py310-cu118-ubuntu20.04
        Mode: SingleModel
        ModelDataUrl:
          Fn::Join:
            - ""
            - - s3://
              - Ref: RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2BuildBucket980AD447
              - /out/model.tar.gz
    DependsOn:
      - RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2Build4E4FEAD9
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/SageMakerRagModels/Models/ermsmarcoMiniLML12v2/Model
  RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2EndpointConfigF5CC4F17:
    Type: AWS::SageMaker::EndpointConfig
    Properties:
      ProductionVariants:
        - ContainerStartupHealthCheckTimeoutInSeconds: 900
          InitialInstanceCount: 1
          InitialVariantWeight: 1
          InstanceType: ml.g4dn.xlarge
          ModelName:
            Fn::GetAtt:
              - RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2Model173BB74F
              - ModelName
          VariantName: AllTraffic
    DependsOn:
      - RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2Model173BB74F
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/SageMakerRagModels/Models/ermsmarcoMiniLML12v2/EndpointConfig
  RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2Endpoint0DE6C18E:
    Type: AWS::SageMaker::Endpoint
    Properties:
      EndpointConfigName:
        Fn::GetAtt:
          - RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2EndpointConfigF5CC4F17
          - EndpointConfigName
    DependsOn:
      - RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2EndpointConfigF5CC4F17
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/SageMakerRagModels/Models/ermsmarcoMiniLML12v2/Endpoint
  RagEnginesAuroraPgVectorAuroraDatabaseSubnets038B8C27:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnets for AuroraDatabase database
      SubnetIds:
        - Ref: SharedVPCisolatedSubnet1SubnetAE743C40
        - Ref: SharedVPCisolatedSubnet2SubnetBC723A26
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/AuroraPgVector/AuroraDatabase/Subnets/Default
  RagEnginesAuroraPgVectorAuroraDatabaseSecurityGroup333F94D8:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: RDS security group
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: SharedVPC6716DA5E
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/AuroraPgVector/AuroraDatabase/SecurityGroup/Resource
  RagEnginesAuroraPgVectorAuroraDatabaseSecurityGroupfromGenAIChatBotStackRagEnginesAuroraPgVectorDatabaseSetupFunctionSecurityGroup04B6866AIndirectPort13E8D6A8:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: from GenAIChatBotStackRagEnginesAuroraPgVectorDatabaseSetupFunctionSecurityGroup04B6866A:{IndirectPort}
      FromPort:
        Fn::GetAtt:
          - RagEnginesAuroraPgVectorAuroraDatabase2A003265
          - Endpoint.Port
      GroupId:
        Fn::GetAtt:
          - RagEnginesAuroraPgVectorAuroraDatabaseSecurityGroup333F94D8
          - GroupId
      IpProtocol: tcp
      SourceSecurityGroupId:
        Fn::GetAtt:
          - RagEnginesAuroraPgVectorDatabaseSetupFunctionSecurityGroupDFD5001A
          - GroupId
      ToPort:
        Fn::GetAtt:
          - RagEnginesAuroraPgVectorAuroraDatabase2A003265
          - Endpoint.Port
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/AuroraPgVector/AuroraDatabase/SecurityGroup/from GenAIChatBotStackRagEnginesAuroraPgVectorDatabaseSetupFunctionSecurityGroup04B6866A:{IndirectPort}
  RagEnginesAuroraPgVectorAuroraDatabaseSecurityGroupfromGenAIChatBotStackRagEnginesAuroraPgVectorCreateAuroraWorkspaceCreateAuroraWorkspaceFunctionSecurityGroupB21FA1A8IndirectPort33B5730B:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: from GenAIChatBotStackRagEnginesAuroraPgVectorCreateAuroraWorkspaceCreateAuroraWorkspaceFunctionSecurityGroupB21FA1A8:{IndirectPort}
      FromPort:
        Fn::GetAtt:
          - RagEnginesAuroraPgVectorAuroraDatabase2A003265
          - Endpoint.Port
      GroupId:
        Fn::GetAtt:
          - RagEnginesAuroraPgVectorAuroraDatabaseSecurityGroup333F94D8
          - GroupId
      IpProtocol: tcp
      SourceSecurityGroupId:
        Fn::GetAtt:
          - RagEnginesAuroraPgVectorCreateAuroraWorkspaceCreateAuroraWorkspaceFunctionSecurityGroup1A0FE458
          - GroupId
      ToPort:
        Fn::GetAtt:
          - RagEnginesAuroraPgVectorAuroraDatabase2A003265
          - Endpoint.Port
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/AuroraPgVector/AuroraDatabase/SecurityGroup/from GenAIChatBotStackRagEnginesAuroraPgVectorCreateAuroraWorkspaceCreateAuroraWorkspaceFunctionSecurityGroupB21FA1A8:{IndirectPort}
  RagEnginesAuroraPgVectorAuroraDatabaseSecurityGroupfromGenAIChatBotStackRagEnginesDataImportFileImportWorkflowDataImportFunctionSecurityGroupA014AE6AIndirectPort7500AC09:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: from GenAIChatBotStackRagEnginesDataImportFileImportWorkflowDataImportFunctionSecurityGroupA014AE6A:{IndirectPort}
      FromPort:
        Fn::GetAtt:
          - RagEnginesAuroraPgVectorAuroraDatabase2A003265
          - Endpoint.Port
      GroupId:
        Fn::GetAtt:
          - RagEnginesAuroraPgVectorAuroraDatabaseSecurityGroup333F94D8
          - GroupId
      IpProtocol: tcp
      SourceSecurityGroupId:
        Fn::GetAtt:
          - RagEnginesDataImportFileImportWorkflowDataImportFunctionSecurityGroupF507E09D
          - GroupId
      ToPort:
        Fn::GetAtt:
          - RagEnginesAuroraPgVectorAuroraDatabase2A003265
          - Endpoint.Port
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/AuroraPgVector/AuroraDatabase/SecurityGroup/from GenAIChatBotStackRagEnginesDataImportFileImportWorkflowDataImportFunctionSecurityGroupA014AE6A:{IndirectPort}
  RagEnginesAuroraPgVectorAuroraDatabaseSecurityGroupfromGenAIChatBotStackRagEnginesDataImportWebsiteCrawlingWorkflowWebsiteParserFunctionSecurityGroup19374928IndirectPortB47B7F55:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: from GenAIChatBotStackRagEnginesDataImportWebsiteCrawlingWorkflowWebsiteParserFunctionSecurityGroup19374928:{IndirectPort}
      FromPort:
        Fn::GetAtt:
          - RagEnginesAuroraPgVectorAuroraDatabase2A003265
          - Endpoint.Port
      GroupId:
        Fn::GetAtt:
          - RagEnginesAuroraPgVectorAuroraDatabaseSecurityGroup333F94D8
          - GroupId
      IpProtocol: tcp
      SourceSecurityGroupId:
        Fn::GetAtt:
          - RagEnginesDataImportWebsiteCrawlingWorkflowWebsiteParserFunctionSecurityGroup697DC81B
          - GroupId
      ToPort:
        Fn::GetAtt:
          - RagEnginesAuroraPgVectorAuroraDatabase2A003265
          - Endpoint.Port
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/AuroraPgVector/AuroraDatabase/SecurityGroup/from GenAIChatBotStackRagEnginesDataImportWebsiteCrawlingWorkflowWebsiteParserFunctionSecurityGroup19374928:{IndirectPort}
  RagEnginesAuroraPgVectorAuroraDatabaseSecurityGroupfromGenAIChatBotStackChatBotApiRestApiApiSecurityGroup4713F7A6IndirectPortAF8A1CD2:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: from GenAIChatBotStackChatBotApiRestApiApiSecurityGroup4713F7A6:{IndirectPort}
      FromPort:
        Fn::GetAtt:
          - RagEnginesAuroraPgVectorAuroraDatabase2A003265
          - Endpoint.Port
      GroupId:
        Fn::GetAtt:
          - RagEnginesAuroraPgVectorAuroraDatabaseSecurityGroup333F94D8
          - GroupId
      IpProtocol: tcp
      SourceSecurityGroupId:
        Fn::GetAtt:
          - ChatBotApiRestApiApiSecurityGroupC0E40B67
          - GroupId
      ToPort:
        Fn::GetAtt:
          - RagEnginesAuroraPgVectorAuroraDatabase2A003265
          - Endpoint.Port
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/AuroraPgVector/AuroraDatabase/SecurityGroup/from GenAIChatBotStackChatBotApiRestApiApiSecurityGroup4713F7A6:{IndirectPort}
  RagEnginesAuroraPgVectorAuroraDatabaseSecurityGroupfromGenAIChatBotStackLangchainInterfaceRequestHandlerSecurityGroup186219AFIndirectPortC796499E:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: from GenAIChatBotStackLangchainInterfaceRequestHandlerSecurityGroup186219AF:{IndirectPort}
      FromPort:
        Fn::GetAtt:
          - RagEnginesAuroraPgVectorAuroraDatabase2A003265
          - Endpoint.Port
      GroupId:
        Fn::GetAtt:
          - RagEnginesAuroraPgVectorAuroraDatabaseSecurityGroup333F94D8
          - GroupId
      IpProtocol: tcp
      SourceSecurityGroupId:
        Fn::GetAtt:
          - LangchainInterfaceRequestHandlerSecurityGroup5FED03E5
          - GroupId
      ToPort:
        Fn::GetAtt:
          - RagEnginesAuroraPgVectorAuroraDatabase2A003265
          - Endpoint.Port
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/AuroraPgVector/AuroraDatabase/SecurityGroup/from GenAIChatBotStackLangchainInterfaceRequestHandlerSecurityGroup186219AF:{IndirectPort}
  RagEnginesAuroraPgVectorAuroraDatabaseSecretBF0EF63E:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description:
        Fn::Join:
          - ""
          - - "Generated by the CDK for stack: "
            - Ref: AWS::StackName
      GenerateSecretString:
        ExcludeCharacters: " %+~`#$&*()|[]{}:;<>?!'/@\"\\"
        GenerateStringKey: password
        PasswordLength: 30
        SecretStringTemplate: '{"username":"postgres"}'
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/AuroraPgVector/AuroraDatabase/Secret/Resource
  RagEnginesAuroraPgVectorAuroraDatabaseSecretAttachmentA167E2A9:
    Type: AWS::SecretsManager::SecretTargetAttachment
    Properties:
      SecretId:
        Ref: RagEnginesAuroraPgVectorAuroraDatabaseSecretBF0EF63E
      TargetId:
        Ref: RagEnginesAuroraPgVectorAuroraDatabase2A003265
      TargetType: AWS::RDS::DBCluster
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/AuroraPgVector/AuroraDatabase/Secret/Attachment/Resource
  RagEnginesAuroraPgVectorAuroraDatabase2A003265:
    Type: AWS::RDS::DBCluster
    Properties:
      CopyTagsToSnapshot: true
      DBClusterParameterGroupName: default.aurora-postgresql15
      DBSubnetGroupName:
        Ref: RagEnginesAuroraPgVectorAuroraDatabaseSubnets038B8C27
      Engine: aurora-postgresql
      EngineVersion: "15.3"
      MasterUserPassword:
        Fn::Join:
          - ""
          - - "{{resolve:secretsmanager:"
            - Ref: RagEnginesAuroraPgVectorAuroraDatabaseSecretBF0EF63E
            - :SecretString:password::}}
      MasterUsername:
        Fn::Join:
          - ""
          - - "{{resolve:secretsmanager:"
            - Ref: RagEnginesAuroraPgVectorAuroraDatabaseSecretBF0EF63E
            - :SecretString:username::}}
      Port: 5432
      ServerlessV2ScalingConfiguration:
        MaxCapacity: 2
        MinCapacity: 0.5
      VpcSecurityGroupIds:
        - Fn::GetAtt:
            - RagEnginesAuroraPgVectorAuroraDatabaseSecurityGroup333F94D8
            - GroupId
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/AuroraPgVector/AuroraDatabase/Resource
  RagEnginesAuroraPgVectorAuroraDatabaseServerlessInstance42B5CDC1:
    Type: AWS::RDS::DBInstance
    Properties:
      DBClusterIdentifier:
        Ref: RagEnginesAuroraPgVectorAuroraDatabase2A003265
      DBInstanceClass: db.serverless
      Engine: aurora-postgresql
      PromotionTier: 0
      PubliclyAccessible: false
    DependsOn:
      - SharedVPCisolatedSubnet1RouteTableAssociation9FA2357F
      - SharedVPCisolatedSubnet2RouteTableAssociation61642BDD
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/AuroraPgVector/AuroraDatabase/ServerlessInstance/Resource
  RagEnginesAuroraPgVectorDatabaseSetupFunctionServiceRole09B67CA3:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
    DependsOn:
      - SharedVPCprivateSubnet1DefaultRoute608F3753
      - SharedVPCprivateSubnet1RouteTableAssociation83D920FA
      - SharedVPCprivateSubnet2DefaultRoute4387C202
      - SharedVPCprivateSubnet2RouteTableAssociation6788E94C
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/AuroraPgVector/DatabaseSetupFunction/ServiceRole/Resource
  RagEnginesAuroraPgVectorDatabaseSetupFunctionServiceRoleDefaultPolicy526D1214:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - secretsmanager:DescribeSecret
              - secretsmanager:GetSecretValue
            Effect: Allow
            Resource:
              Ref: RagEnginesAuroraPgVectorAuroraDatabaseSecretAttachmentA167E2A9
        Version: "2012-10-17"
      PolicyName: RagEnginesAuroraPgVectorDatabaseSetupFunctionServiceRoleDefaultPolicy526D1214
      Roles:
        - Ref: RagEnginesAuroraPgVectorDatabaseSetupFunctionServiceRole09B67CA3
    DependsOn:
      - SharedVPCprivateSubnet1DefaultRoute608F3753
      - SharedVPCprivateSubnet1RouteTableAssociation83D920FA
      - SharedVPCprivateSubnet2DefaultRoute4387C202
      - SharedVPCprivateSubnet2RouteTableAssociation6788E94C
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/AuroraPgVector/DatabaseSetupFunction/ServiceRole/DefaultPolicy/Resource
  RagEnginesAuroraPgVectorDatabaseSetupFunctionSecurityGroupDFD5001A:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Automatic security group for Lambda Function GenAIChatBotStackRagEnginesAuroraPgVectorDatabaseSetupFunction3CD91DCD
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: SharedVPC6716DA5E
    DependsOn:
      - SharedVPCprivateSubnet1DefaultRoute608F3753
      - SharedVPCprivateSubnet1RouteTableAssociation83D920FA
      - SharedVPCprivateSubnet2DefaultRoute4387C202
      - SharedVPCprivateSubnet2RouteTableAssociation6788E94C
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/AuroraPgVector/DatabaseSetupFunction/SecurityGroup/Resource
  RagEnginesAuroraPgVectorDatabaseSetupFunction3EAE1D9D:
    Type: AWS::Lambda::Function
    Properties:
      Architectures:
        - arm64
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: dfd8750c54438bc2688b83667cad3d62d3306a8e70d5b8f412b8afae21932661.zip
      Environment:
        Variables:
          POWERTOOLS_DEV: "true"
          LOG_LEVEL: INFO
          POWERTOOLS_LOGGER_LOG_EVENT: "true"
          POWERTOOLS_SERVICE_NAME: chatbot
      Handler: index.lambda_handler
      Layers:
        - Ref: SharedCommonLayerFC89CBCE
        - Fn::Join:
            - ""
            - - "arn:aws:lambda:"
              - Ref: AWS::Region
              - :017000801446:layer:AWSLambdaPowertoolsPythonV2-Arm64:42
        - Ref: SharedPythonSDKLayer19AC43CF
      Role:
        Fn::GetAtt:
          - RagEnginesAuroraPgVectorDatabaseSetupFunctionServiceRole09B67CA3
          - Arn
      Runtime: python3.11
      Timeout: 300
      VpcConfig:
        SecurityGroupIds:
          - Fn::GetAtt:
              - RagEnginesAuroraPgVectorDatabaseSetupFunctionSecurityGroupDFD5001A
              - GroupId
        SubnetIds:
          - Ref: SharedVPCprivateSubnet1Subnet5A4C2616
          - Ref: SharedVPCprivateSubnet2SubnetF203CD06
    DependsOn:
      - RagEnginesAuroraPgVectorDatabaseSetupFunctionServiceRoleDefaultPolicy526D1214
      - RagEnginesAuroraPgVectorDatabaseSetupFunctionServiceRole09B67CA3
      - SharedVPCprivateSubnet1DefaultRoute608F3753
      - SharedVPCprivateSubnet1RouteTableAssociation83D920FA
      - SharedVPCprivateSubnet2DefaultRoute4387C202
      - SharedVPCprivateSubnet2RouteTableAssociation6788E94C
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/AuroraPgVector/DatabaseSetupFunction/Resource
      aws:asset:path: asset.dfd8750c54438bc2688b83667cad3d62d3306a8e70d5b8f412b8afae21932661
      aws:asset:is-bundled: false
      aws:asset:property: Code
  RagEnginesAuroraPgVectorDatabaseSetupFunctionLogRetention64E74D31:
    Type: Custom::LogRetention
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A
          - Arn
      LogGroupName:
        Fn::Join:
          - ""
          - - /aws/lambda/
            - Ref: RagEnginesAuroraPgVectorDatabaseSetupFunction3EAE1D9D
      RetentionInDays: 7
    DependsOn:
      - SharedVPCprivateSubnet1DefaultRoute608F3753
      - SharedVPCprivateSubnet1RouteTableAssociation83D920FA
      - SharedVPCprivateSubnet2DefaultRoute4387C202
      - SharedVPCprivateSubnet2RouteTableAssociation6788E94C
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/AuroraPgVector/DatabaseSetupFunction/LogRetention/Resource
  RagEnginesAuroraPgVectorDatabaseSetupProviderframeworkonEventServiceRoleD8C445F8:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
    DependsOn:
      - SharedVPCprivateSubnet1DefaultRoute608F3753
      - SharedVPCprivateSubnet1RouteTableAssociation83D920FA
      - SharedVPCprivateSubnet2DefaultRoute4387C202
      - SharedVPCprivateSubnet2RouteTableAssociation6788E94C
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/AuroraPgVector/DatabaseSetupProvider/framework-onEvent/ServiceRole/Resource
  RagEnginesAuroraPgVectorDatabaseSetupProviderframeworkonEventServiceRoleDefaultPolicy5EC166EF:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: lambda:InvokeFunction
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - RagEnginesAuroraPgVectorDatabaseSetupFunction3EAE1D9D
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - RagEnginesAuroraPgVectorDatabaseSetupFunction3EAE1D9D
                        - Arn
                    - :*
        Version: "2012-10-17"
      PolicyName: RagEnginesAuroraPgVectorDatabaseSetupProviderframeworkonEventServiceRoleDefaultPolicy5EC166EF
      Roles:
        - Ref: RagEnginesAuroraPgVectorDatabaseSetupProviderframeworkonEventServiceRoleD8C445F8
    DependsOn:
      - SharedVPCprivateSubnet1DefaultRoute608F3753
      - SharedVPCprivateSubnet1RouteTableAssociation83D920FA
      - SharedVPCprivateSubnet2DefaultRoute4387C202
      - SharedVPCprivateSubnet2RouteTableAssociation6788E94C
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/AuroraPgVector/DatabaseSetupProvider/framework-onEvent/ServiceRole/DefaultPolicy/Resource
  RagEnginesAuroraPgVectorDatabaseSetupProviderframeworkonEventSecurityGroupF05C7F01:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Automatic security group for Lambda Function GenAIChatBotStackRagEnginesAuroraPgVectorDatabaseSetupProviderframeworkonEvent79EBF1D6
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: SharedVPC6716DA5E
    DependsOn:
      - SharedVPCprivateSubnet1DefaultRoute608F3753
      - SharedVPCprivateSubnet1RouteTableAssociation83D920FA
      - SharedVPCprivateSubnet2DefaultRoute4387C202
      - SharedVPCprivateSubnet2RouteTableAssociation6788E94C
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/AuroraPgVector/DatabaseSetupProvider/framework-onEvent/SecurityGroup/Resource
  RagEnginesAuroraPgVectorDatabaseSetupProviderframeworkonEvent66CC77D0:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 7382a0addb9f34974a1ea6c6c9b063882af874828f366f5c93b2b7b64db15c94.zip
      Description: AWS CDK resource provider framework - onEvent (GenAIChatBotStack/RagEngines/AuroraPgVector/DatabaseSetupProvider)
      Environment:
        Variables:
          USER_ON_EVENT_FUNCTION_ARN:
            Fn::GetAtt:
              - RagEnginesAuroraPgVectorDatabaseSetupFunction3EAE1D9D
              - Arn
      Handler: framework.onEvent
      Role:
        Fn::GetAtt:
          - RagEnginesAuroraPgVectorDatabaseSetupProviderframeworkonEventServiceRoleD8C445F8
          - Arn
      Runtime: nodejs18.x
      Timeout: 900
      VpcConfig:
        SecurityGroupIds:
          - Fn::GetAtt:
              - RagEnginesAuroraPgVectorDatabaseSetupProviderframeworkonEventSecurityGroupF05C7F01
              - GroupId
        SubnetIds:
          - Ref: SharedVPCprivateSubnet1Subnet5A4C2616
          - Ref: SharedVPCprivateSubnet2SubnetF203CD06
    DependsOn:
      - RagEnginesAuroraPgVectorDatabaseSetupProviderframeworkonEventServiceRoleDefaultPolicy5EC166EF
      - RagEnginesAuroraPgVectorDatabaseSetupProviderframeworkonEventServiceRoleD8C445F8
      - SharedVPCprivateSubnet1DefaultRoute608F3753
      - SharedVPCprivateSubnet1RouteTableAssociation83D920FA
      - SharedVPCprivateSubnet2DefaultRoute4387C202
      - SharedVPCprivateSubnet2RouteTableAssociation6788E94C
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/AuroraPgVector/DatabaseSetupProvider/framework-onEvent/Resource
      aws:asset:path: asset.7382a0addb9f34974a1ea6c6c9b063882af874828f366f5c93b2b7b64db15c94
      aws:asset:is-bundled: false
      aws:asset:property: Code
  RagEnginesAuroraPgVectorDatabaseSetupResourceCBEE6E4D:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - RagEnginesAuroraPgVectorDatabaseSetupProviderframeworkonEvent66CC77D0
          - Arn
      AURORA_DB_SECRET_ID:
        Ref: RagEnginesAuroraPgVectorAuroraDatabaseSecretAttachmentA167E2A9
    DependsOn:
      - RagEnginesAuroraPgVectorAuroraDatabase2A003265
      - RagEnginesAuroraPgVectorAuroraDatabaseSecretAttachmentA167E2A9
      - RagEnginesAuroraPgVectorAuroraDatabaseSecretBF0EF63E
      - RagEnginesAuroraPgVectorAuroraDatabaseSecurityGroupfromGenAIChatBotStackChatBotApiRestApiApiSecurityGroup4713F7A6IndirectPortAF8A1CD2
      - RagEnginesAuroraPgVectorAuroraDatabaseSecurityGroupfromGenAIChatBotStackLangchainInterfaceRequestHandlerSecurityGroup186219AFIndirectPortC796499E
      - RagEnginesAuroraPgVectorAuroraDatabaseSecurityGroupfromGenAIChatBotStackRagEnginesAuroraPgVectorCreateAuroraWorkspaceCreateAuroraWorkspaceFunctionSecurityGroupB21FA1A8IndirectPort33B5730B
      - RagEnginesAuroraPgVectorAuroraDatabaseSecurityGroupfromGenAIChatBotStackRagEnginesAuroraPgVectorDatabaseSetupFunctionSecurityGroup04B6866AIndirectPort13E8D6A8
      - RagEnginesAuroraPgVectorAuroraDatabaseSecurityGroupfromGenAIChatBotStackRagEnginesDataImportFileImportWorkflowDataImportFunctionSecurityGroupA014AE6AIndirectPort7500AC09
      - RagEnginesAuroraPgVectorAuroraDatabaseSecurityGroupfromGenAIChatBotStackRagEnginesDataImportWebsiteCrawlingWorkflowWebsiteParserFunctionSecurityGroup19374928IndirectPortB47B7F55
      - RagEnginesAuroraPgVectorAuroraDatabaseSecurityGroup333F94D8
      - RagEnginesAuroraPgVectorAuroraDatabaseServerlessInstance42B5CDC1
      - RagEnginesAuroraPgVectorAuroraDatabaseSubnets038B8C27
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/AuroraPgVector/DatabaseSetupResource/Default
  RagEnginesAuroraPgVectorCreateAuroraWorkspaceCreateAuroraWorkspaceFunctionServiceRole11C35928:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
    DependsOn:
      - SharedVPCprivateSubnet1DefaultRoute608F3753
      - SharedVPCprivateSubnet1RouteTableAssociation83D920FA
      - SharedVPCprivateSubnet2DefaultRoute4387C202
      - SharedVPCprivateSubnet2RouteTableAssociation6788E94C
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/AuroraPgVector/CreateAuroraWorkspace/CreateAuroraWorkspaceFunction/ServiceRole/Resource
  RagEnginesAuroraPgVectorCreateAuroraWorkspaceCreateAuroraWorkspaceFunctionServiceRoleDefaultPolicy2EE26FD3:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - secretsmanager:DescribeSecret
              - secretsmanager:GetSecretValue
            Effect: Allow
            Resource:
              Ref: RagEnginesAuroraPgVectorAuroraDatabaseSecretAttachmentA167E2A9
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:BatchWriteItem
              - dynamodb:ConditionCheckItem
              - dynamodb:DeleteItem
              - dynamodb:DescribeTable
              - dynamodb:GetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:PutItem
              - dynamodb:Query
              - dynamodb:Scan
              - dynamodb:UpdateItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - RagEnginesRagDynamoDBTablesWorkspacesD2D3C0C4
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - RagEnginesRagDynamoDBTablesWorkspacesD2D3C0C4
                        - Arn
                    - /index/*
        Version: "2012-10-17"
      PolicyName: RagEnginesAuroraPgVectorCreateAuroraWorkspaceCreateAuroraWorkspaceFunctionServiceRoleDefaultPolicy2EE26FD3
      Roles:
        - Ref: RagEnginesAuroraPgVectorCreateAuroraWorkspaceCreateAuroraWorkspaceFunctionServiceRole11C35928
    DependsOn:
      - SharedVPCprivateSubnet1DefaultRoute608F3753
      - SharedVPCprivateSubnet1RouteTableAssociation83D920FA
      - SharedVPCprivateSubnet2DefaultRoute4387C202
      - SharedVPCprivateSubnet2RouteTableAssociation6788E94C
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/AuroraPgVector/CreateAuroraWorkspace/CreateAuroraWorkspaceFunction/ServiceRole/DefaultPolicy/Resource
  RagEnginesAuroraPgVectorCreateAuroraWorkspaceCreateAuroraWorkspaceFunctionSecurityGroup1A0FE458:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Automatic security group for Lambda Function GenAIChatBotStackRagEnginesAuroraPgVectorCreateAuroraWorkspaceCreateAuroraWorkspaceFunction6F3D0494
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: SharedVPC6716DA5E
    DependsOn:
      - SharedVPCprivateSubnet1DefaultRoute608F3753
      - SharedVPCprivateSubnet1RouteTableAssociation83D920FA
      - SharedVPCprivateSubnet2DefaultRoute4387C202
      - SharedVPCprivateSubnet2RouteTableAssociation6788E94C
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/AuroraPgVector/CreateAuroraWorkspace/CreateAuroraWorkspaceFunction/SecurityGroup/Resource
  RagEnginesAuroraPgVectorCreateAuroraWorkspaceCreateAuroraWorkspaceFunctionEC174778:
    Type: AWS::Lambda::Function
    Properties:
      Architectures:
        - arm64
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: d4dc30c101ec1d172679df9900c33bd406bbf7cc2c02f11a8f6e2b2024607696.zip
      Environment:
        Variables:
          POWERTOOLS_DEV: "true"
          LOG_LEVEL: INFO
          POWERTOOLS_LOGGER_LOG_EVENT: "true"
          POWERTOOLS_SERVICE_NAME: chatbot
          AURORA_DB_SECRET_ID:
            Ref: RagEnginesAuroraPgVectorAuroraDatabaseSecretAttachmentA167E2A9
          WORKSPACES_TABLE_NAME:
            Ref: RagEnginesRagDynamoDBTablesWorkspacesD2D3C0C4
          WORKSPACES_BY_OBJECT_TYPE_INDEX_NAME: by_object_type_idx
      Handler: index.lambda_handler
      Layers:
        - Ref: SharedCommonLayerFC89CBCE
        - Fn::Join:
            - ""
            - - "arn:aws:lambda:"
              - Ref: AWS::Region
              - :017000801446:layer:AWSLambdaPowertoolsPythonV2-Arm64:42
        - Ref: SharedPythonSDKLayer19AC43CF
      Role:
        Fn::GetAtt:
          - RagEnginesAuroraPgVectorCreateAuroraWorkspaceCreateAuroraWorkspaceFunctionServiceRole11C35928
          - Arn
      Runtime: python3.11
      Timeout: 300
      VpcConfig:
        SecurityGroupIds:
          - Fn::GetAtt:
              - RagEnginesAuroraPgVectorCreateAuroraWorkspaceCreateAuroraWorkspaceFunctionSecurityGroup1A0FE458
              - GroupId
        SubnetIds:
          - Ref: SharedVPCprivateSubnet1Subnet5A4C2616
          - Ref: SharedVPCprivateSubnet2SubnetF203CD06
    DependsOn:
      - RagEnginesAuroraPgVectorCreateAuroraWorkspaceCreateAuroraWorkspaceFunctionServiceRoleDefaultPolicy2EE26FD3
      - RagEnginesAuroraPgVectorCreateAuroraWorkspaceCreateAuroraWorkspaceFunctionServiceRole11C35928
      - SharedVPCprivateSubnet1DefaultRoute608F3753
      - SharedVPCprivateSubnet1RouteTableAssociation83D920FA
      - SharedVPCprivateSubnet2DefaultRoute4387C202
      - SharedVPCprivateSubnet2RouteTableAssociation6788E94C
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/AuroraPgVector/CreateAuroraWorkspace/CreateAuroraWorkspaceFunction/Resource
      aws:asset:path: asset.d4dc30c101ec1d172679df9900c33bd406bbf7cc2c02f11a8f6e2b2024607696
      aws:asset:is-bundled: false
      aws:asset:property: Code
  RagEnginesAuroraPgVectorCreateAuroraWorkspaceCreateAuroraWorkspaceFunctionLogRetentionD92D6B68:
    Type: Custom::LogRetention
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A
          - Arn
      LogGroupName:
        Fn::Join:
          - ""
          - - /aws/lambda/
            - Ref: RagEnginesAuroraPgVectorCreateAuroraWorkspaceCreateAuroraWorkspaceFunctionEC174778
      RetentionInDays: 7
    DependsOn:
      - SharedVPCprivateSubnet1DefaultRoute608F3753
      - SharedVPCprivateSubnet1RouteTableAssociation83D920FA
      - SharedVPCprivateSubnet2DefaultRoute4387C202
      - SharedVPCprivateSubnet2RouteTableAssociation6788E94C
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/AuroraPgVector/CreateAuroraWorkspace/CreateAuroraWorkspaceFunction/LogRetention/Resource
  RagEnginesAuroraPgVectorCreateAuroraWorkspaceRoleB7D93D09:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: states.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/AuroraPgVector/CreateAuroraWorkspace/CreateAuroraWorkspace/Role/Resource
  RagEnginesAuroraPgVectorCreateAuroraWorkspaceRoleDefaultPolicy6BBDADB0:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: dynamodb:UpdateItem
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":dynamodb:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :table/
                  - Ref: RagEnginesRagDynamoDBTablesWorkspacesD2D3C0C4
          - Action: lambda:InvokeFunction
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - RagEnginesAuroraPgVectorCreateAuroraWorkspaceCreateAuroraWorkspaceFunctionEC174778
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - RagEnginesAuroraPgVectorCreateAuroraWorkspaceCreateAuroraWorkspaceFunctionEC174778
                        - Arn
                    - :*
        Version: "2012-10-17"
      PolicyName: RagEnginesAuroraPgVectorCreateAuroraWorkspaceRoleDefaultPolicy6BBDADB0
      Roles:
        - Ref: RagEnginesAuroraPgVectorCreateAuroraWorkspaceRoleB7D93D09
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/AuroraPgVector/CreateAuroraWorkspace/CreateAuroraWorkspace/Role/DefaultPolicy/Resource
  RagEnginesAuroraPgVectorCreateAuroraWorkspace50EFF4E7:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      DefinitionString:
        Fn::Join:
          - ""
          - - '{"StartAt":"SetCreating","States":{"SetCreating":{"Next":"Create","Type":"Task","ResultPath":null,"Resource":"arn:'
            - Ref: AWS::Partition
            - :states:::dynamodb:updateItem","Parameters":{"Key":{"workspace_id":{"S.$":"$.workspace_id"},"object_type":{"S":"workspace"}},"TableName":"
            - Ref: RagEnginesRagDynamoDBTablesWorkspacesD2D3C0C4
            - '","ExpressionAttributeNames":{"#status":"status"},"ExpressionAttributeValues":{":statusValue":{"S":"creating"}},"UpdateExpression":"set #status=:statusValue"}},"Create":{"Next":"SetReady","Retry":[{"ErrorEquals":["Lambda.ClientExecutionTimeoutException","Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2}],"Catch":[{"ErrorEquals":["States.ALL"],"ResultPath":"$.createResult","Next":"HandleError"}],"Type":"Task","ResultPath":"$.createResult","Resource":"arn:'
            - Ref: AWS::Partition
            - :states:::lambda:invoke","Parameters":{"FunctionName":"
            - Fn::GetAtt:
                - RagEnginesAuroraPgVectorCreateAuroraWorkspaceCreateAuroraWorkspaceFunctionEC174778
                - Arn
            - '","Payload.$":"$"}},"SetReady":{"Next":"Success","Type":"Task","ResultPath":null,"Resource":"arn:'
            - Ref: AWS::Partition
            - :states:::dynamodb:updateItem","Parameters":{"Key":{"workspace_id":{"S.$":"$.workspace_id"},"object_type":{"S":"workspace"}},"TableName":"
            - Ref: RagEnginesRagDynamoDBTablesWorkspacesD2D3C0C4
            - '","ExpressionAttributeNames":{"#status":"status"},"ExpressionAttributeValues":{":statusValue":{"S":"ready"}},"UpdateExpression":"set #status=:statusValue"}},"Success":{"Type":"Succeed"},"HandleError":{"Next":"Fail","Type":"Task","Resource":"arn:'
            - Ref: AWS::Partition
            - :states:::dynamodb:updateItem","Parameters":{"Key":{"workspace_id":{"S.$":"$.workspace_id"},"object_type":{"S":"workspace"}},"TableName":"
            - Ref: RagEnginesRagDynamoDBTablesWorkspacesD2D3C0C4
            - '","ExpressionAttributeNames":{"#status":"status"},"ExpressionAttributeValues":{":error":{"S":"error"}},"UpdateExpression":"set #status = :error"}},"Fail":{"Type":"Fail","Cause":"Workspace creation failed"}},"TimeoutSeconds":300,"Comment":"Create Aurora Workspace Workflow"}'
      RoleArn:
        Fn::GetAtt:
          - RagEnginesAuroraPgVectorCreateAuroraWorkspaceRoleB7D93D09
          - Arn
    DependsOn:
      - RagEnginesAuroraPgVectorCreateAuroraWorkspaceRoleDefaultPolicy6BBDADB0
      - RagEnginesAuroraPgVectorCreateAuroraWorkspaceRoleB7D93D09
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/AuroraPgVector/CreateAuroraWorkspace/CreateAuroraWorkspace/Resource
  RagEnginesDataImportIngestionDeadLetterQueue4A2F3D18:
    Type: AWS::SQS::Queue
    Properties:
      VisibilityTimeout: 900
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/DataImport/IngestionDeadLetterQueue/Resource
  RagEnginesDataImportIngestionQueue045D880F:
    Type: AWS::SQS::Queue
    Properties:
      RedrivePolicy:
        deadLetterTargetArn:
          Fn::GetAtt:
            - RagEnginesDataImportIngestionDeadLetterQueue4A2F3D18
            - Arn
        maxReceiveCount: 3
      VisibilityTimeout: 900
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/DataImport/IngestionQueue/Resource
  RagEnginesDataImportIngestionQueuePolicy0355D08F:
    Type: AWS::SQS::QueuePolicy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - sqs:GetQueueAttributes
              - sqs:GetQueueUrl
              - sqs:SendMessage
            Condition:
              ArnLike:
                aws:SourceArn:
                  Fn::GetAtt:
                    - RagEnginesDataImportUploadBucket061D697E
                    - Arn
            Effect: Allow
            Principal:
              Service: s3.amazonaws.com
            Resource:
              Fn::GetAtt:
                - RagEnginesDataImportIngestionQueue045D880F
                - Arn
        Version: "2012-10-17"
      Queues:
        - Ref: RagEnginesDataImportIngestionQueue045D880F
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/DataImport/IngestionQueue/Policy/Resource
  RagEnginesDataImportUploadBucket061D697E:
    Type: AWS::S3::Bucket
    Properties:
      AccelerateConfiguration:
        AccelerationStatus: Enabled
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders:
              - "*"
            AllowedMethods:
              - PUT
              - POST
              - GET
              - HEAD
            AllowedOrigins:
              - "*"
            ExposedHeaders:
              - ETag
            MaxAge: 3000
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: aws-cdk:auto-delete-objects
          Value: "true"
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/DataImport/UploadBucket/Resource
  RagEnginesDataImportUploadBucketPolicy05639444:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: RagEnginesDataImportUploadBucket061D697E
      PolicyDocument:
        Statement:
          - Action:
              - s3:DeleteObject*
              - s3:GetBucket*
              - s3:List*
            Effect: Allow
            Principal:
              AWS:
                Fn::GetAtt:
                  - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
                  - Arn
            Resource:
              - Fn::GetAtt:
                  - RagEnginesDataImportUploadBucket061D697E
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - RagEnginesDataImportUploadBucket061D697E
                        - Arn
                    - /*
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/DataImport/UploadBucket/Policy/Resource
  RagEnginesDataImportUploadBucketAutoDeleteObjectsCustomResource501512BA:
    Type: Custom::S3AutoDeleteObjects
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F
          - Arn
      BucketName:
        Ref: RagEnginesDataImportUploadBucket061D697E
    DependsOn:
      - RagEnginesDataImportUploadBucketPolicy05639444
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/DataImport/UploadBucket/AutoDeleteObjectsCustomResource/Default
  RagEnginesDataImportUploadBucketNotificationsBC145677:
    Type: Custom::S3BucketNotifications
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691
          - Arn
      BucketName:
        Ref: RagEnginesDataImportUploadBucket061D697E
      NotificationConfiguration:
        QueueConfigurations:
          - Events:
              - s3:ObjectCreated:*
            QueueArn:
              Fn::GetAtt:
                - RagEnginesDataImportIngestionQueue045D880F
                - Arn
          - Events:
              - s3:ObjectRemoved:*
            QueueArn:
              Fn::GetAtt:
                - RagEnginesDataImportIngestionQueue045D880F
                - Arn
      Managed: true
    DependsOn:
      - RagEnginesDataImportIngestionQueuePolicy0355D08F
      - RagEnginesDataImportIngestionQueue045D880F
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/DataImport/UploadBucket/Notifications/Resource
  RagEnginesDataImportProcessingBucketA7BE9701:
    Type: AWS::S3::Bucket
    Properties:
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: aws-cdk:auto-delete-objects
          Value: "true"
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/DataImport/ProcessingBucket/Resource
  RagEnginesDataImportProcessingBucketPolicy87702EA3:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: RagEnginesDataImportProcessingBucketA7BE9701
      PolicyDocument:
        Statement:
          - Action:
              - s3:DeleteObject*
              - s3:GetBucket*
              - s3:List*
            Effect: Allow
            Principal:
              AWS:
                Fn::GetAtt:
                  - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
                  - Arn
            Resource:
              - Fn::GetAtt:
                  - RagEnginesDataImportProcessingBucketA7BE9701
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - RagEnginesDataImportProcessingBucketA7BE9701
                        - Arn
                    - /*
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/DataImport/ProcessingBucket/Policy/Resource
  RagEnginesDataImportProcessingBucketAutoDeleteObjectsCustomResourceFE76D6A7:
    Type: Custom::S3AutoDeleteObjects
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F
          - Arn
      BucketName:
        Ref: RagEnginesDataImportProcessingBucketA7BE9701
    DependsOn:
      - RagEnginesDataImportProcessingBucketPolicy87702EA3
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/DataImport/ProcessingBucket/AutoDeleteObjectsCustomResource/Default
  RagEnginesDataImportBatchJobsFargateComputeEnvironmentSecurityGroup46B04BFD:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: GenAIChatBotStack/RagEngines/DataImport/BatchJobs/FargateComputeEnvironment/SecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: SharedVPC6716DA5E
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/DataImport/BatchJobs/FargateComputeEnvironment/SecurityGroup/Resource
  RagEnginesDataImportBatchJobsFargateComputeEnvironment1D68D63A:
    Type: AWS::Batch::ComputeEnvironment
    Properties:
      ComputeResources:
        MaxvCpus: 8192
        SecurityGroupIds:
          - Fn::GetAtt:
              - RagEnginesDataImportBatchJobsFargateComputeEnvironmentSecurityGroup46B04BFD
              - GroupId
        Subnets:
          - Ref: SharedVPCprivateSubnet1Subnet5A4C2616
          - Ref: SharedVPCprivateSubnet2SubnetF203CD06
        Type: FARGATE_SPOT
        UpdateToLatestImageVersion: true
      ReplaceComputeEnvironment: true
      State: ENABLED
      Type: managed
      UpdatePolicy:
        JobExecutionTimeoutMinutes: 30
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/DataImport/BatchJobs/FargateComputeEnvironment/Resource
  RagEnginesDataImportBatchJobsJobQueue74CD45F5:
    Type: AWS::Batch::JobQueue
    Properties:
      ComputeEnvironmentOrder:
        - ComputeEnvironment:
            Fn::GetAtt:
              - RagEnginesDataImportBatchJobsFargateComputeEnvironment1D68D63A
              - ComputeEnvironmentArn
          Order: 1
      Priority: 1
      State: ENABLED
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/DataImport/BatchJobs/JobQueue/Resource
  RagEnginesDataImportBatchJobsFileConverterJobRole9A870F56:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/DataImport/BatchJobs/FileConverterJobRole/Resource
  RagEnginesDataImportBatchJobsFileConverterJobRoleDefaultPolicy8520CC74:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:Abort*
              - s3:DeleteObject*
              - s3:GetBucket*
              - s3:GetObject*
              - s3:List*
              - s3:PutObject
              - s3:PutObjectLegalHold
              - s3:PutObjectRetention
              - s3:PutObjectTagging
              - s3:PutObjectVersionTagging
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - RagEnginesDataImportProcessingBucketA7BE9701
                  - Arn
              - Fn::GetAtt:
                  - RagEnginesDataImportUploadBucket061D697E
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - RagEnginesDataImportProcessingBucketA7BE9701
                        - Arn
                    - /*
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - RagEnginesDataImportUploadBucket061D697E
                        - Arn
                    - /*
        Version: "2012-10-17"
      PolicyName: RagEnginesDataImportBatchJobsFileConverterJobRoleDefaultPolicy8520CC74
      Roles:
        - Ref: RagEnginesDataImportBatchJobsFileConverterJobRole9A870F56
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/DataImport/BatchJobs/FileConverterJobRole/DefaultPolicy/Resource
  RagEnginesDataImportBatchJobsFileConverterContainerExecutionRole790198C0:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/DataImport/BatchJobs/FileConverterContainer/ExecutionRole/Resource
  RagEnginesDataImportBatchJobsFileConverterContainerExecutionRoleDefaultPolicy103E1C3A:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":logs:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :log-group:/aws/batch/job:*
          - Action:
              - ecr:BatchCheckLayerAvailability
              - ecr:BatchGetImage
              - ecr:GetDownloadUrlForLayer
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":ecr:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :repository/
                  - Fn::Sub: cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}
          - Action: ecr:GetAuthorizationToken
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: RagEnginesDataImportBatchJobsFileConverterContainerExecutionRoleDefaultPolicy103E1C3A
      Roles:
        - Ref: RagEnginesDataImportBatchJobsFileConverterContainerExecutionRole790198C0
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/DataImport/BatchJobs/FileConverterContainer/ExecutionRole/DefaultPolicy/Resource
  RagEnginesDataImportBatchJobsFileConverterJob7C2D4310:
    Type: AWS::Batch::JobDefinition
    Properties:
      ContainerProperties:
        Environment: []
        ExecutionRoleArn:
          Fn::GetAtt:
            - RagEnginesDataImportBatchJobsFileConverterContainerExecutionRole790198C0
            - Arn
        FargatePlatformConfiguration: {}
        Image:
          Fn::Sub: ${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:d6ea14c36ad7a36cac136f2efd5c2c93ed0518a4dcab8c8a84022ec97f9220a9
        JobRoleArn:
          Fn::GetAtt:
            - RagEnginesDataImportBatchJobsFileConverterJobRole9A870F56
            - Arn
        NetworkConfiguration:
          AssignPublicIp: DISABLED
        ReadonlyRootFilesystem: false
        ResourceRequirements:
          - Type: MEMORY
            Value: "2048"
          - Type: VCPU
            Value: "1"
      PlatformCapabilities:
        - FARGATE
      RetryStrategy: {}
      Timeout:
        AttemptDurationSeconds: 1800
      Type: container
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/DataImport/BatchJobs/FileConverterJob/Resource
  RagEnginesDataImportFileImportWorkflowDataImportFunctionServiceRoleCC666AC4:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
    DependsOn:
      - SharedVPCprivateSubnet1DefaultRoute608F3753
      - SharedVPCprivateSubnet1RouteTableAssociation83D920FA
      - SharedVPCprivateSubnet2DefaultRoute4387C202
      - SharedVPCprivateSubnet2RouteTableAssociation6788E94C
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/DataImport/FileImportWorkflow/DataImportFunction/ServiceRole/Resource
  RagEnginesDataImportFileImportWorkflowDataImportFunctionServiceRoleDefaultPolicy7DFCAF0A:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - ssm:DescribeParameters
              - ssm:GetParameter
              - ssm:GetParameterHistory
              - ssm:GetParameters
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":ssm:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :parameter/
                  - Ref: SharedConfig358B4A20
          - Action:
              - secretsmanager:DescribeSecret
              - secretsmanager:GetSecretValue
            Effect: Allow
            Resource:
              - Ref: RagEnginesAuroraPgVectorAuroraDatabaseSecretAttachmentA167E2A9
              - Ref: SharedApiKeysSecret9EA666ED
          - Action:
              - s3:Abort*
              - s3:DeleteObject*
              - s3:GetBucket*
              - s3:GetObject*
              - s3:List*
              - s3:PutObject
              - s3:PutObjectLegalHold
              - s3:PutObjectRetention
              - s3:PutObjectTagging
              - s3:PutObjectVersionTagging
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - RagEnginesDataImportProcessingBucketA7BE9701
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - RagEnginesDataImportProcessingBucketA7BE9701
                        - Arn
                    - /*
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:BatchWriteItem
              - dynamodb:ConditionCheckItem
              - dynamodb:DeleteItem
              - dynamodb:DescribeTable
              - dynamodb:GetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:PutItem
              - dynamodb:Query
              - dynamodb:Scan
              - dynamodb:UpdateItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - RagEnginesRagDynamoDBTablesDocumentsF6F2B272
                  - Arn
              - Fn::GetAtt:
                  - RagEnginesRagDynamoDBTablesWorkspacesD2D3C0C4
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - RagEnginesRagDynamoDBTablesDocumentsF6F2B272
                        - Arn
                    - /index/*
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - RagEnginesRagDynamoDBTablesWorkspacesD2D3C0C4
                        - Arn
                    - /index/*
          - Action: sagemaker:InvokeEndpoint
            Effect: Allow
            Resource:
              Ref: RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2Endpoint0DE6C18E
        Version: "2012-10-17"
      PolicyName: RagEnginesDataImportFileImportWorkflowDataImportFunctionServiceRoleDefaultPolicy7DFCAF0A
      Roles:
        - Ref: RagEnginesDataImportFileImportWorkflowDataImportFunctionServiceRoleCC666AC4
    DependsOn:
      - SharedVPCprivateSubnet1DefaultRoute608F3753
      - SharedVPCprivateSubnet1RouteTableAssociation83D920FA
      - SharedVPCprivateSubnet2DefaultRoute4387C202
      - SharedVPCprivateSubnet2RouteTableAssociation6788E94C
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/DataImport/FileImportWorkflow/DataImportFunction/ServiceRole/DefaultPolicy/Resource
  RagEnginesDataImportFileImportWorkflowDataImportFunctionSecurityGroupF507E09D:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Automatic security group for Lambda Function GenAIChatBotStackRagEnginesDataImportFileImportWorkflowDataImportFunctionAB327225
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: SharedVPC6716DA5E
    DependsOn:
      - SharedVPCprivateSubnet1DefaultRoute608F3753
      - SharedVPCprivateSubnet1RouteTableAssociation83D920FA
      - SharedVPCprivateSubnet2DefaultRoute4387C202
      - SharedVPCprivateSubnet2RouteTableAssociation6788E94C
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/DataImport/FileImportWorkflow/DataImportFunction/SecurityGroup/Resource
  RagEnginesDataImportFileImportWorkflowDataImportFunction1D6E03F7:
    Type: AWS::Lambda::Function
    Properties:
      Architectures:
        - arm64
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 7a27ca08c706c2c8803e166a3f0e884345c2f1bf728b5e75e6dfaeb4c6558bb3.zip
      Environment:
        Variables:
          POWERTOOLS_DEV: "true"
          LOG_LEVEL: INFO
          POWERTOOLS_LOGGER_LOG_EVENT: "true"
          POWERTOOLS_SERVICE_NAME: chatbot
          CONFIG_PARAMETER_NAME:
            Ref: SharedConfig358B4A20
          API_KEYS_SECRETS_ARN:
            Ref: SharedApiKeysSecret9EA666ED
          AURORA_DB_SECRET_ID:
            Ref: RagEnginesAuroraPgVectorAuroraDatabaseSecretAttachmentA167E2A9
          PROCESSING_BUCKET_NAME:
            Ref: RagEnginesDataImportProcessingBucketA7BE9701
          WORKSPACES_TABLE_NAME:
            Ref: RagEnginesRagDynamoDBTablesWorkspacesD2D3C0C4
          WORKSPACES_BY_OBJECT_TYPE_INDEX_NAME: by_object_type_idx
          DOCUMENTS_TABLE_NAME:
            Ref: RagEnginesRagDynamoDBTablesDocumentsF6F2B272
          DOCUMENTS_BY_COMPOUND_KEY_INDEX_NAME: by_compound_key_idx
          SAGEMAKER_RAG_MODELS_ENDPOINT:
            Fn::GetAtt:
              - RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2Endpoint0DE6C18E
              - EndpointName
      Handler: index.lambda_handler
      Layers:
        - Ref: SharedCommonLayerFC89CBCE
        - Fn::Join:
            - ""
            - - "arn:aws:lambda:"
              - Ref: AWS::Region
              - :017000801446:layer:AWSLambdaPowertoolsPythonV2-Arm64:42
        - Ref: SharedPythonSDKLayer19AC43CF
      MemorySize: 1024
      Role:
        Fn::GetAtt:
          - RagEnginesDataImportFileImportWorkflowDataImportFunctionServiceRoleCC666AC4
          - Arn
      Runtime: python3.11
      Timeout: 600
      VpcConfig:
        SecurityGroupIds:
          - Fn::GetAtt:
              - RagEnginesDataImportFileImportWorkflowDataImportFunctionSecurityGroupF507E09D
              - GroupId
        SubnetIds:
          - Ref: SharedVPCprivateSubnet1Subnet5A4C2616
          - Ref: SharedVPCprivateSubnet2SubnetF203CD06
    DependsOn:
      - RagEnginesDataImportFileImportWorkflowDataImportFunctionServiceRoleDefaultPolicy7DFCAF0A
      - RagEnginesDataImportFileImportWorkflowDataImportFunctionServiceRoleCC666AC4
      - SharedVPCprivateSubnet1DefaultRoute608F3753
      - SharedVPCprivateSubnet1RouteTableAssociation83D920FA
      - SharedVPCprivateSubnet2DefaultRoute4387C202
      - SharedVPCprivateSubnet2RouteTableAssociation6788E94C
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/DataImport/FileImportWorkflow/DataImportFunction/Resource
      aws:asset:path: asset.7a27ca08c706c2c8803e166a3f0e884345c2f1bf728b5e75e6dfaeb4c6558bb3
      aws:asset:is-bundled: false
      aws:asset:property: Code
  RagEnginesDataImportFileImportWorkflowDataImportFunctionLogRetention610ECB73:
    Type: Custom::LogRetention
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A
          - Arn
      LogGroupName:
        Fn::Join:
          - ""
          - - /aws/lambda/
            - Ref: RagEnginesDataImportFileImportWorkflowDataImportFunction1D6E03F7
      RetentionInDays: 7
    DependsOn:
      - SharedVPCprivateSubnet1DefaultRoute608F3753
      - SharedVPCprivateSubnet1RouteTableAssociation83D920FA
      - SharedVPCprivateSubnet2DefaultRoute4387C202
      - SharedVPCprivateSubnet2RouteTableAssociation6788E94C
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/DataImport/FileImportWorkflow/DataImportFunction/LogRetention/Resource
  RagEnginesDataImportFileImportWorkflowFileImportRoleFFCE496D:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: states.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/DataImport/FileImportWorkflow/FileImport/Role/Resource
  RagEnginesDataImportFileImportWorkflowFileImportRoleDefaultPolicyD581CC96:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: dynamodb:UpdateItem
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":dynamodb:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :table/
                  - Ref: RagEnginesRagDynamoDBTablesDocumentsF6F2B272
          - Action: lambda:InvokeFunction
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - RagEnginesDataImportFileImportWorkflowDataImportFunction1D6E03F7
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - RagEnginesDataImportFileImportWorkflowDataImportFunction1D6E03F7
                        - Arn
                    - :*
          - Action:
              - events:CreateRule
              - events:PutRule
              - events:PutTargets
            Effect: Allow
            Resource: "*"
          - Action: batch:SubmitJob
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - RagEnginesDataImportBatchJobsJobQueue74CD45F5
                  - JobQueueArn
              - Ref: RagEnginesDataImportBatchJobsFileConverterJob7C2D4310
        Version: "2012-10-17"
      PolicyName: RagEnginesDataImportFileImportWorkflowFileImportRoleDefaultPolicyD581CC96
      Roles:
        - Ref: RagEnginesDataImportFileImportWorkflowFileImportRoleFFCE496D
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/DataImport/FileImportWorkflow/FileImport/Role/DefaultPolicy/Resource
  RagEnginesDataImportFileImportWorkflowFileImportFEA3838D:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      DefinitionString:
        Fn::Join:
          - ""
          - - '{"StartAt":"SetProcessing","States":{"SetProcessing":{"Next":"ConvertToText?","Type":"Task","ResultPath":null,"Resource":"arn:'
            - Ref: AWS::Partition
            - :states:::dynamodb:updateItem","Parameters":{"Key":{"workspace_id":{"S.$":"$.workspace_id"},"document_id":{"S.$":"$.document_id"}},"TableName":"
            - Ref: RagEnginesRagDynamoDBTablesDocumentsF6F2B272
            - '","ExpressionAttributeNames":{"#status":"status"},"ExpressionAttributeValues":{":statusValue":{"S":"processing"}},"UpdateExpression":"set #status=:statusValue"}},"ConvertToText?":{"Type":"Choice","Choices":[{"Variable":"$.convert_to_text","BooleanEquals":true,"Next":"ConvertFile"}],"Default":"DataImport"},"DataImport":{"Next":"SetProcessed","Retry":[{"ErrorEquals":["Lambda.ClientExecutionTimeoutException","Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2}],"Catch":[{"ErrorEquals":["States.ALL"],"ResultPath":"$.importResult","Next":"HandleError"}],"Type":"Task","ResultPath":"$.importResult","Resource":"arn:'
            - Ref: AWS::Partition
            - :states:::lambda:invoke","Parameters":{"FunctionName":"
            - Fn::GetAtt:
                - RagEnginesDataImportFileImportWorkflowDataImportFunction1D6E03F7
                - Arn
            - '","Payload.$":"$"}},"ConvertFile":{"Next":"DataImport","Type":"Task","Resource":"arn:aws:states:::batch:submitJob.sync","Parameters":{"JobDefinition":"'
            - Ref: RagEnginesDataImportBatchJobsFileConverterJob7C2D4310
            - "\",\"JobName.$\":\"States.Format('FileImport-{}-{}', $.workspace_id, $.document_id)\",\"JobQueue\":\""
            - Fn::GetAtt:
                - RagEnginesDataImportBatchJobsJobQueue74CD45F5
                - JobQueueArn
            - '","ContainerOverrides":{"Environment":[{"Name":"WORKSPACE_ID","Value.$":"$.workspace_id"},{"Name":"DOCUMENT_ID","Value.$":"$.document_id"},{"Name":"INPUT_BUCKET_NAME","Value.$":"$.input_bucket_name"},{"Name":"INPUT_OBJECT_KEY","Value.$":"$.input_object_key"},{"Name":"PROCESSING_BUCKET_NAME","Value.$":"$.processing_bucket_name"},{"Name":"PROCESSING_OBJECT_KEY","Value.$":"$.processing_object_key"}]}},"ResultPath":"$.job","Catch":[{"ErrorEquals":["States.ALL"],"Next":"HandleError"}]},"SetProcessed":{"Next":"Success","Type":"Task","ResultPath":null,"Resource":"arn:'
            - Ref: AWS::Partition
            - :states:::dynamodb:updateItem","Parameters":{"Key":{"workspace_id":{"S.$":"$.workspace_id"},"document_id":{"S.$":"$.document_id"}},"TableName":"
            - Ref: RagEnginesRagDynamoDBTablesDocumentsF6F2B272
            - '","ExpressionAttributeNames":{"#status":"status"},"ExpressionAttributeValues":{":statusValue":{"S":"processed"}},"UpdateExpression":"set #status=:statusValue"}},"Success":{"Type":"Succeed"},"HandleError":{"Next":"Fail","Type":"Task","Resource":"arn:'
            - Ref: AWS::Partition
            - :states:::dynamodb:updateItem","Parameters":{"Key":{"workspace_id":{"S.$":"$.workspace_id"},"document_id":{"S.$":"$.document_id"}},"TableName":"
            - Ref: RagEnginesRagDynamoDBTablesDocumentsF6F2B272
            - '","ExpressionAttributeNames":{"#status":"status"},"ExpressionAttributeValues":{":error":{"S":"error"}},"UpdateExpression":"set #status = :error"}},"Fail":{"Type":"Fail","Cause":"Import failed"}},"TimeoutSeconds":1800,"Comment":"File import workflow"}'
      RoleArn:
        Fn::GetAtt:
          - RagEnginesDataImportFileImportWorkflowFileImportRoleFFCE496D
          - Arn
    DependsOn:
      - RagEnginesDataImportFileImportWorkflowFileImportRoleDefaultPolicyD581CC96
      - RagEnginesDataImportFileImportWorkflowFileImportRoleFFCE496D
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/DataImport/FileImportWorkflow/FileImport/Resource
  RagEnginesDataImportWebsiteCrawlingWorkflowWebsiteParserFunctionServiceRoleACE8459B:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
    DependsOn:
      - SharedVPCprivateSubnet1DefaultRoute608F3753
      - SharedVPCprivateSubnet1RouteTableAssociation83D920FA
      - SharedVPCprivateSubnet2DefaultRoute4387C202
      - SharedVPCprivateSubnet2RouteTableAssociation6788E94C
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/DataImport/WebsiteCrawlingWorkflow/WebsiteParserFunction/ServiceRole/Resource
  RagEnginesDataImportWebsiteCrawlingWorkflowWebsiteParserFunctionServiceRoleDefaultPolicyAFE029A7:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - ssm:DescribeParameters
              - ssm:GetParameter
              - ssm:GetParameterHistory
              - ssm:GetParameters
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":ssm:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :parameter/
                  - Ref: SharedConfig358B4A20
          - Action:
              - secretsmanager:DescribeSecret
              - secretsmanager:GetSecretValue
            Effect: Allow
            Resource:
              - Ref: RagEnginesAuroraPgVectorAuroraDatabaseSecretAttachmentA167E2A9
              - Ref: SharedApiKeysSecret9EA666ED
          - Action:
              - s3:Abort*
              - s3:DeleteObject*
              - s3:GetBucket*
              - s3:GetObject*
              - s3:List*
              - s3:PutObject
              - s3:PutObjectLegalHold
              - s3:PutObjectRetention
              - s3:PutObjectTagging
              - s3:PutObjectVersionTagging
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - RagEnginesDataImportProcessingBucketA7BE9701
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - RagEnginesDataImportProcessingBucketA7BE9701
                        - Arn
                    - /*
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:BatchWriteItem
              - dynamodb:ConditionCheckItem
              - dynamodb:DeleteItem
              - dynamodb:DescribeTable
              - dynamodb:GetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:PutItem
              - dynamodb:Query
              - dynamodb:Scan
              - dynamodb:UpdateItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - RagEnginesRagDynamoDBTablesDocumentsF6F2B272
                  - Arn
              - Fn::GetAtt:
                  - RagEnginesRagDynamoDBTablesWorkspacesD2D3C0C4
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - RagEnginesRagDynamoDBTablesDocumentsF6F2B272
                        - Arn
                    - /index/*
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - RagEnginesRagDynamoDBTablesWorkspacesD2D3C0C4
                        - Arn
                    - /index/*
          - Action: sagemaker:InvokeEndpoint
            Effect: Allow
            Resource:
              Ref: RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2Endpoint0DE6C18E
        Version: "2012-10-17"
      PolicyName: RagEnginesDataImportWebsiteCrawlingWorkflowWebsiteParserFunctionServiceRoleDefaultPolicyAFE029A7
      Roles:
        - Ref: RagEnginesDataImportWebsiteCrawlingWorkflowWebsiteParserFunctionServiceRoleACE8459B
    DependsOn:
      - SharedVPCprivateSubnet1DefaultRoute608F3753
      - SharedVPCprivateSubnet1RouteTableAssociation83D920FA
      - SharedVPCprivateSubnet2DefaultRoute4387C202
      - SharedVPCprivateSubnet2RouteTableAssociation6788E94C
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/DataImport/WebsiteCrawlingWorkflow/WebsiteParserFunction/ServiceRole/DefaultPolicy/Resource
  RagEnginesDataImportWebsiteCrawlingWorkflowWebsiteParserFunctionSecurityGroup697DC81B:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Automatic security group for Lambda Function GenAIChatBotStackRagEnginesDataImportWebsiteCrawlingWorkflowWebsiteParserFunctionFEE1369B
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: SharedVPC6716DA5E
    DependsOn:
      - SharedVPCprivateSubnet1DefaultRoute608F3753
      - SharedVPCprivateSubnet1RouteTableAssociation83D920FA
      - SharedVPCprivateSubnet2DefaultRoute4387C202
      - SharedVPCprivateSubnet2RouteTableAssociation6788E94C
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/DataImport/WebsiteCrawlingWorkflow/WebsiteParserFunction/SecurityGroup/Resource
  RagEnginesDataImportWebsiteCrawlingWorkflowWebsiteParserFunctionB3A9EC50:
    Type: AWS::Lambda::Function
    Properties:
      Architectures:
        - arm64
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 4e640ebfcba0dd0cb3248fec96cace30cc3950adf3744b97e89168569a03b632.zip
      Environment:
        Variables:
          POWERTOOLS_DEV: "true"
          LOG_LEVEL: INFO
          POWERTOOLS_LOGGER_LOG_EVENT: "true"
          POWERTOOLS_SERVICE_NAME: chatbot
          CONFIG_PARAMETER_NAME:
            Ref: SharedConfig358B4A20
          API_KEYS_SECRETS_ARN:
            Ref: SharedApiKeysSecret9EA666ED
          AURORA_DB_SECRET_ID:
            Ref: RagEnginesAuroraPgVectorAuroraDatabaseSecretAttachmentA167E2A9
          PROCESSING_BUCKET_NAME:
            Ref: RagEnginesDataImportProcessingBucketA7BE9701
          WORKSPACES_TABLE_NAME:
            Ref: RagEnginesRagDynamoDBTablesWorkspacesD2D3C0C4
          WORKSPACES_BY_OBJECT_TYPE_INDEX_NAME: by_object_type_idx
          DOCUMENTS_TABLE_NAME:
            Ref: RagEnginesRagDynamoDBTablesDocumentsF6F2B272
          DOCUMENTS_BY_COMPOUND_KEY_INDEX_NAME: by_compound_key_idx
          SAGEMAKER_RAG_MODELS_ENDPOINT:
            Fn::GetAtt:
              - RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2Endpoint0DE6C18E
              - EndpointName
      Handler: index.lambda_handler
      Layers:
        - Ref: SharedCommonLayerFC89CBCE
        - Fn::Join:
            - ""
            - - "arn:aws:lambda:"
              - Ref: AWS::Region
              - :017000801446:layer:AWSLambdaPowertoolsPythonV2-Arm64:42
        - Ref: SharedPythonSDKLayer19AC43CF
      MemorySize: 1024
      Role:
        Fn::GetAtt:
          - RagEnginesDataImportWebsiteCrawlingWorkflowWebsiteParserFunctionServiceRoleACE8459B
          - Arn
      Runtime: python3.11
      Timeout: 900
      VpcConfig:
        SecurityGroupIds:
          - Fn::GetAtt:
              - RagEnginesDataImportWebsiteCrawlingWorkflowWebsiteParserFunctionSecurityGroup697DC81B
              - GroupId
        SubnetIds:
          - Ref: SharedVPCprivateSubnet1Subnet5A4C2616
          - Ref: SharedVPCprivateSubnet2SubnetF203CD06
    DependsOn:
      - RagEnginesDataImportWebsiteCrawlingWorkflowWebsiteParserFunctionServiceRoleDefaultPolicyAFE029A7
      - RagEnginesDataImportWebsiteCrawlingWorkflowWebsiteParserFunctionServiceRoleACE8459B
      - SharedVPCprivateSubnet1DefaultRoute608F3753
      - SharedVPCprivateSubnet1RouteTableAssociation83D920FA
      - SharedVPCprivateSubnet2DefaultRoute4387C202
      - SharedVPCprivateSubnet2RouteTableAssociation6788E94C
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/DataImport/WebsiteCrawlingWorkflow/WebsiteParserFunction/Resource
      aws:asset:path: asset.4e640ebfcba0dd0cb3248fec96cace30cc3950adf3744b97e89168569a03b632
      aws:asset:is-bundled: false
      aws:asset:property: Code
  RagEnginesDataImportWebsiteCrawlingWorkflowWebsiteParserFunctionLogRetentionF30455B5:
    Type: Custom::LogRetention
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A
          - Arn
      LogGroupName:
        Fn::Join:
          - ""
          - - /aws/lambda/
            - Ref: RagEnginesDataImportWebsiteCrawlingWorkflowWebsiteParserFunctionB3A9EC50
      RetentionInDays: 7
    DependsOn:
      - SharedVPCprivateSubnet1DefaultRoute608F3753
      - SharedVPCprivateSubnet1RouteTableAssociation83D920FA
      - SharedVPCprivateSubnet2DefaultRoute4387C202
      - SharedVPCprivateSubnet2RouteTableAssociation6788E94C
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/DataImport/WebsiteCrawlingWorkflow/WebsiteParserFunction/LogRetention/Resource
  RagEnginesDataImportWebsiteCrawlingWorkflowWebsiteCrawlingRole749B2009:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: states.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/DataImport/WebsiteCrawlingWorkflow/WebsiteCrawling/Role/Resource
  RagEnginesDataImportWebsiteCrawlingWorkflowWebsiteCrawlingRoleDefaultPolicyA5C332A2:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: dynamodb:UpdateItem
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":dynamodb:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :table/
                  - Ref: RagEnginesRagDynamoDBTablesDocumentsF6F2B272
          - Action: lambda:InvokeFunction
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - RagEnginesDataImportWebsiteCrawlingWorkflowWebsiteParserFunctionB3A9EC50
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - RagEnginesDataImportWebsiteCrawlingWorkflowWebsiteParserFunctionB3A9EC50
                        - Arn
                    - :*
          - Action:
              - events:CreateRule
              - events:PutRule
              - events:PutTargets
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: RagEnginesDataImportWebsiteCrawlingWorkflowWebsiteCrawlingRoleDefaultPolicyA5C332A2
      Roles:
        - Ref: RagEnginesDataImportWebsiteCrawlingWorkflowWebsiteCrawlingRole749B2009
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/DataImport/WebsiteCrawlingWorkflow/WebsiteCrawling/Role/DefaultPolicy/Resource
  RagEnginesDataImportWebsiteCrawlingWorkflowWebsiteCrawling9B1CEC96:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      DefinitionString:
        Fn::Join:
          - ""
          - - '{"StartAt":"SetProcessing","States":{"SetProcessing":{"Next":"WebsiteParser","Type":"Task","ResultPath":null,"Resource":"arn:'
            - Ref: AWS::Partition
            - :states:::dynamodb:updateItem","Parameters":{"Key":{"workspace_id":{"S.$":"$.workspace_id"},"document_id":{"S.$":"$.document_id"}},"TableName":"
            - Ref: RagEnginesRagDynamoDBTablesDocumentsF6F2B272
            - '","ExpressionAttributeNames":{"#status":"status"},"ExpressionAttributeValues":{":statusValue":{"S":"processing"}},"UpdateExpression":"set #status=:statusValue"}},"WebsiteParser":{"Next":"SetProcessed","Retry":[{"ErrorEquals":["Lambda.ClientExecutionTimeoutException","Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2}],"Catch":[{"ErrorEquals":["States.ALL"],"ResultPath":"$.parsingResult","Next":"HandleError"}],"Type":"Task","ResultPath":"$.parsingResult","Resource":"arn:'
            - Ref: AWS::Partition
            - :states:::lambda:invoke","Parameters":{"FunctionName":"
            - Fn::GetAtt:
                - RagEnginesDataImportWebsiteCrawlingWorkflowWebsiteParserFunctionB3A9EC50
                - Arn
            - '","Payload.$":"$"}},"SetProcessed":{"Next":"Success","Type":"Task","ResultPath":null,"Resource":"arn:'
            - Ref: AWS::Partition
            - :states:::dynamodb:updateItem","Parameters":{"Key":{"workspace_id":{"S.$":"$.workspace_id"},"document_id":{"S.$":"$.document_id"}},"TableName":"
            - Ref: RagEnginesRagDynamoDBTablesDocumentsF6F2B272
            - '","ExpressionAttributeNames":{"#status":"status"},"ExpressionAttributeValues":{":statusValue":{"S":"processed"}},"UpdateExpression":"set #status=:statusValue"}},"Success":{"Type":"Succeed"},"HandleError":{"Next":"Fail","Type":"Task","Resource":"arn:'
            - Ref: AWS::Partition
            - :states:::dynamodb:updateItem","Parameters":{"Key":{"workspace_id":{"S.$":"$.workspace_id"},"document_id":{"S.$":"$.document_id"}},"TableName":"
            - Ref: RagEnginesRagDynamoDBTablesDocumentsF6F2B272
            - '","ExpressionAttributeNames":{"#status":"status"},"ExpressionAttributeValues":{":error":{"S":"error"}},"UpdateExpression":"set #status = :error"}},"Fail":{"Type":"Fail","Cause":"Import failed"}},"TimeoutSeconds":7200,"Comment":"Website crawling workflow"}'
      RoleArn:
        Fn::GetAtt:
          - RagEnginesDataImportWebsiteCrawlingWorkflowWebsiteCrawlingRole749B2009
          - Arn
    DependsOn:
      - RagEnginesDataImportWebsiteCrawlingWorkflowWebsiteCrawlingRoleDefaultPolicyA5C332A2
      - RagEnginesDataImportWebsiteCrawlingWorkflowWebsiteCrawlingRole749B2009
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/DataImport/WebsiteCrawlingWorkflow/WebsiteCrawling/Resource
  RagEnginesDataImportUploadHandlerServiceRole46EB8689:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
    DependsOn:
      - SharedVPCprivateSubnet1DefaultRoute608F3753
      - SharedVPCprivateSubnet1RouteTableAssociation83D920FA
      - SharedVPCprivateSubnet2DefaultRoute4387C202
      - SharedVPCprivateSubnet2RouteTableAssociation6788E94C
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/DataImport/UploadHandler/ServiceRole/Resource
  RagEnginesDataImportUploadHandlerServiceRoleDefaultPolicyEA26DE3E:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - xray:PutTelemetryRecords
              - xray:PutTraceSegments
            Effect: Allow
            Resource: "*"
          - Action:
              - s3:Abort*
              - s3:DeleteObject*
              - s3:GetBucket*
              - s3:GetObject*
              - s3:List*
              - s3:PutObject
              - s3:PutObjectLegalHold
              - s3:PutObjectRetention
              - s3:PutObjectTagging
              - s3:PutObjectVersionTagging
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - RagEnginesDataImportProcessingBucketA7BE9701
                  - Arn
              - Fn::GetAtt:
                  - RagEnginesDataImportUploadBucket061D697E
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - RagEnginesDataImportProcessingBucketA7BE9701
                        - Arn
                    - /*
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - RagEnginesDataImportUploadBucket061D697E
                        - Arn
                    - /*
          - Action:
              - secretsmanager:DescribeSecret
              - secretsmanager:GetSecretValue
            Effect: Allow
            Resource:
              Ref: SharedApiKeysSecret9EA666ED
          - Action:
              - ssm:DescribeParameters
              - ssm:GetParameter
              - ssm:GetParameterHistory
              - ssm:GetParameters
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":ssm:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :parameter/
                  - Ref: SharedConfig358B4A20
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:BatchWriteItem
              - dynamodb:ConditionCheckItem
              - dynamodb:DeleteItem
              - dynamodb:DescribeTable
              - dynamodb:GetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:PutItem
              - dynamodb:Query
              - dynamodb:Scan
              - dynamodb:UpdateItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - RagEnginesRagDynamoDBTablesDocumentsF6F2B272
                  - Arn
              - Fn::GetAtt:
                  - RagEnginesRagDynamoDBTablesWorkspacesD2D3C0C4
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - RagEnginesRagDynamoDBTablesDocumentsF6F2B272
                        - Arn
                    - /index/*
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - RagEnginesRagDynamoDBTablesWorkspacesD2D3C0C4
                        - Arn
                    - /index/*
          - Action:
              - sqs:ChangeMessageVisibility
              - sqs:DeleteMessage
              - sqs:GetQueueAttributes
              - sqs:GetQueueUrl
              - sqs:ReceiveMessage
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - RagEnginesDataImportIngestionQueue045D880F
                - Arn
          - Action: states:StartExecution
            Effect: Allow
            Resource:
              Ref: RagEnginesDataImportFileImportWorkflowFileImportFEA3838D
        Version: "2012-10-17"
      PolicyName: RagEnginesDataImportUploadHandlerServiceRoleDefaultPolicyEA26DE3E
      Roles:
        - Ref: RagEnginesDataImportUploadHandlerServiceRole46EB8689
    DependsOn:
      - SharedVPCprivateSubnet1DefaultRoute608F3753
      - SharedVPCprivateSubnet1RouteTableAssociation83D920FA
      - SharedVPCprivateSubnet2DefaultRoute4387C202
      - SharedVPCprivateSubnet2RouteTableAssociation6788E94C
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/DataImport/UploadHandler/ServiceRole/DefaultPolicy/Resource
  RagEnginesDataImportUploadHandlerSecurityGroupE50D6894:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Automatic security group for Lambda Function GenAIChatBotStackRagEnginesDataImportUploadHandlerA300E8BE
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: SharedVPC6716DA5E
    DependsOn:
      - SharedVPCprivateSubnet1DefaultRoute608F3753
      - SharedVPCprivateSubnet1RouteTableAssociation83D920FA
      - SharedVPCprivateSubnet2DefaultRoute4387C202
      - SharedVPCprivateSubnet2RouteTableAssociation6788E94C
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/DataImport/UploadHandler/SecurityGroup/Resource
  RagEnginesDataImportUploadHandlerDB43C77C:
    Type: AWS::Lambda::Function
    Properties:
      Architectures:
        - arm64
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 283661ed80ebf9c6bb280961f09fffef0de4029f05d346f19c382c50c828a0d1.zip
      Environment:
        Variables:
          POWERTOOLS_DEV: "true"
          LOG_LEVEL: INFO
          POWERTOOLS_LOGGER_LOG_EVENT: "true"
          POWERTOOLS_SERVICE_NAME: chatbot
          CONFIG_PARAMETER_NAME:
            Ref: SharedConfig358B4A20
          API_KEYS_SECRETS_ARN:
            Ref: SharedApiKeysSecret9EA666ED
          PROCESSING_BUCKET_NAME:
            Ref: RagEnginesDataImportProcessingBucketA7BE9701
          UPLOAD_BUCKET_NAME:
            Ref: RagEnginesDataImportUploadBucket061D697E
          WORKSPACES_TABLE_NAME:
            Ref: RagEnginesRagDynamoDBTablesWorkspacesD2D3C0C4
          WORKSPACES_BY_OBJECT_TYPE_INDEX_NAME: by_object_type_idx
          DOCUMENTS_TABLE_NAME:
            Ref: RagEnginesRagDynamoDBTablesDocumentsF6F2B272
          DOCUMENTS_BY_COMPOUND_KEY_INDEX_NAME: by_compound_key_idx
          SAGEMAKER_RAG_MODELS_ENDPOINT:
            Fn::GetAtt:
              - RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2Endpoint0DE6C18E
              - EndpointName
          FILE_IMPORT_WORKFLOW_ARN:
            Ref: RagEnginesDataImportFileImportWorkflowFileImportFEA3838D
      Handler: index.lambda_handler
      Layers:
        - Ref: SharedCommonLayerFC89CBCE
        - Fn::Join:
            - ""
            - - "arn:aws:lambda:"
              - Ref: AWS::Region
              - :017000801446:layer:AWSLambdaPowertoolsPythonV2-Arm64:42
        - Ref: SharedPythonSDKLayer19AC43CF
      MemorySize: 512
      Role:
        Fn::GetAtt:
          - RagEnginesDataImportUploadHandlerServiceRole46EB8689
          - Arn
      Runtime: python3.11
      Timeout: 900
      TracingConfig:
        Mode: Active
      VpcConfig:
        SecurityGroupIds:
          - Fn::GetAtt:
              - RagEnginesDataImportUploadHandlerSecurityGroupE50D6894
              - GroupId
        SubnetIds:
          - Ref: SharedVPCprivateSubnet1Subnet5A4C2616
          - Ref: SharedVPCprivateSubnet2SubnetF203CD06
    DependsOn:
      - RagEnginesDataImportUploadHandlerServiceRoleDefaultPolicyEA26DE3E
      - RagEnginesDataImportUploadHandlerServiceRole46EB8689
      - SharedVPCprivateSubnet1DefaultRoute608F3753
      - SharedVPCprivateSubnet1RouteTableAssociation83D920FA
      - SharedVPCprivateSubnet2DefaultRoute4387C202
      - SharedVPCprivateSubnet2RouteTableAssociation6788E94C
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/DataImport/UploadHandler/Resource
      aws:asset:path: asset.283661ed80ebf9c6bb280961f09fffef0de4029f05d346f19c382c50c828a0d1
      aws:asset:is-bundled: false
      aws:asset:property: Code
  RagEnginesDataImportUploadHandlerLogRetention21BCC790:
    Type: Custom::LogRetention
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A
          - Arn
      LogGroupName:
        Fn::Join:
          - ""
          - - /aws/lambda/
            - Ref: RagEnginesDataImportUploadHandlerDB43C77C
      RetentionInDays: 7
    DependsOn:
      - SharedVPCprivateSubnet1DefaultRoute608F3753
      - SharedVPCprivateSubnet1RouteTableAssociation83D920FA
      - SharedVPCprivateSubnet2DefaultRoute4387C202
      - SharedVPCprivateSubnet2RouteTableAssociation6788E94C
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/DataImport/UploadHandler/LogRetention/Resource
  RagEnginesDataImportUploadHandlerSqsEventSourceGenAIChatBotStackRagEnginesDataImportIngestionQueue414F8EFE63673C4F:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      EventSourceArn:
        Fn::GetAtt:
          - RagEnginesDataImportIngestionQueue045D880F
          - Arn
      FunctionName:
        Ref: RagEnginesDataImportUploadHandlerDB43C77C
    DependsOn:
      - SharedVPCprivateSubnet1DefaultRoute608F3753
      - SharedVPCprivateSubnet1RouteTableAssociation83D920FA
      - SharedVPCprivateSubnet2DefaultRoute4387C202
      - SharedVPCprivateSubnet2RouteTableAssociation6788E94C
    Metadata:
      aws:cdk:path: GenAIChatBotStack/RagEngines/DataImport/UploadHandler/SqsEventSource:GenAIChatBotStackRagEnginesDataImportIngestionQueue414F8EFE/Resource
  CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
      ManagedPolicyArns:
        - Fn::Sub: arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: GenAIChatBotStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role
  CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 5194f926380567b6fdffc61629afdad2afc818614cb227df45e499c69db163a7.zip
      Timeout: 900
      MemorySize: 128
      Handler: index.handler
      Role:
        Fn::GetAtt:
          - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
          - Arn
      Runtime: nodejs18.x
      Description:
        Fn::Join:
          - ""
          - - "Lambda function for auto-deleting objects in "
            - Ref: RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2BuildBucket980AD447
            - " S3 bucket."
    DependsOn:
      - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
    Metadata:
      aws:cdk:path: GenAIChatBotStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler
      aws:asset:path: asset.5194f926380567b6fdffc61629afdad2afc818614cb227df45e499c69db163a7
      aws:asset:property: Code
  CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: GenAIChatBotStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/Resource
  CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetBucket*
              - s3:GetObject*
              - s3:List*
            Effect: Allow
            Resource:
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":s3:::"
                    - Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
                    - /*
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":s3:::"
                    - Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
          - Action:
              - s3:Abort*
              - s3:DeleteObject*
              - s3:GetBucket*
              - s3:GetObject*
              - s3:List*
              - s3:PutObject
              - s3:PutObjectLegalHold
              - s3:PutObjectRetention
              - s3:PutObjectTagging
              - s3:PutObjectVersionTagging
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2BuildBucket980AD447
                  - Arn
              - Fn::GetAtt:
                  - UserInterfaceWebsiteBucket2BDEA247
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2BuildBucket980AD447
                        - Arn
                    - /*
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - UserInterfaceWebsiteBucket2BDEA247
                        - Arn
                    - /*
          - Action:
              - cloudfront:CreateInvalidation
              - cloudfront:GetInvalidation
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF
      Roles:
        - Ref: CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265
    Metadata:
      aws:cdk:path: GenAIChatBotStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/DefaultPolicy/Resource
  CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 9eb41a5505d37607ac419321497a4f8c21cf0ee1f9b4a6b29aa04301aea5c7fd.zip
      Environment:
        Variables:
          AWS_CA_BUNDLE: /etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem
      Handler: index.handler
      Layers:
        - Ref: RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2BuildScriptDeploymentAwsCliLayerECF8E7F9
      Role:
        Fn::GetAtt:
          - CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265
          - Arn
      Runtime: python3.9
      Timeout: 900
    DependsOn:
      - CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF
      - CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265
    Metadata:
      aws:cdk:path: GenAIChatBotStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/Resource
      aws:asset:path: asset.9eb41a5505d37607ac419321497a4f8c21cf0ee1f9b4a6b29aa04301aea5c7fd
      aws:asset:is-bundled: false
      aws:asset:property: Code
  LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: GenAIChatBotStack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource
  LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - logs:DeleteRetentionPolicy
              - logs:PutRetentionPolicy
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB
      Roles:
        - Ref: LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB
    Metadata:
      aws:cdk:path: GenAIChatBotStack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource
  LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A:
    Type: AWS::Lambda::Function
    Properties:
      Handler: index.handler
      Runtime: nodejs18.x
      Timeout: 900
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 5bc602ecde93c947efe5899ae355f999986a1acbe610b1c0b9c468d738857555.zip
      Role:
        Fn::GetAtt:
          - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB
          - Arn
    DependsOn:
      - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB
      - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB
    Metadata:
      aws:cdk:path: GenAIChatBotStack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Resource
      aws:asset:path: asset.5bc602ecde93c947efe5899ae355f999986a1acbe610b1c0b9c468d738857555
      aws:asset:is-bundled: false
      aws:asset:property: Code
  BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: GenAIChatBotStack/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Role/Resource
  BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: s3:PutBucketNotification
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36
      Roles:
        - Ref: BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC
    Metadata:
      aws:cdk:path: GenAIChatBotStack/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Role/DefaultPolicy/Resource
  BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691:
    Type: AWS::Lambda::Function
    Properties:
      Description: AWS CloudFormation handler for "Custom::S3BucketNotifications" resources (@aws-cdk/aws-s3)
      Code:
        ZipFile: |
          import boto3  # type: ignore
          import json
          import logging
          import urllib.request

          s3 = boto3.client("s3")

          EVENTBRIDGE_CONFIGURATION = 'EventBridgeConfiguration'

          CONFIGURATION_TYPES = ["TopicConfigurations", "QueueConfigurations", "LambdaFunctionConfigurations"]

          def handler(event: dict, context):
            response_status = "SUCCESS"
            error_message = ""
            try:
              props = event["ResourceProperties"]
              bucket = props["BucketName"]
              notification_configuration = props["NotificationConfiguration"]
              request_type = event["RequestType"]
              managed = props.get('Managed', 'true').lower() == 'true'
              stack_id = event['StackId']

              if managed:
                config = handle_managed(request_type, notification_configuration)
              else:
                config = handle_unmanaged(bucket, stack_id, request_type, notification_configuration)

              put_bucket_notification_configuration(bucket, config)
            except Exception as e:
              logging.exception("Failed to put bucket notification configuration")
              response_status = "FAILED"
              error_message = f"Error: {str(e)}. "
            finally:
              submit_response(event, context, response_status, error_message)

          def handle_managed(request_type, notification_configuration):
            if request_type == 'Delete':
              return {}
            return notification_configuration

          def handle_unmanaged(bucket, stack_id, request_type, notification_configuration):
            external_notifications = find_external_notifications(bucket, stack_id)

            if request_type == 'Delete':
              return external_notifications

            def with_id(notification):
              notification['Id'] = f"{stack_id}-{hash(json.dumps(notification, sort_keys=True))}"
              return notification

            notifications = {}
            for t in CONFIGURATION_TYPES:
              external = external_notifications.get(t, [])
              incoming = [with_id(n) for n in notification_configuration.get(t, [])]
              notifications[t] = external + incoming

            if EVENTBRIDGE_CONFIGURATION in notification_configuration:
              notifications[EVENTBRIDGE_CONFIGURATION] = notification_configuration[EVENTBRIDGE_CONFIGURATION]
            elif EVENTBRIDGE_CONFIGURATION in external_notifications:
              notifications[EVENTBRIDGE_CONFIGURATION] = external_notifications[EVENTBRIDGE_CONFIGURATION]

            return notifications

          def find_external_notifications(bucket, stack_id):
            existing_notifications = get_bucket_notification_configuration(bucket)
            external_notifications = {}
            for t in CONFIGURATION_TYPES:
              external_notifications[t] = [n for n in existing_notifications.get(t, []) if not n['Id'].startswith(f"{stack_id}-")]

            if EVENTBRIDGE_CONFIGURATION in existing_notifications:
              external_notifications[EVENTBRIDGE_CONFIGURATION] = existing_notifications[EVENTBRIDGE_CONFIGURATION]

            return external_notifications

          def get_bucket_notification_configuration(bucket):
            return s3.get_bucket_notification_configuration(Bucket=bucket)

          def put_bucket_notification_configuration(bucket, notification_configuration):
            s3.put_bucket_notification_configuration(Bucket=bucket, NotificationConfiguration=notification_configuration)

          def submit_response(event: dict, context, response_status: str, error_message: str):
            response_body = json.dumps(
              {
                "Status": response_status,
                "Reason": f"{error_message}See the details in CloudWatch Log Stream: {context.log_stream_name}",
                "PhysicalResourceId": event.get("PhysicalResourceId") or event["LogicalResourceId"],
                "StackId": event["StackId"],
                "RequestId": event["RequestId"],
                "LogicalResourceId": event["LogicalResourceId"],
                "NoEcho": False,
              }
            ).encode("utf-8")
            headers = {"content-type": "", "content-length": str(len(response_body))}
            try:
              req = urllib.request.Request(url=event["ResponseURL"], headers=headers, data=response_body, method="PUT")
              with urllib.request.urlopen(req) as response:
                print(response.read().decode("utf-8"))
              print("Status code: " + response.reason)
            except Exception as e:
                print("send(..) failed executing request.urlopen(..): " + str(e))
      Handler: index.handler
      Role:
        Fn::GetAtt:
          - BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC
          - Arn
      Runtime: python3.9
      Timeout: 300
    DependsOn:
      - BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36
      - BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC
    Metadata:
      aws:cdk:path: GenAIChatBotStack/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Resource
  ChatBotApiChatDynamoDBTablesSessionsTable92B891E3:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: SessionId
          AttributeType: S
        - AttributeName: UserId
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      GlobalSecondaryIndexes:
        - IndexName: byUserId
          KeySchema:
            - AttributeName: UserId
              KeyType: HASH
          Projection:
            ProjectionType: ALL
      KeySchema:
        - AttributeName: SessionId
          KeyType: HASH
        - AttributeName: UserId
          KeyType: RANGE
      SSESpecification:
        SSEEnabled: true
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: GenAIChatBotStack/ChatBotApi/ChatDynamoDBTables/SessionsTable/Resource
  ChatBotApiRestApiApiSecurityGroupC0E40B67:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: GenAIChatBotStack/ChatBotApi/RestApi/ApiSecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: SharedVPC6716DA5E
    Metadata:
      aws:cdk:path: GenAIChatBotStack/ChatBotApi/RestApi/ApiSecurityGroup/Resource
  ChatBotApiRestApiApiHandlerServiceRole059D02D5:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
    DependsOn:
      - SharedVPCprivateSubnet1DefaultRoute608F3753
      - SharedVPCprivateSubnet1RouteTableAssociation83D920FA
      - SharedVPCprivateSubnet2DefaultRoute4387C202
      - SharedVPCprivateSubnet2RouteTableAssociation6788E94C
    Metadata:
      aws:cdk:path: GenAIChatBotStack/ChatBotApi/RestApi/ApiHandler/ServiceRole/Resource
  ChatBotApiRestApiApiHandlerServiceRoleDefaultPolicy72B33177:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - comprehend:DetectDominantLanguage
              - comprehend:DetectSentiment
              - xray:PutTelemetryRecords
              - xray:PutTraceSegments
            Effect: Allow
            Resource: "*"
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:BatchWriteItem
              - dynamodb:ConditionCheckItem
              - dynamodb:DeleteItem
              - dynamodb:DescribeTable
              - dynamodb:GetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:PutItem
              - dynamodb:Query
              - dynamodb:Scan
              - dynamodb:UpdateItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - ChatBotApiChatDynamoDBTablesSessionsTable92B891E3
                  - Arn
              - Fn::GetAtt:
                  - RagEnginesRagDynamoDBTablesDocumentsF6F2B272
                  - Arn
              - Fn::GetAtt:
                  - RagEnginesRagDynamoDBTablesWorkspacesD2D3C0C4
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - ChatBotApiChatDynamoDBTablesSessionsTable92B891E3
                        - Arn
                    - /index/*
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - RagEnginesRagDynamoDBTablesDocumentsF6F2B272
                        - Arn
                    - /index/*
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - RagEnginesRagDynamoDBTablesWorkspacesD2D3C0C4
                        - Arn
                    - /index/*
          - Action:
              - secretsmanager:DescribeSecret
              - secretsmanager:GetSecretValue
            Effect: Allow
            Resource:
              - Ref: RagEnginesAuroraPgVectorAuroraDatabaseSecretAttachmentA167E2A9
              - Ref: SharedApiKeysSecret9EA666ED
              - Ref: SharedXOriginVerifySecret258B0376
          - Action: states:StartExecution
            Effect: Allow
            Resource:
              - Ref: RagEnginesAuroraPgVectorCreateAuroraWorkspace50EFF4E7
              - Ref: RagEnginesDataImportFileImportWorkflowFileImportFEA3838D
              - Ref: RagEnginesDataImportWebsiteCrawlingWorkflowWebsiteCrawling9B1CEC96
          - Action: sagemaker:InvokeEndpoint
            Effect: Allow
            Resource:
              - Ref: LargeLanguageModelsLLamaV213BBasemetaLLama213b3740E139
              - Ref: RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2Endpoint0DE6C18E
          - Action:
              - ssm:DescribeParameters
              - ssm:GetParameter
              - ssm:GetParameterHistory
              - ssm:GetParameters
            Effect: Allow
            Resource:
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":ssm:"
                    - Ref: AWS::Region
                    - ":"
                    - Ref: AWS::AccountId
                    - :parameter/
                    - Ref: LargeLanguageModelsLLMsParameter13E743CE
              - Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":ssm:"
                    - Ref: AWS::Region
                    - ":"
                    - Ref: AWS::AccountId
                    - :parameter/
                    - Ref: SharedConfig358B4A20
          - Action:
              - s3:Abort*
              - s3:DeleteObject*
              - s3:GetBucket*
              - s3:GetObject*
              - s3:List*
              - s3:PutObject
              - s3:PutObjectLegalHold
              - s3:PutObjectRetention
              - s3:PutObjectTagging
              - s3:PutObjectVersionTagging
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - RagEnginesDataImportProcessingBucketA7BE9701
                  - Arn
              - Fn::GetAtt:
                  - RagEnginesDataImportUploadBucket061D697E
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - RagEnginesDataImportProcessingBucketA7BE9701
                        - Arn
                    - /*
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - RagEnginesDataImportUploadBucket061D697E
                        - Arn
                    - /*
        Version: "2012-10-17"
      PolicyName: ChatBotApiRestApiApiHandlerServiceRoleDefaultPolicy72B33177
      Roles:
        - Ref: ChatBotApiRestApiApiHandlerServiceRole059D02D5
    DependsOn:
      - SharedVPCprivateSubnet1DefaultRoute608F3753
      - SharedVPCprivateSubnet1RouteTableAssociation83D920FA
      - SharedVPCprivateSubnet2DefaultRoute4387C202
      - SharedVPCprivateSubnet2RouteTableAssociation6788E94C
    Metadata:
      aws:cdk:path: GenAIChatBotStack/ChatBotApi/RestApi/ApiHandler/ServiceRole/DefaultPolicy/Resource
  ChatBotApiRestApiApiHandler4019AED4:
    Type: AWS::Lambda::Function
    Properties:
      Architectures:
        - arm64
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 232effb5de011187ff6d8e8d9b9d52d6e1a030fdaea5853ee513da79be9df27d.zip
      Environment:
        Variables:
          POWERTOOLS_DEV: "true"
          LOG_LEVEL: INFO
          POWERTOOLS_LOGGER_LOG_EVENT: "true"
          POWERTOOLS_SERVICE_NAME: chatbot
          CONFIG_PARAMETER_NAME:
            Ref: SharedConfig358B4A20
          LARGE_LANGUAGE_MODELS_PARAMETER_NAME:
            Ref: LargeLanguageModelsLLMsParameter13E743CE
          X_ORIGIN_VERIFY_SECRET_ARN:
            Ref: SharedXOriginVerifySecret258B0376
          API_KEYS_SECRETS_ARN:
            Ref: SharedApiKeysSecret9EA666ED
          SESSIONS_TABLE_NAME:
            Ref: ChatBotApiChatDynamoDBTablesSessionsTable92B891E3
          SESSIONS_BY_USER_ID_INDEX_NAME: byUserId
          UPLOAD_BUCKET_NAME:
            Ref: RagEnginesDataImportUploadBucket061D697E
          PROCESSING_BUCKET_NAME:
            Ref: RagEnginesDataImportProcessingBucketA7BE9701
          AURORA_DB_SECRET_ID:
            Ref: RagEnginesAuroraPgVectorAuroraDatabaseSecretAttachmentA167E2A9
          WORKSPACES_TABLE_NAME:
            Ref: RagEnginesRagDynamoDBTablesWorkspacesD2D3C0C4
          WORKSPACES_BY_OBJECT_TYPE_INDEX_NAME: by_object_type_idx
          DOCUMENTS_TABLE_NAME:
            Ref: RagEnginesRagDynamoDBTablesDocumentsF6F2B272
          DOCUMENTS_BY_COMPOUND_KEY_INDEX_NAME: by_compound_key_idx
          SAGEMAKER_RAG_MODELS_ENDPOINT:
            Fn::GetAtt:
              - RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2Endpoint0DE6C18E
              - EndpointName
          CREATE_AURORA_WORKSPACE_WORKFLOW_ARN:
            Ref: RagEnginesAuroraPgVectorCreateAuroraWorkspace50EFF4E7
          FILE_IMPORT_WORKFLOW_ARN:
            Ref: RagEnginesDataImportFileImportWorkflowFileImportFEA3838D
          WEBSITE_CRAWLING_WORKFLOW_ARN:
            Ref: RagEnginesDataImportWebsiteCrawlingWorkflowWebsiteCrawling9B1CEC96
      Handler: index.handler
      Layers:
        - Ref: SharedCommonLayerFC89CBCE
        - Fn::Join:
            - ""
            - - "arn:aws:lambda:"
              - Ref: AWS::Region
              - :017000801446:layer:AWSLambdaPowertoolsPythonV2-Arm64:42
        - Ref: SharedPythonSDKLayer19AC43CF
      MemorySize: 512
      Role:
        Fn::GetAtt:
          - ChatBotApiRestApiApiHandlerServiceRole059D02D5
          - Arn
      Runtime: python3.11
      Timeout: 600
      TracingConfig:
        Mode: Active
      VpcConfig:
        SecurityGroupIds:
          - Fn::GetAtt:
              - ChatBotApiRestApiApiSecurityGroupC0E40B67
              - GroupId
        SubnetIds:
          - Ref: SharedVPCprivateSubnet1Subnet5A4C2616
          - Ref: SharedVPCprivateSubnet2SubnetF203CD06
    DependsOn:
      - ChatBotApiRestApiApiHandlerServiceRoleDefaultPolicy72B33177
      - ChatBotApiRestApiApiHandlerServiceRole059D02D5
      - SharedVPCprivateSubnet1DefaultRoute608F3753
      - SharedVPCprivateSubnet1RouteTableAssociation83D920FA
      - SharedVPCprivateSubnet2DefaultRoute4387C202
      - SharedVPCprivateSubnet2RouteTableAssociation6788E94C
    Metadata:
      aws:cdk:path: GenAIChatBotStack/ChatBotApi/RestApi/ApiHandler/Resource
      aws:asset:path: asset.232effb5de011187ff6d8e8d9b9d52d6e1a030fdaea5853ee513da79be9df27d
      aws:asset:is-bundled: false
      aws:asset:property: Code
  ChatBotApiRestApiApiHandlerLogRetentionFE676893:
    Type: Custom::LogRetention
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A
          - Arn
      LogGroupName:
        Fn::Join:
          - ""
          - - /aws/lambda/
            - Ref: ChatBotApiRestApiApiHandler4019AED4
      RetentionInDays: 7
    DependsOn:
      - SharedVPCprivateSubnet1DefaultRoute608F3753
      - SharedVPCprivateSubnet1RouteTableAssociation83D920FA
      - SharedVPCprivateSubnet2DefaultRoute4387C202
      - SharedVPCprivateSubnet2RouteTableAssociation6788E94C
    Metadata:
      aws:cdk:path: GenAIChatBotStack/ChatBotApi/RestApi/ApiHandler/LogRetention/Resource
  ChatBotApiRestApiChatBotApi27963910:
    Type: AWS::ApiGateway::RestApi
    Properties:
      EndpointConfiguration:
        Types:
          - REGIONAL
      Name: ChatBotApi
    Metadata:
      aws:cdk:path: GenAIChatBotStack/ChatBotApi/RestApi/ChatBotApi/Resource
  ChatBotApiRestApiChatBotApiDeploymentBFB6C251db2102b8911f38db5a1d7dc41d790f5e:
    Type: AWS::ApiGateway::Deployment
    Properties:
      Description: Automatically created by the RestApi construct
      RestApiId:
        Ref: ChatBotApiRestApiChatBotApi27963910
    DependsOn:
      - ChatBotApiRestApiChatBotApiOPTIONSFFF98B95
      - ChatBotApiRestApiChatBotApiv1proxyANYFCBFAC9D
      - ChatBotApiRestApiChatBotApiv1proxyOPTIONSB45E8904
      - ChatBotApiRestApiChatBotApiv1proxy5FBE3172
      - ChatBotApiRestApiChatBotApiv1OPTIONS065A1907
      - ChatBotApiRestApiChatBotApiv1D535B1FE
    Metadata:
      aws:cdk:path: GenAIChatBotStack/ChatBotApi/RestApi/ChatBotApi/Deployment/Resource
  ChatBotApiRestApiChatBotApiDeploymentStageapiC136BEAF:
    Type: AWS::ApiGateway::Stage
    Properties:
      DeploymentId:
        Ref: ChatBotApiRestApiChatBotApiDeploymentBFB6C251db2102b8911f38db5a1d7dc41d790f5e
      MethodSettings:
        - DataTraceEnabled: false
          HttpMethod: "*"
          LoggingLevel: INFO
          MetricsEnabled: true
          ResourcePath: /*
          ThrottlingRateLimit: 2500
      RestApiId:
        Ref: ChatBotApiRestApiChatBotApi27963910
      StageName: api
      TracingEnabled: true
    Metadata:
      aws:cdk:path: GenAIChatBotStack/ChatBotApi/RestApi/ChatBotApi/DeploymentStage.api/Resource
  ChatBotApiRestApiChatBotApiOPTIONSFFF98B95:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,Authorization,X-Amz-Date'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
              method.response.header.Access-Control-Max-Age: "'600'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Max-Age: true
          StatusCode: "204"
      ResourceId:
        Fn::GetAtt:
          - ChatBotApiRestApiChatBotApi27963910
          - RootResourceId
      RestApiId:
        Ref: ChatBotApiRestApiChatBotApi27963910
    Metadata:
      aws:cdk:path: GenAIChatBotStack/ChatBotApi/RestApi/ChatBotApi/Default/OPTIONS/Resource
  ChatBotApiRestApiChatBotApiv1D535B1FE:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - ChatBotApiRestApiChatBotApi27963910
          - RootResourceId
      PathPart: v1
      RestApiId:
        Ref: ChatBotApiRestApiChatBotApi27963910
    Metadata:
      aws:cdk:path: GenAIChatBotStack/ChatBotApi/RestApi/ChatBotApi/Default/v1/Resource
  ChatBotApiRestApiChatBotApiv1OPTIONS065A1907:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,Authorization,X-Amz-Date'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
              method.response.header.Access-Control-Max-Age: "'600'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Max-Age: true
          StatusCode: "204"
      ResourceId:
        Ref: ChatBotApiRestApiChatBotApiv1D535B1FE
      RestApiId:
        Ref: ChatBotApiRestApiChatBotApi27963910
    Metadata:
      aws:cdk:path: GenAIChatBotStack/ChatBotApi/RestApi/ChatBotApi/Default/v1/OPTIONS/Resource
  ChatBotApiRestApiChatBotApiv1proxy5FBE3172:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: ChatBotApiRestApiChatBotApiv1D535B1FE
      PathPart: "{proxy+}"
      RestApiId:
        Ref: ChatBotApiRestApiChatBotApi27963910
    Metadata:
      aws:cdk:path: GenAIChatBotStack/ChatBotApi/RestApi/ChatBotApi/Default/v1/{proxy+}/Resource
  ChatBotApiRestApiChatBotApiv1proxyOPTIONSB45E8904:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,Authorization,X-Amz-Date'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
              method.response.header.Access-Control-Max-Age: "'600'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Max-Age: true
          StatusCode: "204"
      ResourceId:
        Ref: ChatBotApiRestApiChatBotApiv1proxy5FBE3172
      RestApiId:
        Ref: ChatBotApiRestApiChatBotApi27963910
    Metadata:
      aws:cdk:path: GenAIChatBotStack/ChatBotApi/RestApi/ChatBotApi/Default/v1/{proxy+}/OPTIONS/Resource
  ChatBotApiRestApiChatBotApiv1proxyANYApiPermissionGenAIChatBotStackChatBotApiRestApiChatBotApiD80AE892ANYv1proxyD38D09DB:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - ChatBotApiRestApiApiHandler4019AED4
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: ChatBotApiRestApiChatBotApi27963910
            - /
            - Ref: ChatBotApiRestApiChatBotApiDeploymentStageapiC136BEAF
            - /*/v1/*
    Metadata:
      aws:cdk:path: GenAIChatBotStack/ChatBotApi/RestApi/ChatBotApi/Default/v1/{proxy+}/ANY/ApiPermission.GenAIChatBotStackChatBotApiRestApiChatBotApiD80AE892.ANY..v1.{proxy+}
  ChatBotApiRestApiChatBotApiv1proxyANYApiPermissionTestGenAIChatBotStackChatBotApiRestApiChatBotApiD80AE892ANYv1proxyEC166C04:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - ChatBotApiRestApiApiHandler4019AED4
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: ChatBotApiRestApiChatBotApi27963910
            - /test-invoke-stage/*/v1/*
    Metadata:
      aws:cdk:path: GenAIChatBotStack/ChatBotApi/RestApi/ChatBotApi/Default/v1/{proxy+}/ANY/ApiPermission.Test.GenAIChatBotStackChatBotApiRestApiChatBotApiD80AE892.ANY..v1.{proxy+}
  ChatBotApiRestApiChatBotApiv1proxyANYFCBFAC9D:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId:
        Ref: ChatBotApiRestApiApiGatewayCognitoAuthorizerBDDA3544
      HttpMethod: ANY
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - ChatBotApiRestApiApiHandler4019AED4
                  - Arn
              - /invocations
      ResourceId:
        Ref: ChatBotApiRestApiChatBotApiv1proxy5FBE3172
      RestApiId:
        Ref: ChatBotApiRestApiChatBotApi27963910
    Metadata:
      aws:cdk:path: GenAIChatBotStack/ChatBotApi/RestApi/ChatBotApi/Default/v1/{proxy+}/ANY/Resource
  ChatBotApiRestApiApiGatewayCognitoAuthorizerBDDA3544:
    Type: AWS::ApiGateway::Authorizer
    Properties:
      IdentitySource: method.request.header.Authorization
      Name: CognitoAuthorizer
      ProviderARNs:
        - Fn::GetAtt:
            - AuthenticationUserPool28698864
            - Arn
      RestApiId:
        Ref: ChatBotApiRestApiChatBotApi27963910
      Type: COGNITO_USER_POOLS
    Metadata:
      aws:cdk:path: GenAIChatBotStack/ChatBotApi/RestApi/ApiGatewayCognitoAuthorizer
  ChatBotApiWebSocketApiMessagesTopic2C2AF1B2:
    Type: AWS::SNS::Topic
    Metadata:
      aws:cdk:path: GenAIChatBotStack/ChatBotApi/WebSocketApi/MessagesTopic/Resource
  ChatBotApiWebSocketApiConnectionsTable445E2903:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: connectionId
          AttributeType: S
        - AttributeName: userId
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      GlobalSecondaryIndexes:
        - IndexName: byUser
          KeySchema:
            - AttributeName: userId
              KeyType: HASH
          Projection:
            ProjectionType: ALL
      KeySchema:
        - AttributeName: connectionId
          KeyType: HASH
      SSESpecification:
        SSEEnabled: true
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: GenAIChatBotStack/ChatBotApi/WebSocketApi/ConnectionsTable/Resource
  ChatBotApiWebSocketApiConnectionHandlerFunctionServiceRoleC23D0D5F:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: GenAIChatBotStack/ChatBotApi/WebSocketApi/ConnectionHandlerFunction/ServiceRole/Resource
  ChatBotApiWebSocketApiConnectionHandlerFunctionServiceRoleDefaultPolicyA2EEBE8E:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - xray:PutTelemetryRecords
              - xray:PutTraceSegments
            Effect: Allow
            Resource: "*"
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:BatchWriteItem
              - dynamodb:ConditionCheckItem
              - dynamodb:DeleteItem
              - dynamodb:DescribeTable
              - dynamodb:GetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:PutItem
              - dynamodb:Query
              - dynamodb:Scan
              - dynamodb:UpdateItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - ChatBotApiWebSocketApiConnectionsTable445E2903
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - ChatBotApiWebSocketApiConnectionsTable445E2903
                        - Arn
                    - /index/*
        Version: "2012-10-17"
      PolicyName: ChatBotApiWebSocketApiConnectionHandlerFunctionServiceRoleDefaultPolicyA2EEBE8E
      Roles:
        - Ref: ChatBotApiWebSocketApiConnectionHandlerFunctionServiceRoleC23D0D5F
    Metadata:
      aws:cdk:path: GenAIChatBotStack/ChatBotApi/WebSocketApi/ConnectionHandlerFunction/ServiceRole/DefaultPolicy/Resource
  ChatBotApiWebSocketApiConnectionHandlerFunction876D504F:
    Type: AWS::Lambda::Function
    Properties:
      Architectures:
        - arm64
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: d859cfb02f9c77134fa3c45fad34044507da7e66e199fda28af8d6fb9b09d4f0.zip
      Environment:
        Variables:
          POWERTOOLS_DEV: "true"
          LOG_LEVEL: INFO
          POWERTOOLS_LOGGER_LOG_EVENT: "true"
          POWERTOOLS_SERVICE_NAME: chatbot
          CONNECTIONS_TABLE_NAME:
            Ref: ChatBotApiWebSocketApiConnectionsTable445E2903
      Handler: index.handler
      Layers:
        - Fn::Join:
            - ""
            - - "arn:aws:lambda:"
              - Ref: AWS::Region
              - :017000801446:layer:AWSLambdaPowertoolsPythonV2-Arm64:42
      Role:
        Fn::GetAtt:
          - ChatBotApiWebSocketApiConnectionHandlerFunctionServiceRoleC23D0D5F
          - Arn
      Runtime: python3.11
      TracingConfig:
        Mode: Active
    DependsOn:
      - ChatBotApiWebSocketApiConnectionHandlerFunctionServiceRoleDefaultPolicyA2EEBE8E
      - ChatBotApiWebSocketApiConnectionHandlerFunctionServiceRoleC23D0D5F
    Metadata:
      aws:cdk:path: GenAIChatBotStack/ChatBotApi/WebSocketApi/ConnectionHandlerFunction/Resource
      aws:asset:path: asset.d859cfb02f9c77134fa3c45fad34044507da7e66e199fda28af8d6fb9b09d4f0
      aws:asset:is-bundled: false
      aws:asset:property: Code
  ChatBotApiWebSocketApiAuthorizerFunctionServiceRole51C2438C:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: GenAIChatBotStack/ChatBotApi/WebSocketApi/AuthorizerFunction/ServiceRole/Resource
  ChatBotApiWebSocketApiAuthorizerFunctionServiceRoleDefaultPolicy8FC4BB00:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - xray:PutTelemetryRecords
              - xray:PutTraceSegments
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: ChatBotApiWebSocketApiAuthorizerFunctionServiceRoleDefaultPolicy8FC4BB00
      Roles:
        - Ref: ChatBotApiWebSocketApiAuthorizerFunctionServiceRole51C2438C
    Metadata:
      aws:cdk:path: GenAIChatBotStack/ChatBotApi/WebSocketApi/AuthorizerFunction/ServiceRole/DefaultPolicy/Resource
  ChatBotApiWebSocketApiAuthorizerFunctionB525687E:
    Type: AWS::Lambda::Function
    Properties:
      Architectures:
        - arm64
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 65ecd95b9e244242d69bb9db02f8409d443066555f2f1c1e959c2cac00b2cbfb.zip
      Environment:
        Variables:
          POWERTOOLS_DEV: "true"
          LOG_LEVEL: INFO
          POWERTOOLS_LOGGER_LOG_EVENT: "true"
          POWERTOOLS_SERVICE_NAME: chatbot
      Handler: index.handler
      Layers:
        - Fn::Join:
            - ""
            - - "arn:aws:lambda:"
              - Ref: AWS::Region
              - :017000801446:layer:AWSLambdaPowertoolsPythonV2-Arm64:42
      Role:
        Fn::GetAtt:
          - ChatBotApiWebSocketApiAuthorizerFunctionServiceRole51C2438C
          - Arn
      Runtime: python3.11
      TracingConfig:
        Mode: Active
    DependsOn:
      - ChatBotApiWebSocketApiAuthorizerFunctionServiceRoleDefaultPolicy8FC4BB00
      - ChatBotApiWebSocketApiAuthorizerFunctionServiceRole51C2438C
    Metadata:
      aws:cdk:path: GenAIChatBotStack/ChatBotApi/WebSocketApi/AuthorizerFunction/Resource
      aws:asset:path: asset.65ecd95b9e244242d69bb9db02f8409d443066555f2f1c1e959c2cac00b2cbfb
      aws:asset:is-bundled: false
      aws:asset:property: Code
  ChatBotApiWebSocketApi31976E25:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: WebSocketApi
      ProtocolType: WEBSOCKET
      RouteSelectionExpression: $request.body.action
    Metadata:
      aws:cdk:path: GenAIChatBotStack/ChatBotApi/WebSocketApi/WebSocketApi/Resource
  ChatBotApiWebSocketApiconnectRouteConnectIntegrationPermission694FE92D:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - ChatBotApiWebSocketApiConnectionHandlerFunction876D504F
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: ChatBotApiWebSocketApi31976E25
            - /*/*$connect
    Metadata:
      aws:cdk:path: GenAIChatBotStack/ChatBotApi/WebSocketApi/WebSocketApi/$connect-Route/ConnectIntegration-Permission
  ChatBotApiWebSocketApiconnectRouteConnectIntegration979FB8D7:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: ChatBotApiWebSocketApi31976E25
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":apigateway:"
            - Ref: AWS::Region
            - :lambda:path/2015-03-31/functions/
            - Fn::GetAtt:
                - ChatBotApiWebSocketApiConnectionHandlerFunction876D504F
                - Arn
            - /invocations
    Metadata:
      aws:cdk:path: GenAIChatBotStack/ChatBotApi/WebSocketApi/WebSocketApi/$connect-Route/ConnectIntegration/Resource
  ChatBotApiWebSocketApiconnectRoute15E7FEB9:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: ChatBotApiWebSocketApi31976E25
      AuthorizationType: CUSTOM
      AuthorizerId:
        Ref: ChatBotApiWebSocketApiAuthorizerF069BF39
      RouteKey: $connect
      Target:
        Fn::Join:
          - ""
          - - integrations/
            - Ref: ChatBotApiWebSocketApiconnectRouteConnectIntegration979FB8D7
    Metadata:
      aws:cdk:path: GenAIChatBotStack/ChatBotApi/WebSocketApi/WebSocketApi/$connect-Route/Resource
  ChatBotApiWebSocketApiAuthorizerF069BF39:
    Type: AWS::ApiGatewayV2::Authorizer
    Properties:
      ApiId:
        Ref: ChatBotApiWebSocketApi31976E25
      AuthorizerType: REQUEST
      AuthorizerUri:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":apigateway:"
            - Ref: AWS::Region
            - :lambda:path/2015-03-31/functions/
            - Fn::GetAtt:
                - ChatBotApiWebSocketApiAuthorizerFunctionB525687E
                - Arn
            - /invocations
      IdentitySource:
        - route.request.querystring.token
      Name: Authorizer
    Metadata:
      aws:cdk:path: GenAIChatBotStack/ChatBotApi/WebSocketApi/WebSocketApi/Authorizer/Resource
  ChatBotApiWebSocketApiGenAIChatBotStackChatBotApiWebSocketApiAuthorizer0C8F8A25PermissionA2658A75:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - ChatBotApiWebSocketApiAuthorizerFunctionB525687E
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: ChatBotApiWebSocketApi31976E25
            - /authorizers/
            - Ref: ChatBotApiWebSocketApiAuthorizerF069BF39
    Metadata:
      aws:cdk:path: GenAIChatBotStack/ChatBotApi/WebSocketApi/WebSocketApi/GenAIChatBotStackChatBotApiWebSocketApiAuthorizer0C8F8A25-Permission
  ChatBotApiWebSocketApidisconnectRouteDisconnectIntegrationPermissionD0EE4D24:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - ChatBotApiWebSocketApiConnectionHandlerFunction876D504F
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: ChatBotApiWebSocketApi31976E25
            - /*/*$disconnect
    Metadata:
      aws:cdk:path: GenAIChatBotStack/ChatBotApi/WebSocketApi/WebSocketApi/$disconnect-Route/DisconnectIntegration-Permission
  ChatBotApiWebSocketApidisconnectRouteDisconnectIntegrationF88393E8:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: ChatBotApiWebSocketApi31976E25
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":apigateway:"
            - Ref: AWS::Region
            - :lambda:path/2015-03-31/functions/
            - Fn::GetAtt:
                - ChatBotApiWebSocketApiConnectionHandlerFunction876D504F
                - Arn
            - /invocations
    Metadata:
      aws:cdk:path: GenAIChatBotStack/ChatBotApi/WebSocketApi/WebSocketApi/$disconnect-Route/DisconnectIntegration/Resource
  ChatBotApiWebSocketApidisconnectRoute17E47874:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: ChatBotApiWebSocketApi31976E25
      AuthorizationType: NONE
      RouteKey: $disconnect
      Target:
        Fn::Join:
          - ""
          - - integrations/
            - Ref: ChatBotApiWebSocketApidisconnectRouteDisconnectIntegrationF88393E8
    Metadata:
      aws:cdk:path: GenAIChatBotStack/ChatBotApi/WebSocketApi/WebSocketApi/$disconnect-Route/Resource
  ChatBotApiWebSocketApidefaultRouteDefaultIntegrationPermission81FA1CA4:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - ChatBotApiWebSocketApiIncomingMessageHandlerFunctionD4A713CE
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: ChatBotApiWebSocketApi31976E25
            - /*/*$default
    Metadata:
      aws:cdk:path: GenAIChatBotStack/ChatBotApi/WebSocketApi/WebSocketApi/$default-Route/DefaultIntegration-Permission
  ChatBotApiWebSocketApidefaultRouteDefaultIntegrationEF90B010:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: ChatBotApiWebSocketApi31976E25
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":apigateway:"
            - Ref: AWS::Region
            - :lambda:path/2015-03-31/functions/
            - Fn::GetAtt:
                - ChatBotApiWebSocketApiIncomingMessageHandlerFunctionD4A713CE
                - Arn
            - /invocations
    Metadata:
      aws:cdk:path: GenAIChatBotStack/ChatBotApi/WebSocketApi/WebSocketApi/$default-Route/DefaultIntegration/Resource
  ChatBotApiWebSocketApidefaultRouteD551DF9F:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: ChatBotApiWebSocketApi31976E25
      AuthorizationType: NONE
      RouteKey: $default
      Target:
        Fn::Join:
          - ""
          - - integrations/
            - Ref: ChatBotApiWebSocketApidefaultRouteDefaultIntegrationEF90B010
    Metadata:
      aws:cdk:path: GenAIChatBotStack/ChatBotApi/WebSocketApi/WebSocketApi/$default-Route/Resource
  ChatBotApiWebSocketApiWebSocketApiStage21C52B11:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      ApiId:
        Ref: ChatBotApiWebSocketApi31976E25
      AutoDeploy: true
      StageName: socket
    Metadata:
      aws:cdk:path: GenAIChatBotStack/ChatBotApi/WebSocketApi/WebSocketApiStage/Resource
  ChatBotApiWebSocketApiIncomingMessageHandlerFunctionServiceRoleF42D8628:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: GenAIChatBotStack/ChatBotApi/WebSocketApi/IncomingMessageHandlerFunction/ServiceRole/Resource
  ChatBotApiWebSocketApiIncomingMessageHandlerFunctionServiceRoleDefaultPolicy3C016B75:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - xray:PutTelemetryRecords
              - xray:PutTraceSegments
            Effect: Allow
            Resource: "*"
          - Action: sns:Publish
            Effect: Allow
            Resource:
              Ref: ChatBotApiWebSocketApiMessagesTopic2C2AF1B2
          - Action: events:PutEvents
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:aws:events:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :event-bus/default
          - Action: execute-api:ManageConnections
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:aws:execute-api:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - ":"
                  - Ref: ChatBotApiWebSocketApi31976E25
                  - /socket/*/*
        Version: "2012-10-17"
      PolicyName: ChatBotApiWebSocketApiIncomingMessageHandlerFunctionServiceRoleDefaultPolicy3C016B75
      Roles:
        - Ref: ChatBotApiWebSocketApiIncomingMessageHandlerFunctionServiceRoleF42D8628
    Metadata:
      aws:cdk:path: GenAIChatBotStack/ChatBotApi/WebSocketApi/IncomingMessageHandlerFunction/ServiceRole/DefaultPolicy/Resource
  ChatBotApiWebSocketApiIncomingMessageHandlerFunctionD4A713CE:
    Type: AWS::Lambda::Function
    Properties:
      Architectures:
        - arm64
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 5e685d2445a64ee6254e9834638dc622b11b024ae4c7d41824a2639cf37b3537.zip
      Environment:
        Variables:
          POWERTOOLS_DEV: "true"
          LOG_LEVEL: INFO
          POWERTOOLS_LOGGER_LOG_EVENT: "true"
          POWERTOOLS_SERVICE_NAME: chatbot
          MESSAGES_TOPIC_ARN:
            Ref: ChatBotApiWebSocketApiMessagesTopic2C2AF1B2
          WEBSOCKET_API_ENDPOINT:
            Fn::Join:
              - ""
              - - https://
                - Ref: ChatBotApiWebSocketApi31976E25
                - .execute-api.
                - Ref: AWS::Region
                - "."
                - Ref: AWS::URLSuffix
                - /socket
      Handler: index.handler
      Layers:
        - Fn::Join:
            - ""
            - - "arn:aws:lambda:"
              - Ref: AWS::Region
              - :017000801446:layer:AWSLambdaPowertoolsPythonV2-Arm64:42
      Role:
        Fn::GetAtt:
          - ChatBotApiWebSocketApiIncomingMessageHandlerFunctionServiceRoleF42D8628
          - Arn
      Runtime: python3.11
      TracingConfig:
        Mode: Active
    DependsOn:
      - ChatBotApiWebSocketApiIncomingMessageHandlerFunctionServiceRoleDefaultPolicy3C016B75
      - ChatBotApiWebSocketApiIncomingMessageHandlerFunctionServiceRoleF42D8628
    Metadata:
      aws:cdk:path: GenAIChatBotStack/ChatBotApi/WebSocketApi/IncomingMessageHandlerFunction/Resource
      aws:asset:path: asset.5e685d2445a64ee6254e9834638dc622b11b024ae4c7d41824a2639cf37b3537
      aws:asset:is-bundled: false
      aws:asset:property: Code
  ChatBotApiWebSocketApiOutgoingMessageFunctionServiceRole55CA767D:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: GenAIChatBotStack/ChatBotApi/WebSocketApi/OutgoingMessageFunction/ServiceRole/Resource
  ChatBotApiWebSocketApiOutgoingMessageFunctionServiceRoleDefaultPolicyF9316CB0:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - xray:PutTelemetryRecords
              - xray:PutTraceSegments
            Effect: Allow
            Resource: "*"
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:ConditionCheckItem
              - dynamodb:DescribeTable
              - dynamodb:GetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:Query
              - dynamodb:Scan
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - ChatBotApiWebSocketApiConnectionsTable445E2903
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - ChatBotApiWebSocketApiConnectionsTable445E2903
                        - Arn
                    - /index/*
          - Action: execute-api:ManageConnections
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:aws:execute-api:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - ":"
                  - Ref: ChatBotApiWebSocketApi31976E25
                  - /socket/*/*
          - Action:
              - sqs:ChangeMessageVisibility
              - sqs:DeleteMessage
              - sqs:GetQueueAttributes
              - sqs:GetQueueUrl
              - sqs:ReceiveMessage
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - ChatBotApiWebSocketApiOutgoingMessagesQueueAB7186DA
                - Arn
        Version: "2012-10-17"
      PolicyName: ChatBotApiWebSocketApiOutgoingMessageFunctionServiceRoleDefaultPolicyF9316CB0
      Roles:
        - Ref: ChatBotApiWebSocketApiOutgoingMessageFunctionServiceRole55CA767D
    Metadata:
      aws:cdk:path: GenAIChatBotStack/ChatBotApi/WebSocketApi/OutgoingMessageFunction/ServiceRole/DefaultPolicy/Resource
  ChatBotApiWebSocketApiOutgoingMessageFunctionBA6DD525:
    Type: AWS::Lambda::Function
    Properties:
      Architectures:
        - arm64
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: b78734ff92dde80439eea6286e6647198d1f08e03382f5fe2cf5791ae54e9511.zip
      Environment:
        Variables:
          POWERTOOLS_DEV: "true"
          LOG_LEVEL: INFO
          POWERTOOLS_LOGGER_LOG_EVENT: "true"
          POWERTOOLS_SERVICE_NAME: chatbot
          WEBSOCKET_API_ENDPOINT:
            Fn::Join:
              - ""
              - - https://
                - Ref: ChatBotApiWebSocketApi31976E25
                - .execute-api.
                - Ref: AWS::Region
                - "."
                - Ref: AWS::URLSuffix
                - /socket
          CONNECTIONS_TABLE_NAME:
            Ref: ChatBotApiWebSocketApiConnectionsTable445E2903
      Handler: index.handler
      Layers:
        - Fn::Join:
            - ""
            - - "arn:aws:lambda:"
              - Ref: AWS::Region
              - :017000801446:layer:AWSLambdaPowertoolsPythonV2-Arm64:42
      Role:
        Fn::GetAtt:
          - ChatBotApiWebSocketApiOutgoingMessageFunctionServiceRole55CA767D
          - Arn
      Runtime: python3.11
      TracingConfig:
        Mode: Active
    DependsOn:
      - ChatBotApiWebSocketApiOutgoingMessageFunctionServiceRoleDefaultPolicyF9316CB0
      - ChatBotApiWebSocketApiOutgoingMessageFunctionServiceRole55CA767D
    Metadata:
      aws:cdk:path: GenAIChatBotStack/ChatBotApi/WebSocketApi/OutgoingMessageFunction/Resource
      aws:asset:path: asset.b78734ff92dde80439eea6286e6647198d1f08e03382f5fe2cf5791ae54e9511
      aws:asset:is-bundled: false
      aws:asset:property: Code
  ChatBotApiWebSocketApiOutgoingMessageFunctionSqsEventSourceGenAIChatBotStackChatBotApiWebSocketApiOutgoingMessagesQueue4263BE5A68B5592E:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      EventSourceArn:
        Fn::GetAtt:
          - ChatBotApiWebSocketApiOutgoingMessagesQueueAB7186DA
          - Arn
      FunctionName:
        Ref: ChatBotApiWebSocketApiOutgoingMessageFunctionBA6DD525
    Metadata:
      aws:cdk:path: GenAIChatBotStack/ChatBotApi/WebSocketApi/OutgoingMessageFunction/SqsEventSource:GenAIChatBotStackChatBotApiWebSocketApiOutgoingMessagesQueue4263BE5A/Resource
  ChatBotApiWebSocketApiOutgoingMessagesDLQB3CBAA80:
    Type: AWS::SQS::Queue
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: GenAIChatBotStack/ChatBotApi/WebSocketApi/OutgoingMessagesDLQ/Resource
  ChatBotApiWebSocketApiOutgoingMessagesQueueAB7186DA:
    Type: AWS::SQS::Queue
    Properties:
      RedrivePolicy:
        deadLetterTargetArn:
          Fn::GetAtt:
            - ChatBotApiWebSocketApiOutgoingMessagesDLQB3CBAA80
            - Arn
        maxReceiveCount: 3
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: GenAIChatBotStack/ChatBotApi/WebSocketApi/OutgoingMessagesQueue/Resource
  ChatBotApiWebSocketApiOutgoingMessagesQueuePolicyC54563BC:
    Type: AWS::SQS::QueuePolicy
    Properties:
      PolicyDocument:
        Statement:
          - Action: sqs:SendMessage
            Effect: Allow
            Principal:
              Service:
                - events.amazonaws.com
                - sqs.amazonaws.com
            Resource:
              Fn::GetAtt:
                - ChatBotApiWebSocketApiOutgoingMessagesQueueAB7186DA
                - Arn
          - Action: sqs:SendMessage
            Condition:
              ArnEquals:
                aws:SourceArn:
                  Ref: ChatBotApiWebSocketApiMessagesTopic2C2AF1B2
            Effect: Allow
            Principal:
              Service: sns.amazonaws.com
            Resource:
              Fn::GetAtt:
                - ChatBotApiWebSocketApiOutgoingMessagesQueueAB7186DA
                - Arn
        Version: "2012-10-17"
      Queues:
        - Ref: ChatBotApiWebSocketApiOutgoingMessagesQueueAB7186DA
    Metadata:
      aws:cdk:path: GenAIChatBotStack/ChatBotApi/WebSocketApi/OutgoingMessagesQueue/Policy/Resource
  ChatBotApiWebSocketApiOutgoingMessagesQueueGenAIChatBotStackChatBotApiWebSocketApiMessagesTopicA50027D7FADB16F3:
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint:
        Fn::GetAtt:
          - ChatBotApiWebSocketApiOutgoingMessagesQueueAB7186DA
          - Arn
      FilterPolicy:
        direction:
          - OUT
      FilterPolicyScope: MessageBody
      Protocol: sqs
      TopicArn:
        Ref: ChatBotApiWebSocketApiMessagesTopic2C2AF1B2
    DependsOn:
      - ChatBotApiWebSocketApiOutgoingMessagesQueuePolicyC54563BC
    Metadata:
      aws:cdk:path: GenAIChatBotStack/ChatBotApi/WebSocketApi/OutgoingMessagesQueue/GenAIChatBotStackChatBotApiWebSocketApiMessagesTopicA50027D7/Resource
  LangchainInterfaceRequestHandlerServiceRole2FA1A914:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
    DependsOn:
      - SharedVPCprivateSubnet1DefaultRoute608F3753
      - SharedVPCprivateSubnet1RouteTableAssociation83D920FA
      - SharedVPCprivateSubnet2DefaultRoute4387C202
      - SharedVPCprivateSubnet2RouteTableAssociation6788E94C
    Metadata:
      aws:cdk:path: GenAIChatBotStack/LangchainInterface/RequestHandler/ServiceRole/Resource
  LangchainInterfaceRequestHandlerServiceRoleDefaultPolicy0D4DC356:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - bedrock:*
              - comprehend:DetectDominantLanguage
              - comprehend:DetectSentiment
              - xray:PutTelemetryRecords
              - xray:PutTraceSegments
            Effect: Allow
            Resource: "*"
          - Action:
              - secretsmanager:DescribeSecret
              - secretsmanager:GetSecretValue
            Effect: Allow
            Resource:
              - Ref: RagEnginesAuroraPgVectorAuroraDatabaseSecretAttachmentA167E2A9
              - Ref: SharedApiKeysSecret9EA666ED
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:BatchWriteItem
              - dynamodb:ConditionCheckItem
              - dynamodb:DeleteItem
              - dynamodb:DescribeTable
              - dynamodb:GetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:PutItem
              - dynamodb:Query
              - dynamodb:Scan
              - dynamodb:UpdateItem
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - ChatBotApiChatDynamoDBTablesSessionsTable92B891E3
                  - Arn
              - Fn::GetAtt:
                  - RagEnginesRagDynamoDBTablesDocumentsF6F2B272
                  - Arn
              - Fn::GetAtt:
                  - RagEnginesRagDynamoDBTablesWorkspacesD2D3C0C4
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - ChatBotApiChatDynamoDBTablesSessionsTable92B891E3
                        - Arn
                    - /index/*
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - RagEnginesRagDynamoDBTablesDocumentsF6F2B272
                        - Arn
                    - /index/*
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - RagEnginesRagDynamoDBTablesWorkspacesD2D3C0C4
                        - Arn
                    - /index/*
          - Action: sagemaker:InvokeEndpoint
            Effect: Allow
            Resource:
              - Ref: LargeLanguageModelsLLamaV213BBasemetaLLama213b3740E139
              - Ref: RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2Endpoint0DE6C18E
          - Action: sns:Publish
            Effect: Allow
            Resource:
              Ref: ChatBotApiWebSocketApiMessagesTopic2C2AF1B2
          - Action:
              - ssm:DescribeParameters
              - ssm:GetParameter
              - ssm:GetParameterHistory
              - ssm:GetParameters
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":ssm:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :parameter/
                  - Ref: SharedConfig358B4A20
          - Action:
              - sqs:ChangeMessageVisibility
              - sqs:DeleteMessage
              - sqs:GetQueueAttributes
              - sqs:GetQueueUrl
              - sqs:ReceiveMessage
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - LangchainInterfaceGenericModelQueue105C954D
                - Arn
        Version: "2012-10-17"
      PolicyName: LangchainInterfaceRequestHandlerServiceRoleDefaultPolicy0D4DC356
      Roles:
        - Ref: LangchainInterfaceRequestHandlerServiceRole2FA1A914
    DependsOn:
      - SharedVPCprivateSubnet1DefaultRoute608F3753
      - SharedVPCprivateSubnet1RouteTableAssociation83D920FA
      - SharedVPCprivateSubnet2DefaultRoute4387C202
      - SharedVPCprivateSubnet2RouteTableAssociation6788E94C
    Metadata:
      aws:cdk:path: GenAIChatBotStack/LangchainInterface/RequestHandler/ServiceRole/DefaultPolicy/Resource
  LangchainInterfaceRequestHandlerSecurityGroup5FED03E5:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Automatic security group for Lambda Function GenAIChatBotStackLangchainInterfaceRequestHandler7E51C60D
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: SharedVPC6716DA5E
    DependsOn:
      - SharedVPCprivateSubnet1DefaultRoute608F3753
      - SharedVPCprivateSubnet1RouteTableAssociation83D920FA
      - SharedVPCprivateSubnet2DefaultRoute4387C202
      - SharedVPCprivateSubnet2RouteTableAssociation6788E94C
    Metadata:
      aws:cdk:path: GenAIChatBotStack/LangchainInterface/RequestHandler/SecurityGroup/Resource
  LangchainInterfaceRequestHandler472B9584:
    Type: AWS::Lambda::Function
    Properties:
      Architectures:
        - arm64
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 20270215d232ba3919a995d64559731de6bcd8f0f2b8b00279f64d2b2ab46cdd.zip
      Environment:
        Variables:
          POWERTOOLS_DEV: "true"
          LOG_LEVEL: INFO
          POWERTOOLS_LOGGER_LOG_EVENT: "true"
          POWERTOOLS_SERVICE_NAME: chatbot
          CONFIG_PARAMETER_NAME:
            Ref: SharedConfig358B4A20
          SESSIONS_TABLE_NAME:
            Ref: ChatBotApiChatDynamoDBTablesSessionsTable92B891E3
          SESSIONS_BY_USER_ID_INDEX_NAME: byUserId
          API_KEYS_SECRETS_ARN:
            Ref: SharedApiKeysSecret9EA666ED
          MESSAGES_TOPIC_ARN:
            Ref: ChatBotApiWebSocketApiMessagesTopic2C2AF1B2
          WORKSPACES_TABLE_NAME:
            Ref: RagEnginesRagDynamoDBTablesWorkspacesD2D3C0C4
          WORKSPACES_BY_OBJECT_TYPE_INDEX_NAME: by_object_type_idx
          AURORA_DB_SECRET_ID:
            Ref: RagEnginesAuroraPgVectorAuroraDatabaseSecretAttachmentA167E2A9
          SAGEMAKER_RAG_MODELS_ENDPOINT:
            Fn::GetAtt:
              - RagEnginesSageMakerRagModelsermsmarcoMiniLML12v2Endpoint0DE6C18E
              - EndpointName
          SAGEMAKER_ENDPOINT_METALLAMA213BBASE:
            Fn::GetAtt:
              - LargeLanguageModelsLLamaV213BBasemetaLLama213b3740E139
              - EndpointName
      Handler: index.handler
      Layers:
        - Ref: SharedCommonLayerFC89CBCE
        - Fn::Join:
            - ""
            - - "arn:aws:lambda:"
              - Ref: AWS::Region
              - :017000801446:layer:AWSLambdaPowertoolsPythonV2-Arm64:42
        - Ref: SharedPythonSDKLayer19AC43CF
      MemorySize: 1024
      Role:
        Fn::GetAtt:
          - LangchainInterfaceRequestHandlerServiceRole2FA1A914
          - Arn
      Runtime: python3.11
      Timeout: 900
      TracingConfig:
        Mode: Active
      VpcConfig:
        SecurityGroupIds:
          - Fn::GetAtt:
              - LangchainInterfaceRequestHandlerSecurityGroup5FED03E5
              - GroupId
        SubnetIds:
          - Ref: SharedVPCprivateSubnet1Subnet5A4C2616
          - Ref: SharedVPCprivateSubnet2SubnetF203CD06
    DependsOn:
      - LangchainInterfaceRequestHandlerServiceRoleDefaultPolicy0D4DC356
      - LangchainInterfaceRequestHandlerServiceRole2FA1A914
      - SharedVPCprivateSubnet1DefaultRoute608F3753
      - SharedVPCprivateSubnet1RouteTableAssociation83D920FA
      - SharedVPCprivateSubnet2DefaultRoute4387C202
      - SharedVPCprivateSubnet2RouteTableAssociation6788E94C
    Metadata:
      aws:cdk:path: GenAIChatBotStack/LangchainInterface/RequestHandler/Resource
      aws:asset:path: asset.20270215d232ba3919a995d64559731de6bcd8f0f2b8b00279f64d2b2ab46cdd
      aws:asset:is-bundled: false
      aws:asset:property: Code
  LangchainInterfaceRequestHandlerSqsEventSourceGenAIChatBotStackLangchainInterfaceGenericModelQueueA9CB237E982FA4FA:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      EventSourceArn:
        Fn::GetAtt:
          - LangchainInterfaceGenericModelQueue105C954D
          - Arn
      FunctionName:
        Ref: LangchainInterfaceRequestHandler472B9584
    DependsOn:
      - SharedVPCprivateSubnet1DefaultRoute608F3753
      - SharedVPCprivateSubnet1RouteTableAssociation83D920FA
      - SharedVPCprivateSubnet2DefaultRoute4387C202
      - SharedVPCprivateSubnet2RouteTableAssociation6788E94C
    Metadata:
      aws:cdk:path: GenAIChatBotStack/LangchainInterface/RequestHandler/SqsEventSource:GenAIChatBotStackLangchainInterfaceGenericModelQueueA9CB237E/Resource
  LangchainInterfaceGenericModelDLQEB17580E:
    Type: AWS::SQS::Queue
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: GenAIChatBotStack/LangchainInterface/GenericModelDLQ/Resource
  LangchainInterfaceGenericModelQueue105C954D:
    Type: AWS::SQS::Queue
    Properties:
      RedrivePolicy:
        deadLetterTargetArn:
          Fn::GetAtt:
            - LangchainInterfaceGenericModelDLQEB17580E
            - Arn
        maxReceiveCount: 3
      VisibilityTimeout: 5400
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: GenAIChatBotStack/LangchainInterface/GenericModelQueue/Resource
  LangchainInterfaceGenericModelQueuePolicy84F81D7E:
    Type: AWS::SQS::QueuePolicy
    Properties:
      PolicyDocument:
        Statement:
          - Action: sqs:SendMessage
            Effect: Allow
            Principal:
              Service:
                - events.amazonaws.com
                - sqs.amazonaws.com
            Resource:
              Fn::GetAtt:
                - LangchainInterfaceGenericModelQueue105C954D
                - Arn
          - Action: sqs:SendMessage
            Condition:
              ArnEquals:
                aws:SourceArn:
                  Ref: ChatBotApiWebSocketApiMessagesTopic2C2AF1B2
            Effect: Allow
            Principal:
              Service: sns.amazonaws.com
            Resource:
              Fn::GetAtt:
                - LangchainInterfaceGenericModelQueue105C954D
                - Arn
        Version: "2012-10-17"
      Queues:
        - Ref: LangchainInterfaceGenericModelQueue105C954D
    Metadata:
      aws:cdk:path: GenAIChatBotStack/LangchainInterface/GenericModelQueue/Policy/Resource
  LangchainInterfaceGenericModelQueueGenAIChatBotStackChatBotApiWebSocketApiMessagesTopicA50027D7226E1BAC:
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint:
        Fn::GetAtt:
          - LangchainInterfaceGenericModelQueue105C954D
          - Arn
      FilterPolicy:
        direction:
          - IN
      FilterPolicyScope: MessageBody
      Protocol: sqs
      TopicArn:
        Ref: ChatBotApiWebSocketApiMessagesTopic2C2AF1B2
    DependsOn:
      - LangchainInterfaceGenericModelQueuePolicy84F81D7E
    Metadata:
      aws:cdk:path: GenAIChatBotStack/LangchainInterface/GenericModelQueue/GenAIChatBotStackChatBotApiWebSocketApiMessagesTopicA50027D7/Resource
  UserInterfaceWebsiteBucket2BDEA247:
    Type: AWS::S3::Bucket
    Properties:
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: aws-cdk:auto-delete-objects
          Value: "true"
        - Key: aws-cdk:cr-owned:7b917729
          Value: "true"
      WebsiteConfiguration:
        ErrorDocument: index.html
        IndexDocument: index.html
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: GenAIChatBotStack/UserInterface/WebsiteBucket/Resource
  UserInterfaceWebsiteBucketPolicyEE27C04B:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: UserInterfaceWebsiteBucket2BDEA247
      PolicyDocument:
        Statement:
          - Action:
              - s3:DeleteObject*
              - s3:GetBucket*
              - s3:List*
            Effect: Allow
            Principal:
              AWS:
                Fn::GetAtt:
                  - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
                  - Arn
            Resource:
              - Fn::GetAtt:
                  - UserInterfaceWebsiteBucket2BDEA247
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - UserInterfaceWebsiteBucket2BDEA247
                        - Arn
                    - /*
          - Action:
              - s3:GetBucket*
              - s3:GetObject*
              - s3:List*
            Effect: Allow
            Principal:
              CanonicalUser:
                Fn::GetAtt:
                  - UserInterfaceS3OAI99D8DEDB
                  - S3CanonicalUserId
            Resource:
              - Fn::GetAtt:
                  - UserInterfaceWebsiteBucket2BDEA247
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - UserInterfaceWebsiteBucket2BDEA247
                        - Arn
                    - /*
          - Action: s3:GetObject
            Effect: Allow
            Principal:
              CanonicalUser:
                Fn::GetAtt:
                  - UserInterfaceS3OAI99D8DEDB
                  - S3CanonicalUserId
            Resource:
              Fn::Join:
                - ""
                - - Fn::GetAtt:
                      - UserInterfaceWebsiteBucket2BDEA247
                      - Arn
                  - /*
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: GenAIChatBotStack/UserInterface/WebsiteBucket/Policy/Resource
  UserInterfaceWebsiteBucketAutoDeleteObjectsCustomResourceD0AC653B:
    Type: Custom::S3AutoDeleteObjects
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F
          - Arn
      BucketName:
        Ref: UserInterfaceWebsiteBucket2BDEA247
    DependsOn:
      - UserInterfaceWebsiteBucketPolicyEE27C04B
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: GenAIChatBotStack/UserInterface/WebsiteBucket/AutoDeleteObjectsCustomResource/Default
  UserInterfaceS3OAI99D8DEDB:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: Allows CloudFront to reach the bucket
    Metadata:
      aws:cdk:path: GenAIChatBotStack/UserInterface/S3OAI/Resource
  UserInterfaceDistirbutionCFDistribution09FCA192:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        CacheBehaviors:
          - AllowedMethods:
              - DELETE
              - GET
              - HEAD
              - OPTIONS
              - PATCH
              - POST
              - PUT
            CachedMethods:
              - GET
              - HEAD
            Compress: true
            DefaultTTL: 0
            ForwardedValues:
              Headers:
                - Referer
                - Origin
                - Authorization
                - Content-Type
                - x-forwarded-user
                - Access-Control-Request-Headers
                - Access-Control-Request-Method
              QueryString: true
            PathPattern: /api/*
            TargetOriginId: origin2
            ViewerProtocolPolicy: redirect-to-https
          - AllowedMethods:
              - DELETE
              - GET
              - HEAD
              - OPTIONS
              - PATCH
              - POST
              - PUT
            CachedMethods:
              - GET
              - HEAD
            Compress: true
            ForwardedValues:
              Headers:
                - Sec-WebSocket-Key
                - Sec-WebSocket-Version
                - Sec-WebSocket-Protocol
                - Sec-WebSocket-Accept
                - Sec-WebSocket-Extensions
              QueryString: true
            PathPattern: /socket
            TargetOriginId: origin3
            ViewerProtocolPolicy: redirect-to-https
        CustomErrorResponses:
          - ErrorCachingMinTTL: 0
            ErrorCode: 404
            ResponseCode: 200
            ResponsePagePath: /index.html
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
          CachedMethods:
            - GET
            - HEAD
          Compress: true
          ForwardedValues:
            Cookies:
              Forward: none
            QueryString: false
          TargetOriginId: origin1
          ViewerProtocolPolicy: redirect-to-https
        DefaultRootObject: index.html
        Enabled: true
        HttpVersion: http2and3
        IPV6Enabled: true
        Origins:
          - ConnectionAttempts: 3
            ConnectionTimeout: 10
            DomainName:
              Fn::GetAtt:
                - UserInterfaceWebsiteBucket2BDEA247
                - RegionalDomainName
            Id: origin1
            S3OriginConfig:
              OriginAccessIdentity:
                Fn::Join:
                  - ""
                  - - origin-access-identity/cloudfront/
                    - Ref: UserInterfaceS3OAI99D8DEDB
          - ConnectionAttempts: 3
            ConnectionTimeout: 10
            CustomOriginConfig:
              HTTPPort: 80
              HTTPSPort: 443
              OriginKeepaliveTimeout: 5
              OriginProtocolPolicy: https-only
              OriginReadTimeout: 30
              OriginSSLProtocols:
                - TLSv1.2
            DomainName:
              Fn::Join:
                - ""
                - - Ref: ChatBotApiRestApiChatBotApi27963910
                  - .execute-api.
                  - Ref: AWS::Region
                  - "."
                  - Ref: AWS::URLSuffix
            Id: origin2
            OriginCustomHeaders:
              - HeaderName: X-Origin-Verify
                HeaderValue:
                  Fn::Join:
                    - ""
                    - - "{{resolve:secretsmanager:"
                      - Ref: SharedXOriginVerifySecret258B0376
                      - :SecretString:headerValue::}}
          - ConnectionAttempts: 3
            ConnectionTimeout: 10
            CustomOriginConfig:
              HTTPPort: 80
              HTTPSPort: 443
              OriginKeepaliveTimeout: 5
              OriginProtocolPolicy: https-only
              OriginReadTimeout: 30
              OriginSSLProtocols:
                - TLSv1.2
            DomainName:
              Fn::Join:
                - ""
                - - Ref: ChatBotApiWebSocketApi31976E25
                  - .execute-api.
                  - Ref: AWS::Region
                  - "."
                  - Ref: AWS::URLSuffix
            Id: origin3
            OriginCustomHeaders:
              - HeaderName: X-Origin-Verify
                HeaderValue:
                  Fn::Join:
                    - ""
                    - - "{{resolve:secretsmanager:"
                      - Ref: SharedXOriginVerifySecret258B0376
                      - :SecretString:headerValue::}}
        PriceClass: PriceClass_All
        ViewerCertificate:
          CloudFrontDefaultCertificate: true
    Metadata:
      aws:cdk:path: GenAIChatBotStack/UserInterface/Distirbution/CFDistribution
  UserInterfaceUserInterfaceDeploymentAwsCliLayerDB546DB8:
    Type: AWS::Lambda::LayerVersion
    Properties:
      Content:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: e2277687077a2abf9ae1af1cc9565e6715e2ebb62f79ec53aa75a1af9298f642.zip
      Description: /opt/awscli/aws
    Metadata:
      aws:cdk:path: GenAIChatBotStack/UserInterface/UserInterfaceDeployment/AwsCliLayer/Resource
      aws:asset:path: asset.e2277687077a2abf9ae1af1cc9565e6715e2ebb62f79ec53aa75a1af9298f642.zip
      aws:asset:is-bundled: false
      aws:asset:property: Content
  UserInterfaceUserInterfaceDeploymentCustomResource05D90D2B:
    Type: Custom::CDKBucketDeployment
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536
          - Arn
      SourceBucketNames:
        - Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        - Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
      SourceObjectKeys:
        - b326117878379ac8be68a7a4d26e81e9bcab414d3a3cd0060f3df8ff6c68268f.zip
        - 86ece3bf74bc29ad7445e905a7c2357c8e8b248bb7cf15db5523f071f0b15309.zip
      SourceMarkers:
        - {}
        - <<marker:0xbaba:0>>:
            Ref: AWS::Region
          <<marker:0xbaba:1>>:
            Ref: AWS::Region
          <<marker:0xbaba:2>>:
            Ref: AuthenticationUserPool28698864
          <<marker:0xbaba:3>>:
            Ref: AuthenticationUserPoolUserPoolClient8AE1704E
          <<marker:0xbaba:4>>:
            Fn::GetAtt:
              - UserInterfaceDistirbutionCFDistribution09FCA192
              - DomainName
          <<marker:0xbaba:5>>:
            Fn::GetAtt:
              - UserInterfaceDistirbutionCFDistribution09FCA192
              - DomainName
      DestinationBucketName:
        Ref: UserInterfaceWebsiteBucket2BDEA247
      Prune: true
      DistributionId:
        Ref: UserInterfaceDistirbutionCFDistribution09FCA192
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: GenAIChatBotStack/UserInterface/UserInterfaceDeployment/CustomResource/Default
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/31V227bOBD9lr4zTOEFCvRtHdspXCQbrZ2mjwZFjWXGEqnlxYFX0L/v8CJK6QZ9Mc8Mh8OjmcPxgn79QvvFJ/Zmbnh1vmlESfu9ZfxM0HXogS9o/9JxsjrKl2JFClc2gu9dKcF634R2yll4ZmUDk3/yLY1RXDArlMzBHmy2hV/+YvYbs/DGrqTQ4oJwSryVFjTiMSAySdbSItdTC9KS5EGyG1l1SkibQrMZMh0Zh3nMHrjTwl6/aeW6QP23jq2sNRgzEGNaXyktZF0wzVrA3D46Gxjyx6FnxoA1dOkXUkHXqKtnS+8cP4NdZ4ePpn303jEDJEKfMaG4FArrf53c0R5Iw9qyYrR/YFfQL6BNqvQ7e49kG7BK3jvJQy8ywNCMNxcktFdOc3hkXYeHQqs+9BagW2F8dvwC4Bo/tmWS1aCxOsFOJfQoLs9M12BnncsBv+4MhKtaCqto/8OALpRqfHDGI1g1IuV57xmIYNilnYqiDOtUwLF0Btm27OwZo/dRVRBuGRWyUvIo6rlnINVVslZV+Fay4gPwhCsonWgq2hdavQIPtBIciK4M7dfMshJ7vGqc8aqJWs96W9/NHWPwVMz13XgwGFtpLJMc725UbeiDqncoPxk6iVHdMbXVHCwzZ399IP+jq/DBbC205CFoZysv6oxZ3p2h/T0TDTLkHKAiOBksdp+fhIzP/J2NpFQbXGR1UsJTMv9gir8duBAeQfid2jAzB1Iyy0/+Ul1jmpVqOxwUG3kRWslRKx94v6syX5LxhpucR1qGFPUajgL1FETODUbOHPHo5BgIVvyQ3u9a4WPT2xalEp8y7tEddMqgOvU1vFjWiTrOIJQcGLvsRFBdgtNbD32bLKxYPVYTAcaHRxZyPoI9qcpvJjTupswZLx1ua/FvmDu+b8+qE2FsR4CSMlyLbvzUuT3MqF8W4RUk7n5i1vr/Y3u6LfNG6TfKVUdsiaX9kxa1kEtUjTHbyqvRhmavfMy9j/k4Im//hHItDI7X0o23z+1hmFUi6O7DwoReeXppWj05i9L55QQ+zouo4qeMky2O00Pjp+cB/wl5I+jyzeBYCQOV8JDhoFMKQ+dJUG5VktDihjXdidHPn/5Mf7G3fp3XO0X0+MV7r7IglmzEkmdz3pDpwNSN7Is9GYjEeURfze1l8ZkukMarEeJGOyx3C3QX1/8AiAZ4xgUIAAA=
    Metadata:
      aws:cdk:path: GenAIChatBotStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Outputs:
  SharedApiKeysSecretName3D265ECA:
    Value:
      Fn::Join:
        - "-"
        - - Fn::Select:
              - 0
              - Fn::Split:
                  - "-"
                  - Fn::Select:
                      - 6
                      - Fn::Split:
                          - ":"
                          - Ref: SharedApiKeysSecret9EA666ED
          - Fn::Select:
              - 1
              - Fn::Split:
                  - "-"
                  - Fn::Select:
                      - 6
                      - Fn::Split:
                          - ":"
                          - Ref: SharedApiKeysSecret9EA666ED
  AuthenticationUserPoolIdF0D106F7:
    Value:
      Ref: AuthenticationUserPool28698864
  ChatBotApiRestApiChatBotApiEndpoint79EBF607:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: ChatBotApiRestApiChatBotApi27963910
          - .execute-api.
          - Ref: AWS::Region
          - "."
          - Ref: AWS::URLSuffix
          - /
          - Ref: ChatBotApiRestApiChatBotApiDeploymentStageapiC136BEAF
          - /
  UserInterfaceUserInterfaceDomanNameF443CB7D:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Fn::GetAtt:
              - UserInterfaceDistirbutionCFDistribution09FCA192
              - DomainName
Mappings:
  LargeLanguageModelsLLamaV213BBaseLlama2BasePackageMappingA03FA310:
    eu-west-1:
      arn: arn:aws:sagemaker:eu-west-1:985815980388:model-package/llama2-13b-v3-8f4d5693a64a320ab0e8207af3551ae4
  RagEnginesSageMakerRagModelsImageRepositoryCfnMappingEAA1150E:
    af-south-1:
      account: "626614931356"
    ap-east-1:
      account: "871362719292"
    ap-northeast-1:
      account: "763104351884"
    ap-northeast-2:
      account: "763104351884"
    ap-northeast-3:
      account: "364406365360"
    ap-south-1:
      account: "763104351884"
    ap-south-2:
      account: "772153158452"
    ap-southeast-1:
      account: "763104351884"
    ap-southeast-2:
      account: "763104351884"
    ap-southeast-3:
      account: "907027046896"
    ap-southeast-4:
      account: "457447274322"
    ca-central-1:
      account: "763104351884"
    cn-north-1:
      account: "727897471807"
    cn-northwest-1:
      account: "727897471807"
    eu-central-1:
      account: "763104351884"
    eu-central-2:
      account: "380420809688"
    eu-north-1:
      account: "763104351884"
    eu-west-1:
      account: "763104351884"
    eu-west-2:
      account: "763104351884"
    eu-west-3:
      account: "763104351884"
    eu-south-1:
      account: "692866216735"
    eu-south-2:
      account: "503227376785"
    me-south-1:
      account: "217643126080"
    me-central-1:
      account: "914824155844"
    sa-east-1:
      account: "763104351884"
    us-east-1:
      account: "763104351884"
    us-east-2:
      account: "763104351884"
    us-gov-east-1:
      account: "446045086412"
    us-gov-west-1:
      account: "442386744353"
    us-iso-east-1:
      account: "886529160074"
    us-isob-east-1:
      account: "094389454867"
    us-west-1:
      account: "763104351884"
    us-west-2:
      account: "763104351884"
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                - Ref: BootstrapVersion
        AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.

